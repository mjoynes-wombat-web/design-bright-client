{"version":3,"sources":["../static/js/0.81e4e44c.chunk.js","scenes/editCampaign/index.js","../node_modules/immutable/dist/immutable.js","components/message/index.js","assets/img/red-brush.png","assets/img/blue-brush.png","../node_modules/react-router-dom/Redirect.js","../node_modules/react-router/Redirect.js","../node_modules/slate/lib/constants/model-types.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_root.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isObject.js","../node_modules/slate/lib/models/mark.js","../node_modules/query-string/index.js","../node_modules/strict-uri-encode/index.js","../node_modules/decode-uri-component/index.js","../node_modules/slate/lib/models/node.js","../node_modules/lodash/_getNative.js","assets/img/orange-brush1.png","../node_modules/slate/lib/models/block.js","../node_modules/slate/lib/models/inline.js","../node_modules/slate/lib/utils/generate-key.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_copyObject.js","../node_modules/slate/lib/models/document.js","../node_modules/slate/lib/models/range.js","../node_modules/slate/lib/utils/memoize.js","../node_modules/slate/node_modules/debug/src/browser.js","../node_modules/lodash/eq.js","../node_modules/slate/lib/models/data.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isArguments.js","../node_modules/slate/lib/models/operation.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/keysIn.js","../node_modules/slate/lib/models/text.js","../node_modules/slate/lib/models/character.js","../node_modules/lodash/pick.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_assignValue.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_arrayPush.js","../node_modules/slate/lib/models/value.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/keys.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_cloneArrayBuffer.js","../node_modules/lodash/_getPrototype.js","../node_modules/slate/lib/models/leaf.js","../node_modules/slate/lib/changes/index.js","../node_modules/slate/lib/operations/invert.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_flatRest.js","../node_modules/lodash/_overRest.js","../node_modules/lodash/_setToString.js","../node_modules/lodash/identity.js","../node_modules/slate/lib/models/history.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/slate/lib/models/schema.js","../node_modules/lodash/_assignMergeValue.js","../node_modules/lodash/_cloneBuffer.js","../node_modules/lodash/_cloneTypedArray.js","../node_modules/lodash/_copyArray.js","../node_modules/lodash/_initCloneObject.js","../node_modules/lodash/isPlainObject.js","../node_modules/lodash/_safeGet.js","../node_modules/slate/lib/models/stack.js","../node_modules/slate/lib/operations/apply.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_getAllKeysIn.js","scenes/editCampaign/components/index.js","scenes/editCampaign/components/editor/index.js","../node_modules/slate/lib/index.js","../node_modules/direction/index.js","../node_modules/slate-dev-logger/lib/slate-dev-logger.es.js","../node_modules/slate/lib/utils/is-index-in-range.js","../node_modules/slate/lib/changes/at-current-range.js","../node_modules/slate/lib/changes/at-range.js","../node_modules/slate/lib/utils/string.js","../node_modules/esrever/esrever.js","../node_modules/slate/lib/changes/by-key.js","../node_modules/slate/lib/changes/on-history.js","../node_modules/slate/node_modules/debug/src/debug.js","../node_modules/ms/index.js","../node_modules/lodash/_basePick.js","../node_modules/lodash/_basePickBy.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_baseSet.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/flatten.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/_isFlattenable.js","../node_modules/lodash/_apply.js","../node_modules/lodash/_baseSetToString.js","../node_modules/lodash/constant.js","../node_modules/lodash/_shortOut.js","../node_modules/slate/lib/constants/operation-attributes.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/mergeWith.js","../node_modules/lodash/_baseMerge.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_baseMergeDeep.js","../node_modules/lodash/_baseCreate.js","../node_modules/lodash/isArrayLikeObject.js","../node_modules/lodash/toPlainObject.js","../node_modules/lodash/_baseKeysIn.js","../node_modules/lodash/_nativeKeysIn.js","../node_modules/lodash/_createAssigner.js","../node_modules/lodash/_baseRest.js","../node_modules/lodash/_isIterateeCall.js","../node_modules/slate/lib/constants/core-schema-rules.js","../node_modules/slate/lib/models/change.js","../node_modules/lodash/omit.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/isMap.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/isSet.js","../node_modules/lodash/_baseIsSet.js","../node_modules/lodash/_baseUnset.js","../node_modules/lodash/last.js","../node_modules/lodash/_parent.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_customOmitClone.js","../node_modules/slate/lib/changes/on-selection.js","../node_modules/is-empty/lib/index.js","../node_modules/slate/lib/changes/on-value.js","../node_modules/slate/lib/changes/with-schema.js","../node_modules/slate/lib/operations/index.js","../node_modules/is-url/index.js","scenes/editCampaign/components/editor/images.js","scenes/editCampaign/components/editor/toolbar.js","scenes/editCampaign/components/editor/createLink.js","scenes/editCampaign/components/editor/createImage.js","webpack:///./src/scenes/editCampaign/components/editor/scss/style.scss?7766","scenes/editCampaign/components/editor/scss/style.scss","webpack:///./src/scenes/editCampaign/components/scss/style.scss?9c0f","scenes/editCampaign/components/scss/style.scss"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Object","defineProperty","value","_reactRedux","_actions","_components","_components2","obj","__esModule","default","mapStateToProps","state","userAuth","userInfo","mapDispatchToProps","dispatch","onRequireAuth","requireAuth","connect","global","factory","this","createClass","ctor","superClass","prototype","create","constructor","Iterable","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","length","newArr","ii","ensureSize","iter","undefined","size","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","Iterator","next","iteratorValue","type","k","v","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","ArraySeq","array","_array","ObjectSeq","object","keys","_object","_keys","IterableSeq","_iterable","IteratorSeq","iterator","_iterator","_iteratorCache","isSeq","maybeSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","seq","isArray","TypeError","maybeIndexedSeqFromValue","seqIterate","fn","reverse","useKeys","cache","_cache","maxIndex","entry","__iterateUncached","seqIterator","__iteratorUncached","fromJS","json","converter","fromJSWith","","fromJSDefault","key","parentJSON","map","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","cacheResult","_","allEqual","bSize","has","get","NOT_SET","Repeat","times","_value","Infinity","EMPTY_REPEAT","invariant","condition","error","Error","Range","start","step","abs","_start","_end","_step","ceil","EMPTY_RANGE","Collection","KeyedCollection","IndexedCollection","SetCollection","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","toString","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","enumerable","configurable","writable","apply","arguments","nodeType","node","uniqueID","documentElement","assertNotInfinite","Map","emptyMap","isMap","withMutations","forEach","maybeMap","IS_MAP_SENTINEL","ArrayMapNode","ownerID","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","MapIterator","_type","_reverse","_stack","_root","mapIteratorFrame","mapIteratorValue","prev","__prev","makeMap","root","MapPrototype","__ownerID","__altered","EMPTY_MAP","updateMap","newRoot","newSize","didChangeSize","CHANGE_LENGTH","didAlter","DID_ALTER","updateNode","shift","update","isLeafNode","mergeIntoNode","newNode","idx1","MASK","idx2","SHIFT","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","SIZE","mergeIntoMapWith","merger","iterables","iters","push","mergeIntoCollectionWith","deepMerger","existing","mergeDeep","deepMergerWith","mergeDeepWith","nextValue","collection","filter","x","mergeIntoMap","updateInDeepMap","keyPathIter","notSetValue","updater","isNotSet","existingValue","newValue","nextExisting","nextUpdated","remove","popCount","setIn","idx","val","canEdit","newArray","spliceIn","newLen","after","spliceOut","pop","List","empty","emptyList","isList","makeList","VNode","toArray","list","setSize","i","maybeList","IS_LIST_SENTINEL","iterateList","iterateNodeOrLeaf","level","iterateLeaf","iterateNode","tailPos","tail","from","left","to","right","DONE","values","_origin","_capacity","getTailOffset","_tail","_level","origin","capacity","ListPrototype","EMPTY_LIST","updateList","setListBounds","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","editableVNode","slice","listNodeFor","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","clear","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","removeAfter","removeBefore","beginIndex","mergeIntoListWith","maxSize","OrderedMap","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","EMPTY_ORDERED_MAP","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","includes","cacheResultThrough","this$0","ITERATE_ENTRIES","__iterator","ITERATE_VALUES","ITERATE_KEYS","mapFactory","mapper","context","mappedSequence","c","reverseFactory","filterFactory","predicate","filterSequence","iterations","countByFactory","grouper","groups","asMutable","asImmutable","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","flatDeep","currentDepth","stopped","stack","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","validateEntry","resolveSize","forceIterator","keyPath","Record","defaultValues","name","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","makeRecord","likeRecord","record","getPrototypeOf","recordName","names","setProp","bind","Set","emptySet","isSet","add","maybeSet","IS_SET_SENTINEL","updateSet","__empty","__make","makeSet","SetPrototype","EMPTY_SET","OrderedSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","makeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","makeStack","head","StackPrototype","_head","EMPTY_STACK","mixin","methods","keyCopier","getOwnPropertySymbols","keyMapper","entryMapper","not","neg","quoteString","JSON","stringify","String","defaultZipper","defaultNegComparator","hashIterable","ordered","keyed","murmurHashOfSize","hashMerge","imul","SLICE$0","Keyed","Indexed","Symbol","ITERATOR_SYMBOL","KEYS","VALUES","ENTRIES","inspect","toSource","of","__toString","hasOwnProperty","searchValue","indexOf","lastIndexOf","other","possibleIndex","floor","offsetValue","d","e","WeakMap","keyValues","updateIn","deleteIn","updatedValue","merge","mergeWith","mergeIn","m","mergeDeepIn","sortBy","mutable","wasAltered","__ensureOwner","iterate","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","subNode","splice","insert","oldSize","unshift","originIndex","newChild","removingFirst","oldChild","editable","sizeIndex","valueSeq","indexedIterable","defaultVal","_empty","fromKeys","keySeq","union","intersect","originalSet","subtract","peek","pushAll","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","returnValue","find","findEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","isEmpty","countBy","entriesSequence","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyOf","last","lastKeyOf","maxBy","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","IterablePrototype","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith","_interopRequireDefault","_templateObject","strings","raw","freeze","defineProperties","_react","_react2","_styledComponents","_styledComponents2","_screenBreaks","_screenBreaks2","_redBrush","_redBrush2","_blueBrush","_blueBrush2","_icons","Message","_ref","message","onClearError","onClearMessage","className","createElement","id","CloseIcon","onClick","medium","p","_Redirect","_Redirect2","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","setPrototypeOf","__proto__","_propTypes","_propTypes2","_warning","_warning2","_invariant","_invariant2","_history","Redirect","_React$Component","isStatic","router","staticContext","componentWillMount","perform","componentDidMount","componentDidUpdate","prevProps","prevTo","createLocation","nextTo","props","locationsAreEqual","pathname","search","history","_props","replace","render","Component","propTypes","bool","oneOfType","isRequired","defaultProps","contextTypes","shape","func","MODEL_TYPES","BLOCK","CHANGE","CHARACTER","DOCUMENT","HISTORY","INLINE","LEAF","MARK","OPERATION","RANGE","SCHEMA","STACK","TEXT","VALUE","freeGlobal","freeSelf","Function","isObjectLike","isObject","_createClass","target","descriptor","protoProps","staticProps","_isPlainObject","_isPlainObject2","_immutable","_modelTypes","_modelTypes2","_data","_data2","_memoize","_memoize2","DEFAULTS","data","Mark","_Record","schema","__getComponent","kind","attrs","isMark","fromJSON","elements","_object$data","any","item","takesArguments","encoderForArrayFormat","opts","arrayFormat","encode","parserForArrayFormat","result","accumulator","exec","strict","strictUriEncode","encodeURIComponent","keysSorter","input","Number","objectAssign","decodeComponent","extract","str","queryStart","parse","formatter","ret","trim","split","param","parts","Boolean","val2","parseUrl","url","query","toUpperCase","decodeComponents","components","decodeURIComponent","err","decode","tokens","match","singleMatcher","customDecodeURIComponent","replaceMap","%FE%FF","%FF%FE","multiMatcher","RegExp","encodedURI","assertKey","arg","_direction","_direction2","_block","_block2","_document","_document2","_inline","_inline2","_range8","_range9","_text","_text2","_generateKey","_generateKey2","_isIndexInRange","_isIndexInRange2","Node","second","getKeysAsArray","firstIndex","secondIndex","child","getChild","descendant","getDescendant","getNode","path","getDescendantAtPath","matches","forEachDescendant","hasChild","ancestors","getAncestors","getBlocksAsArray","isLeafBlock","range","getBlocksAtRangeAsArray","normalize","isUnset","_range","startKey","endKey","startBlock","getClosestBlock","endBlock","blocks","getBlocksByTypeAsArray","getCharactersAsArray","characters","getCharactersAtRangeAsArray","getTextsAtRange","text","chars","char","getClosest","parent","isVoid","one","two","assertDescendant","oneParent","getParent","twoParent","decorations","createList","startAt","getFurthestAncestor","getDepth","descendantFound","_iteratorNormalCompletion","_didIteratorError","_iteratorError","return","getFirstText","_range2","startOffset","endOffset","startText","endText","previous","position","splitNode","getNextText","_index","_position","startNode","getNextSibling","endNode","startIndex","endIndex","getFurthest","hasDescendant","getInlinesAsArray","isLeafInline","getInlinesAtRangeAsArray","_this","getTextsAtRangeAsArray","getClosestInline","getInlinesByTypeAsArray","inlines","desc","getLastText","getMarksAsArray","marks","getMarksAtRangeAsArray","getActiveMarksAtRangeAsArray","_range3","isCollapsed","getPreviousText","getCharactersAtRange","memo","_range4","getMarksByTypeAsArray","getTexts","n","getOffset","isExpanded","_range5","assertNode","ancestor","__getPlaceholder","before","isSelected","isBlurred","dir","getTextsAsArray","_range6","texts","getKeys","regenerateKey","mapDescendants","_range7","withIndex","removeNode","insertNode","_this2","_this3","befores","afters","_befores","_afters","_parent","validateNode","isNode","isBlock","isInline","isDocument","isText","getNative","getValue","baseIsNative","_node","_node2","Block","options","preserveKeys","getText","_object$isVoid","_object$key","_object$nodes","getOwnPropertyNames","method","Inline","generateKey","generate","setKeyGenerator","resetKeyGenerator","castPath","isKey","stringToPath","baseGetTag","undefinedTag","nullTag","symToStringTag","getRawTag","objectToString","toStringTag","copyObject","source","customizer","isNew","baseAssignValue","assignValue","Document","getFirst","getLast","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","_slateDevLogger","_slateDevLogger2","_mark","_mark2","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","isFocused","hasAnchorIn","hasFocusIn","hasAnchorAtStartOf","hasAnchorAtEndOf","moveAnchorOffsetTo","moveFocusOffsetTo","moveFocusTo","moveAnchorTo","moveAnchorToStartOf","moveFocusToEndOf","anchorNode","focusNode","warn","anchorText","getTextAtOffset","focusText","areDescendantsSorted","isRange","anchorPath","focusPath","createSet","_object$anchorKey","_object$anchorOffset","_object$focusKey","_object$focusOffset","_object$isBackward","_object$isFocused","_object$marks","_ref2","_ref3","_ref4","_ref5","hasEdge","anchor","focus","_ref6","_ref7","alias","process","memoize","properties","_options$takesArgumen","property","original","_len","args","_key","IS_DEV","ENABLED","CACHE_KEY","__cache_key","__cache","cachedValue","UNSET","UNDEFINED","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","__clear","MAX_SAFE_INTEGER","__enable","enabled","NODE_ENV","PUBLIC_URL","useColors","window","document","style","WebkitAppearance","console","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","$1","formatArgs","namespace","humanize","diff","color","lastC","log","save","namespaces","storage","removeItem","debug","load","r","DEBUG","chrome","local","localStorage","colors","formatters","j","enable","eq","Data","webpackPolyfill","deprecate","paths","children","l","nativeCreate","ListCache","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","assocIndexOf","getMapData","__data__","isKeyable","toKey","isSymbol","INFINITY","isIndex","reIsUint","test","baseIsArguments","objectProto","isArguments","_objectWithoutProperties","_operationAttributes","_operationAttributes2","_value2","mark","newPath","selection","Operation","ATTRIBUTES","_v","_v2","_v3","isOperation","createProperties","_v4","getPath","stubFalse","freeExports","freeModule","moduleExports","Buffer","nativeIsBuffer","isBuffer","isLength","isFunction","DataView","Promise","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","Ctor","ctorString","keysIn","arrayLikeKeys","baseKeysIn","_character","_character2","_leaf","_leaf2","Text","addMarks","_char","hasStart","hasEnd","__getDecorations","getDecoratedCharacters","leaves","prevChar","prevLeaf","prevMarks","_char2","getLeaves","newMark","_char3","_attrs","_object$leaves","getCharacters","Character","isCharacter","basePick","flatRest","pick","symbolTag","MapCache","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","tag","funcTag","genTag","asyncTag","proxyTag","objValue","arrayPush","_extends","assign","_history2","_schema","_schema2","Value","Change","preserveData","preserveDecorations","preserveHistory","preserveSelection","preserveSchema","undos","redos","isForward","getNextBlock","getPreviousBlock","getNextInline","getPreviousInline","getMarksAtRange","getActiveMarksAtRange","getBlocksAtRange","getFragmentAtRange","getInlinesAtRange","fragment","hasVoidParent","isValue","_object$document","_object$selection","_object$schema","plugins","plugin","collapseToStartOf","change","stackClear","stackDelete","stackGet","stackHas","stackSet","arrayFilter","stubArray","nativeGetSymbols","getSymbols","symbol","baseKeys","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","freeProcess","binding","isPrototype","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","overArg","getPrototype","Leaf","isLeaf","_object$text","_atCurrentRange","_atCurrentRange2","_atRange","_atRange2","_byKey","_byKey2","_onHistory","_onHistory2","_onSelection","_onSelection2","_onValue","_onValue2","_withSchema","_withSchema2","invertOperation","op","_operation2","_op","_op2","inversePath","inverseNewPath","pathLast","newPathLast","_op3","_path","_inversePath","_op4","_path2","_length","_last","_inversePath2","_op5","inverseNode","inverseProperties","_pick2","_op6","_properties","inverseMark","_inverseProperties","_op7","_properties2","assertPath","inverseSelection","inverseProps","_op8","_properties3","inverseValue","_inverseProperties2","_debug","_debug2","_pick","_operation","baseGet","funcToString","funcProto","arrayMap","iteratee","setToString","overRest","transform","nativeMax","otherArgs","baseSetToString","shortOut","identity","shouldMerge","_isEqual2","shouldSkip","_isEqual","History","operation","prevBatch","prevOperation","batch","_batch","isHistory","_object$redos","_object$undos","equalArrays","bitmask","equalFunc","isPartial","COMPARE_PARTIAL_FLAG","arrLength","othLength","stacked","seen","COMPARE_UNORDERED_FLAG","SetCache","arrValue","othValue","compared","arraySome","othIndex","cacheHas","getAllKeys","baseGetAllKeys","keysFunc","symbolsFunc","inherited","isArr","isArg","isBuff","isType","skipIndexes","baseTimes","_toConsumableArray","arr2","resolveSchema","rules","_plugin$schema","_plugin$schema$docume","_plugin$schema$blocks","_plugin$schema$inline","resolveDocumentRule","bs","resolveNodeRule","_key2","_mergeWith2","_typeof","_mergeWith","_coreSchemaRules","_coreSchemaRules2","_stack2","Schema","parents","rule","_rule","reason","operations","removeNodeByKey","setNodeByKey","delete","_node3","_node4","t","removeMarkByKey","getRule","getParentRules","ctx","fail","getMarks","_ret","def","_rule$first","kinds","types","_rule$last","_kinds","_types","_child","nextDef","defs","rewind","_child2","isSchema","assignMergeValue","cloneBuffer","buffer","isDeep","allocUnsafe","copy","cloneTypedArray","typedArray","byteOffset","copyArray","initCloneObject","baseCreate","isPlainObject","objectTag","proto","objectCtorString","safeGet","getPluginsWith","_len2","_len3","_key3","_props$children","_len4","_key4","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_attrs$plugins","applyOperation","_operation3","APPLIERS","add_mark","addMark","insert_node","insert_text","_value3","_selection","insertText","moveAnchor","moveFocus","merge_node","withPath","_value4","oneIndex","twoIndex","mergeNode","_selection2","move_node","newIndex","newParentPath","oldParentPath","oldIndex","_value5","remove_mark","_value6","removeMark","remove_node","_value7","_selection3","hasStartNode","hasNode","hasEndNode","moveStartTo","deselect","moveEndTo","remove_text","rangeOffset","_value8","_selection4","removeText","set_mark","_value9","updateMark","set_node","_value10","set_selection","_value11","set_value","split_node","_value12","_selection5","getSymbolsIn","getAllKeysIn","_axios","_axios2","_queryString","_queryString2","_editor","_editor2","_message","_message2","isNumber","num","numbers","numLength","minLength","maxLength","EditCampaign","nonprofitInfo","campaigns","campaignInfo","fundingNeeded","duration","contentInfo","campaignContent","fetched","hasCampaign","campaignId","campaignCreated","campaignCreatedId","valid","editorData","campaignSaved","onChange","onSubmit","validate","onChangeEditorData","params","editCampaignId","setState","location","hostname","accessToken","then","results","nonprofit","campaign","campaignResults","_campaignResults$data","parseFloat","title","catch","checked","_this4","preventDefault","patch","editCampaignResults","scrollTo","editCampaignErr","response","post","newCampaign","content","createCampaignResults","createCampaignErr","statusCode","_this5","startDate","ranges","_this6","userType","Date","endDate","getTime","toLocaleDateString","htmlFor","required","toLocaleString","disabled","_defineProperty","_slate","_isUrl","_isUrl2","_helpers","_helpers2","_images","_images2","_toolbar","_toolbar2","_createLink","_createLink2","_createImage","_createImage2","defaultBlock","header","attributes","paragraph","bulletedList","listItem","numberedList","link","href","image","active","hasEdgeIn","src","alt","imageType","bold","fontWeight","italic","fontStyle","underlined","textDecoration","block","insertNodeByKey","lastNode","CampaignEditor","initialState","editorState","Raw","deserialize","terse","showCreateLink","newUrl","newUrlText","showAddImage","newSrc","newAlt","newImageType","heldEditorState","onChangeEditor","onAddImage","onCreateImage","cancelCreateImage","onChangeFormat","onNewLink","isLink","onCreateLink","onChangeInput","cancelCreateLink","onClickInline","onClickList","serialize","files","heldState","formData","FormData","append","nonprofitId","headers","Content-Type","newImage","_state","insertImage","secure_url","newEditorState","insertBlock","focusBlock","setBlock","inline","unwrapInline","wrapInline","collapseToEnd","extend","isHeader","toggleMark","unwrapBlock","wrapBlock","selectValue","inlineType","focusInline","Editor","Operations","Changes","_changes","_changes2","_operations","_operations2","direction","EXPRESSION_RIGHT_TO_LEFT","EXPRESSION_LEFT_TO_RIGHT","GROUP_LEFT_TO_RIGHT","GROUP_RIGHT_TO_LEFT","__webpack_exports__","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","nextTick","Item","noop","cwd","chdir","umask","hrtime","previousTimestamp","clocktime","performanceNow","performance","seconds","nanoseconds","uptime","startTime","HAS_CONSOLE","_console","_console2","version$$1","global$1","env","argv","versions","release","config","on","addListener","once","off","removeListener","removeAllListeners","emit","now","mozNow","msNow","oNow","webkitNow","browser","version","platform","isIndexInRange","addMarkAtRange","sel","select","_marks","_sel","deleteAtRange","collapseToStart","insertBlockAtRange","collapseToEndOf","insertFragment","startInline","lastText","lastInline","isAppending","hasEdgeAtStartOf","hasEdgeAtEndOf","insertFragmentAtRange","newTexts","newText","move","insertInline","insertInlineAtRange","insertTextAtRange","splitBlock","splitBlockAtRange","removeMarkAtRange","_marks2","_sel2","activeMarks","wrapText","prefix","suffix","wrapTextAtRange","moveStart","moveEnd","_string","_string2","_options$normalize","addMarkByKey","addMarksAtRange","snapshotSelection","_options$normalize2","isStartVoid","isEndVoid","isHanging","prevText","startVoid","getClosestVoid","nextText","endVoid","_prevText","removeTextByKey","startLength","endLength","getCommonAncestor","startChild","endChild","startParent","startParentIndex","endParentIndex","startChildIndex","endChildIndex","middles","_index2","lonely","getFurthestOnlyChildAncestor","moveNodeByKey","mergeNodeByKey","normalizeNodeByKey","deleteCharBackwardAtRange","getCharOffsetBackward","deleteBackwardAtRange","deleteLineBackwardAtRange","startWithVoidInline","deleteBackward","deleteWordBackwardAtRange","getWordOffsetBackward","_options$normalize3","isAtStartOf","prevBlock","prevInline","traversed","deleteCharForwardAtRange","getCharOffsetForward","deleteForwardAtRange","deleteLineForwardAtRange","deleteWordForwardAtRange","getWordOffsetForward","_options$normalize4","nextBlock","moveToStartOf","isAtEndOf","_nextBlock","nextInline","_next","_options$normalize5","extra","splitDescendantsByKey","_options$normalize6","isAtStart","getBlocks","firstBlock","lastBlock","lonelyParent","lonelyChild","removeDescendant","nextChild","nextNodes","lastIndex","inlineChild","inlineIndex","_options$normalize7","splitNodeByKey","insertTextByKey","_options$normalize8","setBlockAtRange","_options$normalize9","setInlineAtRange","_options$normalize10","height","_options$normalize11","splitInlineAtRange","_options$normalize12","toggleMarkAtRange","_options$normalize13","unwrapBlockAtRange","_options$normalize14","firstMatch","lastMatch","firstText","normalizeDocument","unwrapInlineAtRange","_options$normalize15","wrapBlockAtRange","_options$normalize16","firstblock","lastblock","siblings","p1","p2","indexes","ind","wrapInlineAtRange","_options$normalize17","inlineParent","wrapInlineByKey","startInner","startInnerIndex","endInner","startInlines","endInlines","_options$normalize18","isSurrogate","code","SURROGATE_START","SURROGATE_END","isWord","remaining","SPACE","CHAMELEON","charAt","getCharLength","PUNCTUATION","getCharOffset","_esrever","getWordOffset","started","__WEBPACK_AMD_DEFINE_RESULT__","regexSymbolWithCombiningMarks","regexSurrogatePair","$0","$2","esrever","bx","by","leaf","ax","ay","applyOperations","insertFragmentByKey","getMarksAtIndex","getPreviousSibling","newKey","removeAllMarksByKey","removals","replaceNodeByKey","setMarkByKey","_options$target","textKey","textOffset","prevIndex","unwrapInlineByKey","moveToRangeOf","unwrapBlockByKey","unwrapNodeByKey","isLast","parentParent","parentIndex","wrapBlockByKey","wrapNodeByKey","_invert","_invert2","_omit","_omit2","redo","undo","inverse","_inverse","selectColor","createDebug","curr","ms","prevTime","format","init","skips","substr","disable","y","fmtShort","round","fmtLong","plural","isNaN","long","basePickBy","baseSet","reIsPlainProp","reIsDeepProp","isOwn","unmasked","nativeObjectToString","memoizeCapped","rePropName","reEscapeChar","number","quote","subString","MAX_MEMOIZE_SIZE","resolver","FUNC_ERROR_TEXT","memoized","Cache","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","isMasked","reIsNative","reIsHostCtor","reRegExpChar","maskSrcKey","coreJsData","uid","IE_PROTO","HASH_UNDEFINED","arrayProto","baseToString","symbolToString","symbolProto","hasPath","baseHasIn","hasFunc","argsTag","baseFlatten","isStrict","isFlattenable","spreadableSymbol","isConcatSpreadable","thisArg","constant","lastCalled","stamp","nativeNow","HOT_SPAN","HOT_COUNT","OPERATION_ATTRIBUTES","isEqual","baseIsEqual","baseIsEqualDeep","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","pairs","LARGE_ARRAY_SIZE","setCacheAdd","setCacheHas","dataViewTag","arrayBufferTag","boolTag","dateTag","numberTag","errorTag","regexpTag","stringTag","mapTag","convert","mapToArray","setTag","setToArray","symbolValueOf","objProps","objLength","skipCtor","objCtor","othCtor","resIndex","typedArrayTags","nativeKeys","baseMerge","createAssigner","srcIndex","baseFor","srcValue","baseMergeDeep","createBaseFor","fromRight","mergeFunc","isCommon","isTyped","isArrayLikeObject","toPlainObject","objectCreate","nativeKeysIn","isProto","assigner","baseRest","sources","guard","isIterateeCall","CORE_SCHEMA_RULES","invalids","insertBefore","insertAfter","_apply","_apply2","flags","_options","_options$merge","_options$save","_options$skip","baseClone","baseUnset","customOmitClone","omit","CLONE_DEEP_FLAG","isFlat","CLONE_FLAT_FLAG","isFull","CLONE_SYMBOLS_FLAG","initCloneArray","isFunc","copySymbolsIn","baseAssignIn","copySymbols","baseAssign","cloneableTags","initCloneByTag","subValue","arrayEach","cloneDataView","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","cloneRegExp","cloneSymbol","dataView","regexp","reFlags","baseIsMap","nodeIsMap","baseIsSet","nodeIsSet","baseSlice","_isEmpty","_isEmpty2","_options$snapshot","snapshot","moved","selectAll","moveAnchorCharBackward","anchorBlock","previousText","isInVoid","isPreviousInVoid","moveAnchorToEndOf","moveAnchorCharForward","isNextInVoid","moveFocusCharBackward","moveFocusCharForward","moveFocusToStartOf","DIRECTIONS","KINDS","edges","edge","getDirectionNode","directionKey","setValue","normalizeNodeAndChildren","normalizeNode","refindNode","invert","isUrl","matcher","MainImg","LeftImg","RightImg","Images","Toolbar","data-active","onMouseDown","CreateLink","CreateImage","hmr","locals","lightGraphite","mauiOrange","graphite","darkGraphite","brightGraphite","errorRed","darkErrorRed","blueHydrangea","darkBlueHydrangea","lightHydrangea","small","large","xlarge","xxlarge"],"mappings":"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","file":"static/js/0.81e4e44c.chunk.js","sourcesContent":["webpackJsonp([0],Array(251).concat([\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _reactRedux=__webpack_require__(38);var _actions=__webpack_require__(83);var _components=__webpack_require__(398);var _components2=_interopRequireDefault(_components);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var mapStateToProps=function mapStateToProps(state){return{userAuth:state.userAuth,userInfo:state.userInfo};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onRequireAuth:function onRequireAuth(){return dispatch((0,_actions.requireAuth)());}};};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)(_components2.default);\n\n/***/ }),\n/* 252 */,\n/* 253 */,\n/* 254 */,\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */,\n/* 259 */,\n/* 260 */,\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));\n\n/***/ }),\n/* 262 */,\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _templateObject=_taggedTemplateLiteral(['\\n  position: absolute;\\n  background-image: url(',');\\n  background-position-x: 50%;\\n  background-position-y: 60%;\\n  background-size: 140% 110%;\\n  width: 100%;\\n  text-align: center;\\n  z-index: 100;\\n  top: 0;\\n  left: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0.75rem 0 1rem 0;\\n\\n  &.error {\\n    background-image: url(',');\\n    background-position-x: 50%;\\n    background-position-y: 60%;\\n    background-size: 140% 110%;\\n  }\\n\\n  p {\\n    color: white;\\n    font-weight: normal;\\n    font-size: 1.125rem;\\n    text-shadow: 0 0 2rem rgba(0, 0, 0, 0.5);\\n    margin: 0;\\n\\n    @media screen and (min-width: ',') {\\n      font-size: 1.25rem;\\n      margin: 0;\\n    }\\n  }\\n\\n  svg {\\n    width: 1.75rem;\\n    height: 1.75rem;\\n    padding-right: 0.375rem;\\n    cursor: pointer;\\n\\n    > * {\\n      fill: white;\\n    }\\n  }\\n'],['\\n  position: absolute;\\n  background-image: url(',');\\n  background-position-x: 50%;\\n  background-position-y: 60%;\\n  background-size: 140% 110%;\\n  width: 100%;\\n  text-align: center;\\n  z-index: 100;\\n  top: 0;\\n  left: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0.75rem 0 1rem 0;\\n\\n  &.error {\\n    background-image: url(',');\\n    background-position-x: 50%;\\n    background-position-y: 60%;\\n    background-size: 140% 110%;\\n  }\\n\\n  p {\\n    color: white;\\n    font-weight: normal;\\n    font-size: 1.125rem;\\n    text-shadow: 0 0 2rem rgba(0, 0, 0, 0.5);\\n    margin: 0;\\n\\n    @media screen and (min-width: ',') {\\n      font-size: 1.25rem;\\n      margin: 0;\\n    }\\n  }\\n\\n  svg {\\n    width: 1.75rem;\\n    height: 1.75rem;\\n    padding-right: 0.375rem;\\n    cursor: pointer;\\n\\n    > * {\\n      fill: white;\\n    }\\n  }\\n']);var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _styledComponents=__webpack_require__(7);var _styledComponents2=_interopRequireDefault(_styledComponents);var _screenBreaks=__webpack_require__(8);var _screenBreaks2=_interopRequireDefault(_screenBreaks);var _redBrush=__webpack_require__(264);var _redBrush2=_interopRequireDefault(_redBrush);var _blueBrush=__webpack_require__(265);var _blueBrush2=_interopRequireDefault(_blueBrush);var _icons=__webpack_require__(23);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _taggedTemplateLiteral(strings,raw){return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}/* eslint-env browser */// IMPORT DEPENDENCIES\n// MESSAGE COMPONENT\n// This displays errors and messages on the page. It accepts an error object,\n// message object, clear error and clear message function.\n// Errors are prioritized over messages.\nvar Message=(0,_styledComponents2.default)(function(_ref){var error=_ref.error,message=_ref.message,onClearError=_ref.onClearError,onClearMessage=_ref.onClearMessage,className=_ref.className;if(error.message!==''||message.message!==''){return _react2.default.createElement('section',{id:'message',className:''+className+(error.message!==''?' error':null)},_react2.default.createElement(_icons.CloseIcon,{onClick:error.message!==''?onClearError:onClearMessage}),_react2.default.createElement('p',null,error.message!==''?error.message:message.message));}return null;})(_templateObject,_blueBrush2.default,_redBrush2.default,_screenBreaks2.default.medium);exports.default=Message;\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/media/red-brush.f8ffb539.png\";\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/media/blue-brush.02499a4f.png\";\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _Redirect = __webpack_require__(267);\n\nvar _Redirect2 = _interopRequireDefault(_Redirect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Redirect2.default; // Written in this round about way for babel-transform-imports\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = __webpack_require__(2);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = __webpack_require__(3);\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _history = __webpack_require__(84);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    (0, _invariant2.default)(this.context.router, 'You should not use <Redirect> outside a <Router>');\n\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = (0, _history.createLocation)(prevProps.to);\n    var nextTo = (0, _history.createLocation)(this.props.to);\n\n    if ((0, _history.locationsAreEqual)(prevTo, nextTo)) {\n      (0, _warning2.default)(false, 'You tried to redirect to the same route you\\'re currently on: ' + ('\"' + nextTo.pathname + nextTo.search + '\"'));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var _props = this.props,\n        push = _props.push,\n        to = _props.to;\n\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(_react2.default.Component);\n\nRedirect.propTypes = {\n  push: _propTypes2.default.bool,\n  from: _propTypes2.default.string,\n  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: _propTypes2.default.shape({\n    history: _propTypes2.default.shape({\n      push: _propTypes2.default.func.isRequired,\n      replace: _propTypes2.default.func.isRequired\n    }).isRequired,\n    staticContext: _propTypes2.default.object\n  }).isRequired\n};\nexports.default = Redirect;\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Slate-specific model types.\n *\n * @type {Object}\n */\n\nvar MODEL_TYPES = {\n  BLOCK: '@@__SLATE_BLOCK__@@',\n  CHANGE: '@@__SLATE_CHANGE__@@',\n  CHARACTER: '@@__SLATE_CHARACTER__@@',\n  DOCUMENT: '@@__SLATE_DOCUMENT__@@',\n  HISTORY: '@@__SLATE_HISTORY__@@',\n  INLINE: '@@__SLATE_INLINE__@@',\n  LEAF: '@@__SLATE_LEAF__@@',\n  MARK: '@@__SLATE_MARK__@@',\n  OPERATION: '@@__SLATE_OPERATION__@@',\n  RANGE: '@@__SLATE_RANGE__@@',\n  SCHEMA: '@@__SLATE_SCHEMA__@@',\n  STACK: '@@__SLATE_STACK__@@',\n  TEXT: '@@__SLATE_TEXT__@@',\n  VALUE: '@@__SLATE_VALUE__@@'\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = MODEL_TYPES;\n\n/***/ }),\n/* 269 */,\n/* 270 */,\n/* 271 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar freeGlobal = __webpack_require__(350);\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _data = __webpack_require__(300);\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _memoize = __webpack_require__(295);\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  type: undefined\n};\n\n/**\n * Mark.\n *\n * @type {Mark}\n */\n\nvar Mark = function (_Record) {\n  _inherits(Mark, _Record);\n\n  function Mark() {\n    _classCallCheck(this, Mark);\n\n    return _possibleConstructorReturn(this, (Mark.__proto__ || Object.getPrototypeOf(Mark)).apply(this, arguments));\n  }\n\n  _createClass(Mark, [{\n    key: 'getComponent',\n\n\n    /**\n     * Get the component for the node from a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Component|Void}\n     */\n\n    value: function getComponent(schema) {\n      return schema.__getComponent(this);\n    }\n\n    /**\n     * Return a JSON representation of the mark.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        type: this.type,\n        data: this.data.toJSON()\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     */\n\n    get: function get() {\n      return 'mark';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Mark` with `attrs`.\n     *\n     * @param {Object|Mark} attrs\n     * @return {Mark}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Mark.isMark(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Mark.fromJSON(attrs);\n      }\n\n      throw new Error('`Mark.create` only accepts objects, strings or marks, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a set of marks.\n     *\n     * @param {Array<Object|Mark>} elements\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'createSet',\n    value: function createSet(elements) {\n      if (_immutable.Set.isSet(elements) || Array.isArray(elements)) {\n        var marks = new _immutable.Set(elements.map(Mark.create));\n        return marks;\n      }\n\n      if (elements == null) {\n        return new _immutable.Set();\n      }\n\n      throw new Error('`Mark.createSet` only accepts sets, arrays or null, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a dictionary of settable mark properties from `attrs`.\n     *\n     * @param {Object|String|Mark} attrs\n     * @return {Object}\n     */\n\n  }, {\n    key: 'createProperties',\n    value: function createProperties() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Mark.isMark(attrs)) {\n        return {\n          data: attrs.data,\n          type: attrs.type\n        };\n      }\n\n      if (typeof attrs == 'string') {\n        return { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        var props = {};\n        if ('type' in attrs) props.type = attrs.type;\n        if ('data' in attrs) props.data = _data2.default.create(attrs.data);\n        return props;\n      }\n\n      throw new Error('`Mark.createProperties` only accepts objects, strings or marks, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Mark` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Mark}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var _object$data = object.data,\n          data = _object$data === undefined ? {} : _object$data,\n          type = object.type;\n\n\n      if (typeof type != 'string') {\n        throw new Error('`Mark.fromJS` requires a `type` string.');\n      }\n\n      var mark = new Mark({\n        type: type,\n        data: new _immutable.Map(data)\n      });\n\n      return mark;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isMark',\n\n\n    /**\n     * Check if `any` is a `Mark`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isMark(any) {\n      return !!(any && any[_modelTypes2.default.MARK]);\n    }\n\n    /**\n     * Check if `any` is a set of marks.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isMarkSet',\n    value: function isMarkSet(any) {\n      return _immutable.Set.isSet(any) && any.every(function (item) {\n        return Mark.isMark(item);\n      });\n    }\n  }]);\n\n  return Mark;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nMark.fromJS = Mark.fromJSON;\nMark.prototype[_modelTypes2.default.MARK] = true;\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Mark.prototype, ['getComponent'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Mark}\n */\n\nexports.default = Mark;\n\n/***/ }),\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar strictUriEncode = __webpack_require__(280);\nvar objectAssign = __webpack_require__(24);\nvar decodeComponent = __webpack_require__(281);\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\tvar queryStart = str.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn str.slice(queryStart + 1);\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^[?#&]/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeComponent(val);\n\n\t\tformatter(decodeComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tif (opts.sort === false) {\n\t\topts.sort = function () {};\n\t}\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort(opts.sort).map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\nexports.parseUrl = function (str, opts) {\n\treturn {\n\t\turl: str.split('?')[0] || '',\n\t\tquery: this.parse(this.extract(str), opts)\n\t};\n};\n\n\n/***/ }),\n/* 280 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n\n\n/***/ }),\n/* 281 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n\n\n/***/ }),\n/* 282 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _direction = __webpack_require__(401);\n\nvar _direction2 = _interopRequireDefault(_direction);\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _block = __webpack_require__(285);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _data = __webpack_require__(300);\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _document = __webpack_require__(293);\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _inline = __webpack_require__(286);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _range8 = __webpack_require__(294);\n\nvar _range9 = _interopRequireDefault(_range8);\n\nvar _text = __webpack_require__(323);\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _generateKey = __webpack_require__(287);\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nvar _isIndexInRange = __webpack_require__(403);\n\nvar _isIndexInRange2 = _interopRequireDefault(_isIndexInRange);\n\nvar _memoize = __webpack_require__(295);\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Node.\n *\n * And interface that `Document`, `Block` and `Inline` all implement, to make\n * working with the recursive node tree easier.\n *\n * @type {Node}\n */\n\nvar Node = function () {\n  function Node() {\n    _classCallCheck(this, Node);\n  }\n\n  _createClass(Node, [{\n    key: 'areDescendantsSorted',\n\n\n    /**\n     * True if the node has both descendants in that order, false otherwise. The\n     * order is depth-first, post-order.\n     *\n     * @param {String} first\n     * @param {String} second\n     * @return {Boolean}\n     */\n\n    value: function areDescendantsSorted(first, second) {\n      first = assertKey(first);\n      second = assertKey(second);\n\n      var keys = this.getKeysAsArray();\n      var firstIndex = keys.indexOf(first);\n      var secondIndex = keys.indexOf(second);\n      if (firstIndex == -1 || secondIndex == -1) return null;\n\n      return firstIndex < secondIndex;\n    }\n\n    /**\n     * Assert that a node has a child by `key` and return it.\n     *\n     * @param {String} key\n     * @return {Node}\n     */\n\n  }, {\n    key: 'assertChild',\n    value: function assertChild(key) {\n      var child = this.getChild(key);\n\n      if (!child) {\n        key = assertKey(key);\n        throw new Error('Could not find a child node with key \"' + key + '\".');\n      }\n\n      return child;\n    }\n\n    /**\n     * Assert that a node has a descendant by `key` and return it.\n     *\n     * @param {String} key\n     * @return {Node}\n     */\n\n  }, {\n    key: 'assertDescendant',\n    value: function assertDescendant(key) {\n      var descendant = this.getDescendant(key);\n\n      if (!descendant) {\n        key = assertKey(key);\n        throw new Error('Could not find a descendant node with key \"' + key + '\".');\n      }\n\n      return descendant;\n    }\n\n    /**\n     * Assert that a node's tree has a node by `key` and return it.\n     *\n     * @param {String} key\n     * @return {Node}\n     */\n\n  }, {\n    key: 'assertNode',\n    value: function assertNode(key) {\n      var node = this.getNode(key);\n\n      if (!node) {\n        key = assertKey(key);\n        throw new Error('Could not find a node with key \"' + key + '\".');\n      }\n\n      return node;\n    }\n\n    /**\n     * Assert that a node exists at `path` and return it.\n     *\n     * @param {Array} path\n     * @return {Node}\n     */\n\n  }, {\n    key: 'assertPath',\n    value: function assertPath(path) {\n      var descendant = this.getDescendantAtPath(path);\n\n      if (!descendant) {\n        throw new Error('Could not find a descendant at path \"' + path + '\".');\n      }\n\n      return descendant;\n    }\n\n    /**\n     * Recursively filter all descendant nodes with `iterator`.\n     *\n     * @param {Function} iterator\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'filterDescendants',\n    value: function filterDescendants(iterator) {\n      var matches = [];\n\n      this.forEachDescendant(function (node, i, nodes) {\n        if (iterator(node, i, nodes)) matches.push(node);\n      });\n\n      return (0, _immutable.List)(matches);\n    }\n\n    /**\n     * Recursively find all descendant nodes by `iterator`.\n     *\n     * @param {Function} iterator\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'findDescendant',\n    value: function findDescendant(iterator) {\n      var found = null;\n\n      this.forEachDescendant(function (node, i, nodes) {\n        if (iterator(node, i, nodes)) {\n          found = node;\n          return false;\n        }\n      });\n\n      return found;\n    }\n\n    /**\n     * Recursively iterate over all descendant nodes with `iterator`. If the\n     * iterator returns false it will break the loop.\n     *\n     * @param {Function} iterator\n     */\n\n  }, {\n    key: 'forEachDescendant',\n    value: function forEachDescendant(iterator) {\n      var ret = void 0;\n\n      this.nodes.forEach(function (child, i, nodes) {\n        if (iterator(child, i, nodes) === false) {\n          ret = false;\n          return false;\n        }\n\n        if (child.kind != 'text') {\n          ret = child.forEachDescendant(iterator);\n          return ret;\n        }\n      });\n\n      return ret;\n    }\n\n    /**\n     * Get the path of ancestors of a descendant node by `key`.\n     *\n     * @param {String|Node} key\n     * @return {List<Node>|Null}\n     */\n\n  }, {\n    key: 'getAncestors',\n    value: function getAncestors(key) {\n      key = assertKey(key);\n\n      if (key == this.key) return (0, _immutable.List)();\n      if (this.hasChild(key)) return (0, _immutable.List)([this]);\n\n      var ancestors = void 0;\n      this.nodes.find(function (node) {\n        if (node.kind == 'text') return false;\n        ancestors = node.getAncestors(key);\n        return ancestors;\n      });\n\n      if (ancestors) {\n        return ancestors.unshift(this);\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     * Get the leaf block descendants of the node.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getBlocks',\n    value: function getBlocks() {\n      var array = this.getBlocksAsArray();\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get the leaf block descendants of the node.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getBlocksAsArray',\n    value: function getBlocksAsArray() {\n      return this.nodes.reduce(function (array, child) {\n        if (child.kind != 'block') return array;\n        if (!child.isLeafBlock()) return array.concat(child.getBlocksAsArray());\n        array.push(child);\n        return array;\n      }, []);\n    }\n\n    /**\n     * Get the leaf block descendants in a `range`.\n     *\n     * @param {Range} range\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getBlocksAtRange',\n    value: function getBlocksAtRange(range) {\n      var array = this.getBlocksAtRangeAsArray(range);\n      // Eliminate duplicates by converting to an `OrderedSet` first.\n      return new _immutable.List(new _immutable.OrderedSet(array));\n    }\n\n    /**\n     * Get the leaf block descendants in a `range` as an array\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getBlocksAtRangeAsArray',\n    value: function getBlocksAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      var _range = range,\n          startKey = _range.startKey,\n          endKey = _range.endKey;\n\n      var startBlock = this.getClosestBlock(startKey);\n\n      // PERF: the most common case is when the range is in a single block node,\n      // where we can avoid a lot of iterating of the tree.\n      if (startKey == endKey) return [startBlock];\n\n      var endBlock = this.getClosestBlock(endKey);\n      var blocks = this.getBlocksAsArray();\n      var start = blocks.indexOf(startBlock);\n      var end = blocks.indexOf(endBlock);\n      return blocks.slice(start, end + 1);\n    }\n\n    /**\n     * Get all of the leaf blocks that match a `type`.\n     *\n     * @param {String} type\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getBlocksByType',\n    value: function getBlocksByType(type) {\n      var array = this.getBlocksByTypeAsArray(type);\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get all of the leaf blocks that match a `type` as an array\n     *\n     * @param {String} type\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getBlocksByTypeAsArray',\n    value: function getBlocksByTypeAsArray(type) {\n      return this.nodes.reduce(function (array, node) {\n        if (node.kind != 'block') {\n          return array;\n        } else if (node.isLeafBlock() && node.type == type) {\n          array.push(node);\n          return array;\n        } else {\n          return array.concat(node.getBlocksByTypeAsArray(type));\n        }\n      }, []);\n    }\n\n    /**\n     * Get all of the characters for every text node.\n     *\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'getCharacters',\n    value: function getCharacters() {\n      var array = this.getCharactersAsArray();\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get all of the characters for every text node as an array\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getCharactersAsArray',\n    value: function getCharactersAsArray() {\n      return this.nodes.reduce(function (arr, node) {\n        return node.kind == 'text' ? arr.concat(node.characters.toArray()) : arr.concat(node.getCharactersAsArray());\n      }, []);\n    }\n\n    /**\n     * Get a list of the characters in a `range`.\n     *\n     * @param {Range} range\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'getCharactersAtRange',\n    value: function getCharactersAtRange(range) {\n      var array = this.getCharactersAtRangeAsArray(range);\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get a list of the characters in a `range` as an array.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getCharactersAtRangeAsArray',\n    value: function getCharactersAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      return this.getTextsAtRange(range).reduce(function (arr, text) {\n        var chars = text.characters.filter(function (char, i) {\n          return (0, _isIndexInRange2.default)(i, text, range);\n        }).toArray();\n\n        return arr.concat(chars);\n      }, []);\n    }\n\n    /**\n     * Get a child node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getChild',\n    value: function getChild(key) {\n      key = assertKey(key);\n      return this.nodes.find(function (node) {\n        return node.key == key;\n      });\n    }\n\n    /**\n     * Get closest parent of node by `key` that matches `iterator`.\n     *\n     * @param {String} key\n     * @param {Function} iterator\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getClosest',\n    value: function getClosest(key, iterator) {\n      key = assertKey(key);\n      var ancestors = this.getAncestors(key);\n      if (!ancestors) {\n        throw new Error('Could not find a descendant node with key \"' + key + '\".');\n      }\n\n      // Exclude this node itself.\n      return ancestors.rest().findLast(iterator);\n    }\n\n    /**\n     * Get the closest block parent of a `node`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getClosestBlock',\n    value: function getClosestBlock(key) {\n      return this.getClosest(key, function (parent) {\n        return parent.kind == 'block';\n      });\n    }\n\n    /**\n     * Get the closest inline parent of a `node`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getClosestInline',\n    value: function getClosestInline(key) {\n      return this.getClosest(key, function (parent) {\n        return parent.kind == 'inline';\n      });\n    }\n\n    /**\n     * Get the closest void parent of a `node`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getClosestVoid',\n    value: function getClosestVoid(key) {\n      return this.getClosest(key, function (parent) {\n        return parent.isVoid;\n      });\n    }\n\n    /**\n     * Get the common ancestor of nodes `one` and `two` by keys.\n     *\n     * @param {String} one\n     * @param {String} two\n     * @return {Node}\n     */\n\n  }, {\n    key: 'getCommonAncestor',\n    value: function getCommonAncestor(one, two) {\n      one = assertKey(one);\n      two = assertKey(two);\n\n      if (one == this.key) return this;\n      if (two == this.key) return this;\n\n      this.assertDescendant(one);\n      this.assertDescendant(two);\n      var ancestors = new _immutable.List();\n      var oneParent = this.getParent(one);\n      var twoParent = this.getParent(two);\n\n      while (oneParent) {\n        ancestors = ancestors.push(oneParent);\n        oneParent = this.getParent(oneParent.key);\n      }\n\n      while (twoParent) {\n        if (ancestors.includes(twoParent)) return twoParent;\n        twoParent = this.getParent(twoParent.key);\n      }\n    }\n\n    /**\n     * Get the decorations for the node from a `stack`.\n     *\n     * @param {Stack} stack\n     * @return {List}\n     */\n\n  }, {\n    key: 'getDecorations',\n    value: function getDecorations(stack) {\n      var decorations = stack.find('decorateNode', this);\n      var list = _range9.default.createList(decorations || []);\n      return list;\n    }\n\n    /**\n     * Get the depth of a child node by `key`, with optional `startAt`.\n     *\n     * @param {String} key\n     * @param {Number} startAt (optional)\n     * @return {Number} depth\n     */\n\n  }, {\n    key: 'getDepth',\n    value: function getDepth(key) {\n      var startAt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      this.assertDescendant(key);\n      if (this.hasChild(key)) return startAt;\n      return this.getFurthestAncestor(key).getDepth(key, startAt + 1);\n    }\n\n    /**\n     * Get a descendant node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getDescendant',\n    value: function getDescendant(key) {\n      key = assertKey(key);\n      var descendantFound = null;\n\n      var found = this.nodes.find(function (node) {\n        if (node.key === key) {\n          return node;\n        } else if (node.kind !== 'text') {\n          descendantFound = node.getDescendant(key);\n          return descendantFound;\n        } else {\n          return false;\n        }\n      });\n\n      return descendantFound || found;\n    }\n\n    /**\n     * Get a descendant by `path`.\n     *\n     * @param {Array} path\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getDescendantAtPath',\n    value: function getDescendantAtPath(path) {\n      var descendant = this;\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = path[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var index = _step.value;\n\n          if (!descendant) return;\n          if (!descendant.nodes) return;\n          descendant = descendant.nodes.get(index);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return descendant;\n    }\n\n    /**\n     * Get the first child text node.\n     *\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFirstText',\n    value: function getFirstText() {\n      var descendantFound = null;\n\n      var found = this.nodes.find(function (node) {\n        if (node.kind == 'text') return true;\n        descendantFound = node.getFirstText();\n        return descendantFound;\n      });\n\n      return descendantFound || found;\n    }\n\n    /**\n     * Get a fragment of the node at a `range`.\n     *\n     * @param {Range} range\n     * @return {Document}\n     */\n\n  }, {\n    key: 'getFragmentAtRange',\n    value: function getFragmentAtRange(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return _document2.default.create();\n\n      var node = this;\n\n      // Make sure the children exist.\n      var _range2 = range,\n          startKey = _range2.startKey,\n          startOffset = _range2.startOffset,\n          endKey = _range2.endKey,\n          endOffset = _range2.endOffset;\n\n      var startText = node.assertDescendant(startKey);\n      var endText = node.assertDescendant(endKey);\n\n      // Split at the start and end.\n      var child = startText;\n      var previous = void 0;\n      var parent = void 0;\n\n      while (parent = node.getParent(child.key)) {\n        var index = parent.nodes.indexOf(child);\n        var position = child.kind == 'text' ? startOffset : child.nodes.indexOf(previous);\n\n        parent = parent.splitNode(index, position);\n        node = node.updateNode(parent);\n        previous = parent.nodes.get(index + 1);\n        child = parent;\n      }\n\n      child = startKey == endKey ? node.getNextText(startKey) : endText;\n\n      while (parent = node.getParent(child.key)) {\n        var _index = parent.nodes.indexOf(child);\n        var _position = child.kind == 'text' ? startKey == endKey ? endOffset - startOffset : endOffset : child.nodes.indexOf(previous);\n\n        parent = parent.splitNode(_index, _position);\n        node = node.updateNode(parent);\n        previous = parent.nodes.get(_index + 1);\n        child = parent;\n      }\n\n      // Get the start and end nodes.\n      var startNode = node.getNextSibling(node.getFurthestAncestor(startKey).key);\n      var endNode = startKey == endKey ? node.getNextSibling(node.getNextSibling(node.getFurthestAncestor(endKey).key).key) : node.getNextSibling(node.getFurthestAncestor(endKey).key);\n\n      // Get children range of nodes from start to end nodes\n      var startIndex = node.nodes.indexOf(startNode);\n      var endIndex = node.nodes.indexOf(endNode);\n      var nodes = node.nodes.slice(startIndex, endIndex);\n\n      // Return a new document fragment.\n      return _document2.default.create({ nodes: nodes });\n    }\n\n    /**\n     * Get the furthest parent of a node by `key` that matches an `iterator`.\n     *\n     * @param {String} key\n     * @param {Function} iterator\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthest',\n    value: function getFurthest(key, iterator) {\n      var ancestors = this.getAncestors(key);\n      if (!ancestors) {\n        key = assertKey(key);\n        throw new Error('Could not find a descendant node with key \"' + key + '\".');\n      }\n\n      // Exclude this node itself\n      return ancestors.rest().find(iterator);\n    }\n\n    /**\n     * Get the furthest block parent of a node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthestBlock',\n    value: function getFurthestBlock(key) {\n      return this.getFurthest(key, function (node) {\n        return node.kind == 'block';\n      });\n    }\n\n    /**\n     * Get the furthest inline parent of a node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthestInline',\n    value: function getFurthestInline(key) {\n      return this.getFurthest(key, function (node) {\n        return node.kind == 'inline';\n      });\n    }\n\n    /**\n     * Get the furthest ancestor of a node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthestAncestor',\n    value: function getFurthestAncestor(key) {\n      key = assertKey(key);\n      return this.nodes.find(function (node) {\n        if (node.key == key) return true;\n        if (node.kind == 'text') return false;\n        return node.hasDescendant(key);\n      });\n    }\n\n    /**\n     * Get the furthest ancestor of a node by `key` that has only one child.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthestOnlyChildAncestor',\n    value: function getFurthestOnlyChildAncestor(key) {\n      var ancestors = this.getAncestors(key);\n\n      if (!ancestors) {\n        key = assertKey(key);\n        throw new Error('Could not find a descendant node with key \"' + key + '\".');\n      }\n\n      return ancestors\n      // Skip this node...\n      .skipLast()\n      // Take parents until there are more than one child...\n      .reverse().takeUntil(function (p) {\n        return p.nodes.size > 1;\n      })\n      // And pick the highest.\n      .last();\n    }\n\n    /**\n     * Get the closest inline nodes for each text node in the node.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getInlines',\n    value: function getInlines() {\n      var array = this.getInlinesAsArray();\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get the closest inline nodes for each text node in the node, as an array.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getInlinesAsArray',\n    value: function getInlinesAsArray() {\n      var array = [];\n\n      this.nodes.forEach(function (child) {\n        if (child.kind == 'text') return;\n        if (child.isLeafInline()) {\n          array.push(child);\n        } else {\n          array = array.concat(child.getInlinesAsArray());\n        }\n      });\n\n      return array;\n    }\n\n    /**\n     * Get the closest inline nodes for each text node in a `range`.\n     *\n     * @param {Range} range\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getInlinesAtRange',\n    value: function getInlinesAtRange(range) {\n      var array = this.getInlinesAtRangeAsArray(range);\n      // Remove duplicates by converting it to an `OrderedSet` first.\n      return new _immutable.List(new _immutable.OrderedSet(array));\n    }\n\n    /**\n     * Get the closest inline nodes for each text node in a `range` as an array.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getInlinesAtRangeAsArray',\n    value: function getInlinesAtRangeAsArray(range) {\n      var _this = this;\n\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      return this.getTextsAtRangeAsArray(range).map(function (text) {\n        return _this.getClosestInline(text.key);\n      }).filter(function (exists) {\n        return exists;\n      });\n    }\n\n    /**\n     * Get all of the leaf inline nodes that match a `type`.\n     *\n     * @param {String} type\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getInlinesByType',\n    value: function getInlinesByType(type) {\n      var array = this.getInlinesByTypeAsArray(type);\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get all of the leaf inline nodes that match a `type` as an array.\n     *\n     * @param {String} type\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getInlinesByTypeAsArray',\n    value: function getInlinesByTypeAsArray(type) {\n      return this.nodes.reduce(function (inlines, node) {\n        if (node.kind == 'text') {\n          return inlines;\n        } else if (node.isLeafInline() && node.type == type) {\n          inlines.push(node);\n          return inlines;\n        } else {\n          return inlines.concat(node.getInlinesByTypeAsArray(type));\n        }\n      }, []);\n    }\n\n    /**\n     * Return a set of all keys in the node as an array.\n     *\n     * @return {Array<String>}\n     */\n\n  }, {\n    key: 'getKeysAsArray',\n    value: function getKeysAsArray() {\n      var keys = [];\n\n      this.forEachDescendant(function (desc) {\n        keys.push(desc.key);\n      });\n\n      return keys;\n    }\n\n    /**\n     * Return a set of all keys in the node.\n     *\n     * @return {Set<String>}\n     */\n\n  }, {\n    key: 'getKeys',\n    value: function getKeys() {\n      var keys = this.getKeysAsArray();\n      return new _immutable.Set(keys);\n    }\n\n    /**\n     * Get the last child text node.\n     *\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getLastText',\n    value: function getLastText() {\n      var descendantFound = null;\n\n      var found = this.nodes.findLast(function (node) {\n        if (node.kind == 'text') return true;\n        descendantFound = node.getLastText();\n        return descendantFound;\n      });\n\n      return descendantFound || found;\n    }\n\n    /**\n     * Get all of the marks for all of the characters of every text node.\n     *\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getMarks',\n    value: function getMarks() {\n      var array = this.getMarksAsArray();\n      return new _immutable.Set(array);\n    }\n\n    /**\n     * Get all of the marks for all of the characters of every text node.\n     *\n     * @return {OrderedSet<Mark>}\n     */\n\n  }, {\n    key: 'getOrderedMarks',\n    value: function getOrderedMarks() {\n      var array = this.getMarksAsArray();\n      return new _immutable.OrderedSet(array);\n    }\n\n    /**\n     * Get all of the marks as an array.\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getMarksAsArray',\n    value: function getMarksAsArray() {\n      return this.nodes.reduce(function (marks, node) {\n        return marks.concat(node.getMarksAsArray());\n      }, []);\n    }\n\n    /**\n     * Get a set of the marks in a `range`.\n     *\n     * @param {Range} range\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getMarksAtRange',\n    value: function getMarksAtRange(range) {\n      var array = this.getMarksAtRangeAsArray(range);\n      return new _immutable.Set(array);\n    }\n\n    /**\n     * Get a set of the marks in a `range`.\n     *\n     * @param {Range} range\n     * @return {OrderedSet<Mark>}\n     */\n\n  }, {\n    key: 'getOrderedMarksAtRange',\n    value: function getOrderedMarksAtRange(range) {\n      var array = this.getMarksAtRangeAsArray(range);\n      return new _immutable.OrderedSet(array);\n    }\n\n    /**\n     * Get a set of the active marks in a `range`.\n     *\n     * @param {Range} range\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getActiveMarksAtRange',\n    value: function getActiveMarksAtRange(range) {\n      var array = this.getActiveMarksAtRangeAsArray(range);\n      return new _immutable.Set(array);\n    }\n\n    /**\n     * Get a set of the marks in a `range`, by unioning.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getMarksAtRangeAsArray',\n    value: function getMarksAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      var _range3 = range,\n          startKey = _range3.startKey,\n          startOffset = _range3.startOffset;\n\n      // If the range is collapsed at the start of the node, check the previous.\n\n      if (range.isCollapsed && startOffset == 0) {\n        var previous = this.getPreviousText(startKey);\n        if (!previous || previous.text.length == 0) return [];\n        var char = previous.characters.get(previous.text.length - 1);\n        return char.marks.toArray();\n      }\n\n      // If the range is collapsed, check the character before the start.\n      if (range.isCollapsed) {\n        var text = this.getDescendant(startKey);\n        var _char = text.characters.get(range.startOffset - 1);\n        return _char.marks.toArray();\n      }\n\n      // Otherwise, get a set of the marks for each character in the range.\n      return this.getCharactersAtRange(range).reduce(function (memo, char) {\n        char.marks.toArray().forEach(function (c) {\n          return memo.push(c);\n        });\n        return memo;\n      }, []);\n    }\n\n    /**\n     * Get a set of marks in a `range`, by intersecting.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getActiveMarksAtRangeAsArray',\n    value: function getActiveMarksAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      var _range4 = range,\n          startKey = _range4.startKey,\n          startOffset = _range4.startOffset;\n\n      // If the range is collapsed at the start of the node, check the previous.\n\n      if (range.isCollapsed && startOffset == 0) {\n        var previous = this.getPreviousText(startKey);\n        if (!previous || previous.text.length == 0) return [];\n        var char = previous.characters.get(previous.text.length - 1);\n        return char.marks.toArray();\n      }\n\n      // If the range is collapsed, check the character before the start.\n      if (range.isCollapsed) {\n        var text = this.getDescendant(startKey);\n        var _char2 = text.characters.get(range.startOffset - 1);\n        return _char2.marks.toArray();\n      }\n\n      // Otherwise, get a set of the marks for each character in the range.\n      var chars = this.getCharactersAtRange(range);\n      var first = chars.first();\n      if (!first) return [];\n\n      var memo = first.marks;\n\n      chars.slice(1).forEach(function (char) {\n        memo = memo.intersect(char.marks);\n        return memo.size != 0;\n      });\n\n      return memo.toArray();\n    }\n\n    /**\n     * Get all of the marks that match a `type`.\n     *\n     * @param {String} type\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getMarksByType',\n    value: function getMarksByType(type) {\n      var array = this.getMarksByTypeAsArray(type);\n      return new _immutable.Set(array);\n    }\n\n    /**\n     * Get all of the marks that match a `type`.\n     *\n     * @param {String} type\n     * @return {OrderedSet<Mark>}\n     */\n\n  }, {\n    key: 'getOrderedMarksByType',\n    value: function getOrderedMarksByType(type) {\n      var array = this.getMarksByTypeAsArray(type);\n      return new _immutable.OrderedSet(array);\n    }\n\n    /**\n     * Get all of the marks that match a `type` as an array.\n     *\n     * @param {String} type\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getMarksByTypeAsArray',\n    value: function getMarksByTypeAsArray(type) {\n      return this.nodes.reduce(function (array, node) {\n        return node.kind == 'text' ? array.concat(node.getMarksAsArray().filter(function (m) {\n          return m.type == type;\n        })) : array.concat(node.getMarksByTypeAsArray(type));\n      }, []);\n    }\n\n    /**\n     * Get the block node before a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNextBlock',\n    value: function getNextBlock(key) {\n      var child = this.assertDescendant(key);\n      var last = void 0;\n\n      if (child.kind == 'block') {\n        last = child.getLastText();\n      } else {\n        var block = this.getClosestBlock(key);\n        last = block.getLastText();\n      }\n\n      var next = this.getNextText(last.key);\n      if (!next) return null;\n\n      return this.getClosestBlock(next.key);\n    }\n\n    /**\n     * Get the node after a descendant by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNextSibling',\n    value: function getNextSibling(key) {\n      key = assertKey(key);\n\n      var parent = this.getParent(key);\n      var after = parent.nodes.skipUntil(function (child) {\n        return child.key == key;\n      });\n\n      if (after.size == 0) {\n        throw new Error('Could not find a child node with key \"' + key + '\".');\n      }\n      return after.get(1);\n    }\n\n    /**\n     * Get the text node after a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNextText',\n    value: function getNextText(key) {\n      key = assertKey(key);\n      return this.getTexts().skipUntil(function (text) {\n        return text.key == key;\n      }).get(1);\n    }\n\n    /**\n     * Get a node in the tree by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNode',\n    value: function getNode(key) {\n      key = assertKey(key);\n      return this.key == key ? this : this.getDescendant(key);\n    }\n\n    /**\n     * Get a node in the tree by `path`.\n     *\n     * @param {Array} path\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNodeAtPath',\n    value: function getNodeAtPath(path) {\n      return path.length ? this.getDescendantAtPath(path) : this;\n    }\n\n    /**\n     * Get the offset for a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Number}\n     */\n\n  }, {\n    key: 'getOffset',\n    value: function getOffset(key) {\n      this.assertDescendant(key);\n\n      // Calculate the offset of the nodes before the highest child.\n      var child = this.getFurthestAncestor(key);\n      var offset = this.nodes.takeUntil(function (n) {\n        return n == child;\n      }).reduce(function (memo, n) {\n        return memo + n.text.length;\n      }, 0);\n\n      // Recurse if need be.\n      return this.hasChild(key) ? offset : offset + child.getOffset(key);\n    }\n\n    /**\n     * Get the offset from a `range`.\n     *\n     * @param {Range} range\n     * @return {Number}\n     */\n\n  }, {\n    key: 'getOffsetAtRange',\n    value: function getOffsetAtRange(range) {\n      range = range.normalize(this);\n\n      if (range.isUnset) {\n        throw new Error('The range cannot be unset to calculcate its offset.');\n      }\n\n      if (range.isExpanded) {\n        throw new Error('The range must be collapsed to calculcate its offset.');\n      }\n\n      var _range5 = range,\n          startKey = _range5.startKey,\n          startOffset = _range5.startOffset;\n\n      return this.getOffset(startKey) + startOffset;\n    }\n\n    /**\n     * Get the parent of a child node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getParent',\n    value: function getParent(key) {\n      if (this.hasChild(key)) return this;\n\n      var node = null;\n\n      this.nodes.find(function (child) {\n        if (child.kind == 'text') {\n          return false;\n        } else {\n          node = child.getParent(key);\n          return node;\n        }\n      });\n\n      return node;\n    }\n\n    /**\n     * Get the path of a descendant node by `key`.\n     *\n     * @param {String|Node} key\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getPath',\n    value: function getPath(key) {\n      var child = this.assertNode(key);\n      var ancestors = this.getAncestors(key);\n      var path = [];\n\n      ancestors.reverse().forEach(function (ancestor) {\n        var index = ancestor.nodes.indexOf(child);\n        path.unshift(index);\n        child = ancestor;\n      });\n\n      return path;\n    }\n\n    /**\n     * Get the placeholder for the node from a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Component|Void}\n     */\n\n  }, {\n    key: 'getPlaceholder',\n    value: function getPlaceholder(schema) {\n      return schema.__getPlaceholder(this);\n    }\n\n    /**\n     * Get the block node before a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getPreviousBlock',\n    value: function getPreviousBlock(key) {\n      var child = this.assertDescendant(key);\n      var first = void 0;\n\n      if (child.kind == 'block') {\n        first = child.getFirstText();\n      } else {\n        var block = this.getClosestBlock(key);\n        first = block.getFirstText();\n      }\n\n      var previous = this.getPreviousText(first.key);\n      if (!previous) return null;\n\n      return this.getClosestBlock(previous.key);\n    }\n\n    /**\n     * Get the node before a descendant node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getPreviousSibling',\n    value: function getPreviousSibling(key) {\n      key = assertKey(key);\n      var parent = this.getParent(key);\n      var before = parent.nodes.takeUntil(function (child) {\n        return child.key == key;\n      });\n\n      if (before.size == parent.nodes.size) {\n        throw new Error('Could not find a child node with key \"' + key + '\".');\n      }\n\n      return before.last();\n    }\n\n    /**\n     * Get the text node before a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getPreviousText',\n    value: function getPreviousText(key) {\n      key = assertKey(key);\n      return this.getTexts().takeUntil(function (text) {\n        return text.key == key;\n      }).last();\n    }\n\n    /**\n     * Get the indexes of the selection for a `range`, given an extra flag for\n     * whether the node `isSelected`, to determine whether not finding matches\n     * means everything is selected or nothing is.\n     *\n     * @param {Range} range\n     * @param {Boolean} isSelected\n     * @return {Object|Null}\n     */\n\n  }, {\n    key: 'getSelectionIndexes',\n    value: function getSelectionIndexes(range) {\n      var isSelected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var startKey = range.startKey,\n          endKey = range.endKey;\n\n      // PERF: if we're not selected, or the range is blurred, we can exit early.\n\n      if (!isSelected || range.isBlurred) {\n        return null;\n      }\n\n      // if we've been given an invalid selection we can exit early.\n      if (range.isUnset) {\n        return null;\n      }\n\n      // PERF: if the start and end keys are the same, just check for the child\n      // that contains that single key.\n      if (startKey == endKey) {\n        var child = this.getFurthestAncestor(startKey);\n        var index = child ? this.nodes.indexOf(child) : null;\n        return { start: index, end: index + 1 };\n      }\n\n      // Otherwise, check all of the children...\n      var start = null;\n      var end = null;\n\n      this.nodes.forEach(function (child, i) {\n        if (child.kind == 'text') {\n          if (start == null && child.key == startKey) start = i;\n          if (end == null && child.key == endKey) end = i + 1;\n        } else {\n          if (start == null && child.hasDescendant(startKey)) start = i;\n          if (end == null && child.hasDescendant(endKey)) end = i + 1;\n        }\n\n        // PERF: exit early if both start and end have been found.\n        return start == null || end == null;\n      });\n\n      if (isSelected && start == null) start = 0;\n      if (isSelected && end == null) end = this.nodes.size;\n      return start == null ? null : { start: start, end: end };\n    }\n\n    /**\n     * Get the concatenated text string of all child nodes.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'getText',\n    value: function getText() {\n      return this.nodes.reduce(function (string, node) {\n        return string + node.text;\n      }, '');\n    }\n\n    /**\n     * Get the descendent text node at an `offset`.\n     *\n     * @param {String} offset\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getTextAtOffset',\n    value: function getTextAtOffset(offset) {\n      // PERF: Add a few shortcuts for the obvious cases.\n      if (offset == 0) return this.getFirstText();\n      if (offset == this.text.length) return this.getLastText();\n      if (offset < 0 || offset > this.text.length) return null;\n\n      var length = 0;\n\n      return this.getTexts().find(function (node, i, nodes) {\n        length += node.text.length;\n        return length > offset;\n      });\n    }\n\n    /**\n     * Get the direction of the node's text.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'getTextDirection',\n    value: function getTextDirection() {\n      var dir = (0, _direction2.default)(this.text);\n      return dir == 'neutral' ? undefined : dir;\n    }\n\n    /**\n     * Recursively get all of the child text nodes in order of appearance.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getTexts',\n    value: function getTexts() {\n      var array = this.getTextsAsArray();\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Recursively get all the leaf text nodes in order of appearance, as array.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getTextsAsArray',\n    value: function getTextsAsArray() {\n      var array = [];\n\n      this.nodes.forEach(function (node) {\n        if (node.kind == 'text') {\n          array.push(node);\n        } else {\n          array = array.concat(node.getTextsAsArray());\n        }\n      });\n\n      return array;\n    }\n\n    /**\n     * Get all of the text nodes in a `range`.\n     *\n     * @param {Range} range\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getTextsAtRange',\n    value: function getTextsAtRange(range) {\n      var array = this.getTextsAtRangeAsArray(range);\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get all of the text nodes in a `range` as an array.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getTextsAtRangeAsArray',\n    value: function getTextsAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      var _range6 = range,\n          startKey = _range6.startKey,\n          endKey = _range6.endKey;\n\n      var startText = this.getDescendant(startKey);\n\n      // PERF: the most common case is when the range is in a single text node,\n      // where we can avoid a lot of iterating of the tree.\n      if (startKey == endKey) return [startText];\n\n      var endText = this.getDescendant(endKey);\n      var texts = this.getTextsAsArray();\n      var start = texts.indexOf(startText);\n      var end = texts.indexOf(endText);\n      return texts.slice(start, end + 1);\n    }\n\n    /**\n     * Check if a child node exists by `key`.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasChild',\n    value: function hasChild(key) {\n      return !!this.getChild(key);\n    }\n\n    /**\n     * Recursively check if a child node exists by `key`.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasDescendant',\n    value: function hasDescendant(key) {\n      return !!this.getDescendant(key);\n    }\n\n    /**\n     * Recursively check if a node exists by `key`.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasNode',\n    value: function hasNode(key) {\n      return !!this.getNode(key);\n    }\n\n    /**\n     * Check if a node has a void parent by `key`.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasVoidParent',\n    value: function hasVoidParent(key) {\n      return !!this.getClosest(key, function (parent) {\n        return parent.isVoid;\n      });\n    }\n\n    /**\n     * Insert a `node` at `index`.\n     *\n     * @param {Number} index\n     * @param {Node} node\n     * @return {Node}\n     */\n\n  }, {\n    key: 'insertNode',\n    value: function insertNode(index, node) {\n      var keys = this.getKeys();\n\n      if (keys.contains(node.key)) {\n        node = node.regenerateKey();\n      }\n\n      if (node.kind != 'text') {\n        node = node.mapDescendants(function (desc) {\n          return keys.contains(desc.key) ? desc.regenerateKey() : desc;\n        });\n      }\n\n      var nodes = this.nodes.insert(index, node);\n      return this.set('nodes', nodes);\n    }\n\n    /**\n     * Check whether the node is in a `range`.\n     *\n     * @param {Range} range\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isInRange',\n    value: function isInRange(range) {\n      range = range.normalize(this);\n\n      var node = this;\n      var _range7 = range,\n          startKey = _range7.startKey,\n          endKey = _range7.endKey,\n          isCollapsed = _range7.isCollapsed;\n\n      // PERF: solve the most common cast where the start or end key are inside\n      // the node, for collapsed selections.\n\n      if (node.key == startKey || node.key == endKey || node.hasDescendant(startKey) || node.hasDescendant(endKey)) {\n        return true;\n      }\n\n      // PERF: if the selection is collapsed and the previous check didn't return\n      // true, then it must be false.\n      if (isCollapsed) {\n        return false;\n      }\n\n      // Otherwise, look through all of the leaf text nodes in the range, to see\n      // if any of them are inside the node.\n      var texts = node.getTextsAtRange(range);\n      var memo = false;\n\n      texts.forEach(function (text) {\n        if (node.hasDescendant(text.key)) memo = true;\n        return memo;\n      });\n\n      return memo;\n    }\n\n    /**\n     * Check whether the node is a leaf block.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isLeafBlock',\n    value: function isLeafBlock() {\n      return this.kind == 'block' && this.nodes.every(function (n) {\n        return n.kind != 'block';\n      });\n    }\n\n    /**\n     * Check whether the node is a leaf inline.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isLeafInline',\n    value: function isLeafInline() {\n      return this.kind == 'inline' && this.nodes.every(function (n) {\n        return n.kind != 'inline';\n      });\n    }\n\n    /**\n     * Merge a children node `first` with another children node `second`.\n     * `first` and `second` will be concatenated in that order.\n     * `first` and `second` must be two Nodes or two Text.\n     *\n     * @param {Node} first\n     * @param {Node} second\n     * @return {Node}\n     */\n\n  }, {\n    key: 'mergeNode',\n    value: function mergeNode(withIndex, index) {\n      var node = this;\n      var one = node.nodes.get(withIndex);\n      var two = node.nodes.get(index);\n\n      if (one.kind != two.kind) {\n        throw new Error('Tried to merge two nodes of different kinds: \"' + one.kind + '\" and \"' + two.kind + '\".');\n      }\n\n      // If the nodes are text nodes, concatenate their characters together.\n      if (one.kind == 'text') {\n        var characters = one.characters.concat(two.characters);\n        one = one.set('characters', characters);\n      }\n\n      // Otherwise, concatenate their child nodes together.\n      else {\n          var nodes = one.nodes.concat(two.nodes);\n          one = one.set('nodes', nodes);\n        }\n\n      node = node.removeNode(index);\n      node = node.removeNode(withIndex);\n      node = node.insertNode(withIndex, one);\n      return node;\n    }\n\n    /**\n     * Map all child nodes, updating them in their parents. This method is\n     * optimized to not return a new node if no changes are made.\n     *\n     * @param {Function} iterator\n     * @return {Node}\n     */\n\n  }, {\n    key: 'mapChildren',\n    value: function mapChildren(iterator) {\n      var _this2 = this;\n\n      var nodes = this.nodes;\n\n\n      nodes.forEach(function (node, i) {\n        var ret = iterator(node, i, _this2.nodes);\n        if (ret != node) nodes = nodes.set(ret.key, ret);\n      });\n\n      return this.set('nodes', nodes);\n    }\n\n    /**\n     * Map all descendant nodes, updating them in their parents. This method is\n     * optimized to not return a new node if no changes are made.\n     *\n     * @param {Function} iterator\n     * @return {Node}\n     */\n\n  }, {\n    key: 'mapDescendants',\n    value: function mapDescendants(iterator) {\n      var _this3 = this;\n\n      var nodes = this.nodes;\n\n\n      nodes.forEach(function (node, i) {\n        var ret = node;\n        if (ret.kind != 'text') ret = ret.mapDescendants(iterator);\n        ret = iterator(ret, i, _this3.nodes);\n        if (ret == node) return;\n\n        var index = nodes.indexOf(node);\n        nodes = nodes.set(index, ret);\n      });\n\n      return this.set('nodes', nodes);\n    }\n\n    /**\n     * Regenerate the node's key.\n     *\n     * @return {Node}\n     */\n\n  }, {\n    key: 'regenerateKey',\n    value: function regenerateKey() {\n      var key = (0, _generateKey2.default)();\n      return this.set('key', key);\n    }\n\n    /**\n     * Remove a `node` from the children node map.\n     *\n     * @param {String} key\n     * @return {Node}\n     */\n\n  }, {\n    key: 'removeDescendant',\n    value: function removeDescendant(key) {\n      key = assertKey(key);\n\n      var node = this;\n      var parent = node.getParent(key);\n      if (!parent) throw new Error('Could not find a descendant node with key \"' + key + '\".');\n\n      var index = parent.nodes.findIndex(function (n) {\n        return n.key === key;\n      });\n      var nodes = parent.nodes.splice(index, 1);\n\n      parent = parent.set('nodes', nodes);\n      node = node.updateNode(parent);\n      return node;\n    }\n\n    /**\n     * Remove a node at `index`.\n     *\n     * @param {Number} index\n     * @return {Node}\n     */\n\n  }, {\n    key: 'removeNode',\n    value: function removeNode(index) {\n      var nodes = this.nodes.splice(index, 1);\n      return this.set('nodes', nodes);\n    }\n\n    /**\n     * Split a child node by `index` at `position`.\n     *\n     * @param {Number} index\n     * @param {Number} position\n     * @return {Node}\n     */\n\n  }, {\n    key: 'splitNode',\n    value: function splitNode(index, position) {\n      var node = this;\n      var child = node.nodes.get(index);\n      var one = void 0;\n      var two = void 0;\n\n      // If the child is a text node, the `position` refers to the text offset at\n      // which to split it.\n      if (child.kind == 'text') {\n        var befores = child.characters.take(position);\n        var afters = child.characters.skip(position);\n        one = child.set('characters', befores);\n        two = child.set('characters', afters).regenerateKey();\n      }\n\n      // Otherwise, if the child is not a text node, the `position` refers to the\n      // index at which to split its children.\n      else {\n          var _befores = child.nodes.take(position);\n          var _afters = child.nodes.skip(position);\n          one = child.set('nodes', _befores);\n          two = child.set('nodes', _afters).regenerateKey();\n        }\n\n      // Remove the old node and insert the newly split children.\n      node = node.removeNode(index);\n      node = node.insertNode(index, two);\n      node = node.insertNode(index, one);\n      return node;\n    }\n\n    /**\n     * Set a new value for a child node by `key`.\n     *\n     * @param {Node} node\n     * @return {Node}\n     */\n\n  }, {\n    key: 'updateNode',\n    value: function updateNode(node) {\n      if (node.key == this.key) {\n        return node;\n      }\n\n      var child = this.assertDescendant(node.key);\n      var ancestors = this.getAncestors(node.key);\n\n      ancestors.reverse().forEach(function (parent) {\n        var _parent = parent,\n            nodes = _parent.nodes;\n\n        var index = nodes.indexOf(child);\n        child = parent;\n        nodes = nodes.set(index, node);\n        parent = parent.set('nodes', nodes);\n        node = parent;\n      });\n\n      return node;\n    }\n\n    /**\n     * Validate the node against a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Function|Null}\n     */\n\n  }, {\n    key: 'validate',\n    value: function validate(schema) {\n      return schema.validateNode(this);\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Node` with `attrs`.\n     *\n     * @param {Object|Node} attrs\n     * @return {Node}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Node.isNode(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        switch (attrs.kind) {\n          case 'block':\n            return _block2.default.create(attrs);\n          case 'document':\n            return _document2.default.create(attrs);\n          case 'inline':\n            return _inline2.default.create(attrs);\n          case 'text':\n            return _text2.default.create(attrs);\n          default:\n            {\n              throw new Error('`Node.create` requires a `kind` string.');\n            }\n        }\n      }\n\n      throw new Error('`Node.create` only accepts objects or nodes but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Nodes` from an array.\n     *\n     * @param {Array<Object|Node>} elements\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Node.create));\n        return list;\n      }\n\n      throw new Error('`Node.createList` only accepts lists or arrays, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a dictionary of settable node properties from `attrs`.\n     *\n     * @param {Object|String|Node} attrs\n     * @return {Object}\n     */\n\n  }, {\n    key: 'createProperties',\n    value: function createProperties() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (_block2.default.isBlock(attrs) || _inline2.default.isInline(attrs)) {\n        return {\n          data: attrs.data,\n          isVoid: attrs.isVoid,\n          type: attrs.type\n        };\n      }\n\n      if (typeof attrs == 'string') {\n        return { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        var props = {};\n        if ('type' in attrs) props.type = attrs.type;\n        if ('data' in attrs) props.data = _data2.default.create(attrs.data);\n        if ('isVoid' in attrs) props.isVoid = attrs.isVoid;\n        return props;\n      }\n\n      throw new Error('`Node.createProperties` only accepts objects, strings, blocks or inlines, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Node` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Node}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var kind = object.kind;\n\n\n      switch (kind) {\n        case 'block':\n          return _block2.default.fromJSON(object);\n        case 'document':\n          return _document2.default.fromJSON(object);\n        case 'inline':\n          return _inline2.default.fromJSON(object);\n        case 'text':\n          return _text2.default.fromJSON(object);\n        default:\n          {\n            throw new Error('`Node.fromJSON` requires a `kind` of either \\'block\\', \\'document\\', \\'inline\\' or \\'text\\', but you passed: ' + kind);\n          }\n      }\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isNode',\n\n\n    /**\n     * Check if `any` is a `Node`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isNode(any) {\n      return _block2.default.isBlock(any) || _document2.default.isDocument(any) || _inline2.default.isInline(any) || _text2.default.isText(any);\n    }\n\n    /**\n     * Check if `any` is a list of nodes.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isNodeList',\n    value: function isNodeList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Node.isNode(item);\n      });\n    }\n  }]);\n\n  return Node;\n}();\n\n/**\n * Assert a key `arg`.\n *\n * @param {String} arg\n * @return {String}\n */\n\nNode.fromJS = Node.fromJSON;\nfunction assertKey(arg) {\n  if (typeof arg == 'string') return arg;\n  throw new Error('Invalid `key` argument! It must be a key string, but you passed: ' + arg);\n}\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Node.prototype, ['getBlocks', 'getBlocksAsArray', 'getCharacters', 'getCharactersAsArray', 'getFirstText', 'getInlines', 'getInlinesAsArray', 'getKeys', 'getKeysAsArray', 'getLastText', 'getMarks', 'getOrderedMarks', 'getMarksAsArray', 'getText', 'getTextDirection', 'getTexts', 'getTextsAsArray', 'isLeafBlock', 'isLeafInline'], {\n  takesArguments: false\n});\n\n(0, _memoize2.default)(Node.prototype, ['areDescendantsSorted', 'getActiveMarksAtRange', 'getActiveMarksAtRangeAsArray', 'getAncestors', 'getBlocksAtRange', 'getBlocksAtRangeAsArray', 'getBlocksByType', 'getBlocksByTypeAsArray', 'getCharactersAtRange', 'getCharactersAtRangeAsArray', 'getChild', 'getClosestBlock', 'getClosestInline', 'getClosestVoid', 'getCommonAncestor', 'getDecorations', 'getDepth', 'getDescendant', 'getDescendantAtPath', 'getFragmentAtRange', 'getFurthestBlock', 'getFurthestInline', 'getFurthestAncestor', 'getFurthestOnlyChildAncestor', 'getInlinesAtRange', 'getInlinesAtRangeAsArray', 'getInlinesByType', 'getInlinesByTypeAsArray', 'getMarksAtRange', 'getOrderedMarksAtRange', 'getMarksAtRangeAsArray', 'getMarksByType', 'getOrderedMarksByType', 'getMarksByTypeAsArray', 'getNextBlock', 'getNextSibling', 'getNextText', 'getNode', 'getNodeAtPath', 'getOffset', 'getOffsetAtRange', 'getParent', 'getPath', 'getPlaceholder', 'getPreviousBlock', 'getPreviousSibling', 'getPreviousText', 'getTextAtOffset', 'getTextsAtRange', 'getTextsAtRangeAsArray', 'hasChild', 'hasDescendant', 'hasNode', 'hasVoidParent', 'validate'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Node;\n\n/***/ }),\n/* 283 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsNative = __webpack_require__(423),\n    getValue = __webpack_require__(426);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n/***/ }),\n/* 284 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/media/orange-brush1.8b2abd28.png\";\n\n/***/ }),\n/* 285 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(293);\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _node = __webpack_require__(282);\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _generateKey = __webpack_require__(287);\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/**\n * Prevent circular dependencies.\n */\n\n/**\n * Dependencies.\n */\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  isVoid: false,\n  key: undefined,\n  nodes: new _immutable.List(),\n  type: undefined\n};\n\n/**\n * Block.\n *\n * @type {Block}\n */\n\nvar Block = function (_Record) {\n  _inherits(Block, _Record);\n\n  function Block() {\n    _classCallCheck(this, Block);\n\n    return _possibleConstructorReturn(this, (Block.__proto__ || Object.getPrototypeOf(Block)).apply(this, arguments));\n  }\n\n  _createClass(Block, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the block.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        type: this.type,\n        isVoid: this.isVoid,\n        data: this.data.toJSON(),\n        nodes: this.nodes.toArray().map(function (n) {\n          return n.toJSON(options);\n        })\n      };\n\n      if (options.preserveKeys) {\n        object.key = this.key;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'block';\n    }\n\n    /**\n     * Check if the block is empty.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      return this.text == '';\n    }\n\n    /**\n     * Get the concatenated text of all the block's children.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'text',\n    get: function get() {\n      return this.getText();\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Block` from `attrs`.\n     *\n     * @param {Object|String|Block} attrs\n     * @return {Block}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Block.isBlock(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Block.fromJSON(attrs);\n      }\n\n      throw new Error('`Block.create` only accepts objects, strings or blocks, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Blocks` from `attrs`.\n     *\n     * @param {Array<Block|Object>|List<Block|Object>} attrs\n     * @return {List<Block>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(attrs) || Array.isArray(attrs)) {\n        var list = new _immutable.List(attrs.map(Block.create));\n        return list;\n      }\n\n      throw new Error('`Block.createList` only accepts arrays or lists, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Block` from a JSON `object`.\n     *\n     * @param {Object|Block} object\n     * @return {Block}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Block.isBlock(object)) {\n        return object;\n      }\n\n      var _object$data = object.data,\n          data = _object$data === undefined ? {} : _object$data,\n          _object$isVoid = object.isVoid,\n          isVoid = _object$isVoid === undefined ? false : _object$isVoid,\n          _object$key = object.key,\n          key = _object$key === undefined ? (0, _generateKey2.default)() : _object$key,\n          _object$nodes = object.nodes,\n          nodes = _object$nodes === undefined ? [] : _object$nodes,\n          type = object.type;\n\n\n      if (typeof type != 'string') {\n        throw new Error('`Block.fromJSON` requires a `type` string.');\n      }\n\n      var block = new Block({\n        key: key,\n        type: type,\n        isVoid: !!isVoid,\n        data: new _immutable.Map(data),\n        nodes: new _immutable.List(nodes.map(_node2.default.fromJSON))\n      });\n\n      return block;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isBlock',\n\n\n    /**\n     * Check if `any` is a `Block`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isBlock(any) {\n      return !!(any && any[_modelTypes2.default.BLOCK]);\n    }\n\n    /**\n     * Check if `any` is a block list.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isBlockList',\n    value: function isBlockList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Block.isBlock(item);\n      });\n    }\n  }]);\n\n  return Block;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nBlock.fromJS = Block.fromJSON;\nBlock.prototype[_modelTypes2.default.BLOCK] = true;\n\n/**\n * Mix in `Node` methods.\n */\n\nObject.getOwnPropertyNames(_node2.default.prototype).forEach(function (method) {\n  if (method == 'constructor') return;\n  Block.prototype[method] = _node2.default.prototype[method];\n});\n\n/**\n * Export.\n *\n * @type {Block}\n */\n\nexports.default = Block;\n\n/***/ }),\n/* 286 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(293);\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _node = __webpack_require__(282);\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _generateKey = __webpack_require__(287);\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/**\n * Prevent circular dependencies.\n */\n\n/**\n * Dependencies.\n */\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  isVoid: false,\n  key: undefined,\n  nodes: new _immutable.List(),\n  type: undefined\n};\n\n/**\n * Inline.\n *\n * @type {Inline}\n */\n\nvar Inline = function (_Record) {\n  _inherits(Inline, _Record);\n\n  function Inline() {\n    _classCallCheck(this, Inline);\n\n    return _possibleConstructorReturn(this, (Inline.__proto__ || Object.getPrototypeOf(Inline)).apply(this, arguments));\n  }\n\n  _createClass(Inline, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the inline.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        type: this.type,\n        isVoid: this.isVoid,\n        data: this.data.toJSON(),\n        nodes: this.nodes.toArray().map(function (n) {\n          return n.toJSON(options);\n        })\n      };\n\n      if (options.preserveKeys) {\n        object.key = this.key;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'inline';\n    }\n\n    /**\n     * Check if the inline is empty.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      return this.text == '';\n    }\n\n    /**\n     * Get the concatenated text of all the inline's children.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'text',\n    get: function get() {\n      return this.getText();\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Inline` with `attrs`.\n     *\n     * @param {Object|String|Inline} attrs\n     * @return {Inline}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Inline.isInline(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Inline.fromJSON(attrs);\n      }\n\n      throw new Error('`Inline.create` only accepts objects, strings or inlines, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Inlines` from an array.\n     *\n     * @param {Array<Inline|Object>|List<Inline|Object>} elements\n     * @return {List<Inline>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Inline.create));\n        return list;\n      }\n\n      throw new Error('`Inline.createList` only accepts arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a `Inline` from a JSON `object`.\n     *\n     * @param {Object|Inline} object\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Inline.isInline(object)) {\n        return object;\n      }\n\n      var _object$data = object.data,\n          data = _object$data === undefined ? {} : _object$data,\n          _object$isVoid = object.isVoid,\n          isVoid = _object$isVoid === undefined ? false : _object$isVoid,\n          _object$key = object.key,\n          key = _object$key === undefined ? (0, _generateKey2.default)() : _object$key,\n          _object$nodes = object.nodes,\n          nodes = _object$nodes === undefined ? [] : _object$nodes,\n          type = object.type;\n\n\n      if (typeof type != 'string') {\n        throw new Error('`Inline.fromJS` requires a `type` string.');\n      }\n\n      var inline = new Inline({\n        key: key,\n        type: type,\n        isVoid: !!isVoid,\n        data: new _immutable.Map(data),\n        nodes: new _immutable.List(nodes.map(_node2.default.fromJSON))\n      });\n\n      return inline;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isInline',\n\n\n    /**\n     * Check if `any` is a `Inline`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isInline(any) {\n      return !!(any && any[_modelTypes2.default.INLINE]);\n    }\n\n    /**\n     * Check if `any` is a list of inlines.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isInlineList',\n    value: function isInlineList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Inline.isInline(item);\n      });\n    }\n  }]);\n\n  return Inline;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nInline.fromJS = Inline.fromJSON;\nInline.prototype[_modelTypes2.default.INLINE] = true;\n\n/**\n * Mix in `Node` methods.\n */\n\nObject.getOwnPropertyNames(_node2.default.prototype).forEach(function (method) {\n  if (method == 'constructor') return;\n  Inline.prototype[method] = _node2.default.prototype[method];\n});\n\n/**\n * Export.\n *\n * @type {Inline}\n */\n\nexports.default = Inline;\n\n/***/ }),\n/* 287 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * An auto-incrementing index for generating keys.\n *\n * @type {Number}\n */\n\nvar n = void 0;\n\n/**\n * The global key generating function.\n *\n * @type {Function}\n */\n\nvar generate = void 0;\n\n/**\n * Generate a key.\n *\n * @return {String}\n */\n\nfunction generateKey() {\n  return generate();\n}\n\n/**\n * Set a different unique ID generating `function`.\n *\n * @param {Function} func\n */\n\nfunction setKeyGenerator(func) {\n  generate = func;\n}\n\n/**\n * Reset the key generating function to its initial state.\n */\n\nfunction resetKeyGenerator() {\n  n = 0;\n  generate = function generate() {\n    return \"\" + n++;\n  };\n}\n\n/**\n * Set the initial state.\n */\n\nresetKeyGenerator();\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = generateKey;\nexports.setKeyGenerator = setKeyGenerator;\nexports.resetKeyGenerator = resetKeyGenerator;\n\n/***/ }),\n/* 288 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(271),\n    isKey = __webpack_require__(414),\n    stringToPath = __webpack_require__(417),\n    toString = __webpack_require__(441);\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n\n\n/***/ }),\n/* 289 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(290),\n    getRawTag = __webpack_require__(415),\n    objectToString = __webpack_require__(416);\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n/***/ }),\n/* 290 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(272);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n/***/ }),\n/* 291 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assignValue = __webpack_require__(330),\n    baseAssignValue = __webpack_require__(331);\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n\n\n/***/ }),\n/* 292 */,\n/* 293 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(285);\n\n__webpack_require__(286);\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _node = __webpack_require__(282);\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _generateKey = __webpack_require__(287);\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/**\n * Prevent circular dependencies.\n */\n\n/**\n * Dependencies.\n */\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  key: undefined,\n  nodes: new _immutable.List()\n};\n\n/**\n * Document.\n *\n * @type {Document}\n */\n\nvar Document = function (_Record) {\n  _inherits(Document, _Record);\n\n  function Document() {\n    _classCallCheck(this, Document);\n\n    return _possibleConstructorReturn(this, (Document.__proto__ || Object.getPrototypeOf(Document)).apply(this, arguments));\n  }\n\n  _createClass(Document, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the document.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        data: this.data.toJSON(),\n        nodes: this.nodes.toArray().map(function (n) {\n          return n.toJSON(options);\n        })\n      };\n\n      if (options.preserveKeys) {\n        object.key = this.key;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'document';\n    }\n\n    /**\n     * Check if the document is empty.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      return this.text == '';\n    }\n\n    /**\n     * Get the concatenated text of all the document's children.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'text',\n    get: function get() {\n      return this.getText();\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Document` with `attrs`.\n     *\n     * @param {Object|Array|List|Text} attrs\n     * @return {Document}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Document.isDocument(attrs)) {\n        return attrs;\n      }\n\n      if (_immutable.List.isList(attrs) || Array.isArray(attrs)) {\n        attrs = { nodes: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Document.fromJSON(attrs);\n      }\n\n      throw new Error('`Document.create` only accepts objects, arrays, lists or documents, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Document` from a JSON `object`.\n     *\n     * @param {Object|Document} object\n     * @return {Document}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Document.isDocument(object)) {\n        return object;\n      }\n\n      var _object$data = object.data,\n          data = _object$data === undefined ? {} : _object$data,\n          _object$key = object.key,\n          key = _object$key === undefined ? (0, _generateKey2.default)() : _object$key,\n          _object$nodes = object.nodes,\n          nodes = _object$nodes === undefined ? [] : _object$nodes;\n\n\n      var document = new Document({\n        key: key,\n        data: new _immutable.Map(data),\n        nodes: new _immutable.List(nodes.map(_node2.default.fromJSON))\n      });\n\n      return document;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isDocument',\n\n\n    /**\n     * Check if `any` is a `Document`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isDocument(any) {\n      return !!(any && any[_modelTypes2.default.DOCUMENT]);\n    }\n  }]);\n\n  return Document;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nDocument.fromJS = Document.fromJSON;\nDocument.prototype[_modelTypes2.default.DOCUMENT] = true;\n\n/**\n * Mix in `Node` methods.\n */\n\nObject.getOwnPropertyNames(_node2.default.prototype).forEach(function (method) {\n  if (method == 'constructor') return;\n  Document.prototype[method] = _node2.default.prototype[method];\n});\n\n/**\n * Export.\n *\n * @type {Document}\n */\n\nexports.default = Document;\n\n/***/ }),\n/* 294 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _slateDevLogger = __webpack_require__(402);\n\nvar _slateDevLogger2 = _interopRequireDefault(_slateDevLogger);\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _mark = __webpack_require__(275);\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  anchorKey: null,\n  anchorOffset: 0,\n  focusKey: null,\n  focusOffset: 0,\n  isBackward: null,\n  isFocused: false,\n  marks: null\n};\n\n/**\n * Range.\n *\n * @type {Range}\n */\n\nvar Range = function (_Record) {\n  _inherits(Range, _Record);\n\n  function Range() {\n    _classCallCheck(this, Range);\n\n    return _possibleConstructorReturn(this, (Range.__proto__ || Object.getPrototypeOf(Range)).apply(this, arguments));\n  }\n\n  _createClass(Range, [{\n    key: 'hasAnchorAtStartOf',\n\n\n    /**\n     * Check whether anchor point of the range is at the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n    value: function hasAnchorAtStartOf(node) {\n      // PERF: Do a check for a `0` offset first since it's quickest.\n      if (this.anchorOffset != 0) return false;\n      var first = getFirst(node);\n      return this.anchorKey == first.key;\n    }\n\n    /**\n     * Check whether anchor point of the range is at the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasAnchorAtEndOf',\n    value: function hasAnchorAtEndOf(node) {\n      var last = getLast(node);\n      return this.anchorKey == last.key && this.anchorOffset == last.text.length;\n    }\n\n    /**\n     * Check whether the anchor edge of a range is in a `node` and at an\n     * offset between `start` and `end`.\n     *\n     * @param {Node} node\n     * @param {Number} start\n     * @param {Number} end\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasAnchorBetween',\n    value: function hasAnchorBetween(node, start, end) {\n      return this.anchorOffset <= end && start <= this.anchorOffset && this.hasAnchorIn(node);\n    }\n\n    /**\n     * Check whether the anchor edge of a range is in a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasAnchorIn',\n    value: function hasAnchorIn(node) {\n      return node.kind == 'text' ? node.key == this.anchorKey : this.anchorKey != null && node.hasDescendant(this.anchorKey);\n    }\n\n    /**\n     * Check whether focus point of the range is at the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasFocusAtEndOf',\n    value: function hasFocusAtEndOf(node) {\n      var last = getLast(node);\n      return this.focusKey == last.key && this.focusOffset == last.text.length;\n    }\n\n    /**\n     * Check whether focus point of the range is at the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasFocusAtStartOf',\n    value: function hasFocusAtStartOf(node) {\n      if (this.focusOffset != 0) return false;\n      var first = getFirst(node);\n      return this.focusKey == first.key;\n    }\n\n    /**\n     * Check whether the focus edge of a range is in a `node` and at an\n     * offset between `start` and `end`.\n     *\n     * @param {Node} node\n     * @param {Number} start\n     * @param {Number} end\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasFocusBetween',\n    value: function hasFocusBetween(node, start, end) {\n      return start <= this.focusOffset && this.focusOffset <= end && this.hasFocusIn(node);\n    }\n\n    /**\n     * Check whether the focus edge of a range is in a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasFocusIn',\n    value: function hasFocusIn(node) {\n      return node.kind == 'text' ? node.key == this.focusKey : this.focusKey != null && node.hasDescendant(this.focusKey);\n    }\n\n    /**\n     * Check whether the range is at the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isAtStartOf',\n    value: function isAtStartOf(node) {\n      return this.isCollapsed && this.hasAnchorAtStartOf(node);\n    }\n\n    /**\n     * Check whether the range is at the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isAtEndOf',\n    value: function isAtEndOf(node) {\n      return this.isCollapsed && this.hasAnchorAtEndOf(node);\n    }\n\n    /**\n     * Focus the range.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'focus',\n    value: function focus() {\n      return this.merge({\n        isFocused: true\n      });\n    }\n\n    /**\n     * Blur the range.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'blur',\n    value: function blur() {\n      return this.merge({\n        isFocused: false\n      });\n    }\n\n    /**\n     * Unset the range.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'deselect',\n    value: function deselect() {\n      return this.merge({\n        anchorKey: null,\n        anchorOffset: 0,\n        focusKey: null,\n        focusOffset: 0,\n        isFocused: false,\n        isBackward: false\n      });\n    }\n\n    /**\n     * Flip the range.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'flip',\n    value: function flip() {\n      return this.merge({\n        anchorKey: this.focusKey,\n        anchorOffset: this.focusOffset,\n        focusKey: this.anchorKey,\n        focusOffset: this.anchorOffset,\n        isBackward: this.isBackward == null ? null : !this.isBackward\n      });\n    }\n\n    /**\n     * Move the anchor offset `n` characters.\n     *\n     * @param {Number} n (optional)\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchor',\n    value: function moveAnchor() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var anchorKey = this.anchorKey,\n          focusKey = this.focusKey,\n          focusOffset = this.focusOffset,\n          isBackward = this.isBackward;\n\n      var anchorOffset = this.anchorOffset + n;\n      return this.merge({\n        anchorOffset: anchorOffset,\n        isBackward: anchorKey == focusKey ? anchorOffset > focusOffset : isBackward\n      });\n    }\n\n    /**\n     * Move the anchor offset `n` characters.\n     *\n     * @param {Number} n (optional)\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocus',\n    value: function moveFocus() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var anchorKey = this.anchorKey,\n          anchorOffset = this.anchorOffset,\n          focusKey = this.focusKey,\n          isBackward = this.isBackward;\n\n      var focusOffset = this.focusOffset + n;\n      return this.merge({\n        focusOffset: focusOffset,\n        isBackward: focusKey == anchorKey ? anchorOffset > focusOffset : isBackward\n      });\n    }\n\n    /**\n     * Move the range's anchor point to a `key` and `offset`.\n     *\n     * @param {String} key\n     * @param {Number} offset\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchorTo',\n    value: function moveAnchorTo(key, offset) {\n      var anchorKey = this.anchorKey,\n          focusKey = this.focusKey,\n          focusOffset = this.focusOffset,\n          isBackward = this.isBackward;\n\n      return this.merge({\n        anchorKey: key,\n        anchorOffset: offset,\n        isBackward: key == focusKey ? offset > focusOffset : key == anchorKey ? isBackward : null\n      });\n    }\n\n    /**\n     * Move the range's focus point to a `key` and `offset`.\n     *\n     * @param {String} key\n     * @param {Number} offset\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocusTo',\n    value: function moveFocusTo(key, offset) {\n      var focusKey = this.focusKey,\n          anchorKey = this.anchorKey,\n          anchorOffset = this.anchorOffset,\n          isBackward = this.isBackward;\n\n      return this.merge({\n        focusKey: key,\n        focusOffset: offset,\n        isBackward: key == anchorKey ? anchorOffset > offset : key == focusKey ? isBackward : null\n      });\n    }\n\n    /**\n     * Move the range to `anchorOffset`.\n     *\n     * @param {Number} anchorOffset\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchorOffsetTo',\n    value: function moveAnchorOffsetTo(anchorOffset) {\n      return this.merge({\n        anchorOffset: anchorOffset,\n        isBackward: this.anchorKey == this.focusKey ? anchorOffset > this.focusOffset : this.isBackward\n      });\n    }\n\n    /**\n     * Move the range to `focusOffset`.\n     *\n     * @param {Number} focusOffset\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocusOffsetTo',\n    value: function moveFocusOffsetTo(focusOffset) {\n      return this.merge({\n        focusOffset: focusOffset,\n        isBackward: this.anchorKey == this.focusKey ? this.anchorOffset > focusOffset : this.isBackward\n      });\n    }\n\n    /**\n     * Move the range to `anchorOffset` and `focusOffset`.\n     *\n     * @param {Number} anchorOffset\n     * @param {Number} focusOffset (optional)\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveOffsetsTo',\n    value: function moveOffsetsTo(anchorOffset) {\n      var focusOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : anchorOffset;\n\n      return this.moveAnchorOffsetTo(anchorOffset).moveFocusOffsetTo(focusOffset);\n    }\n\n    /**\n     * Move the focus point to the anchor point.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveToAnchor',\n    value: function moveToAnchor() {\n      return this.moveFocusTo(this.anchorKey, this.anchorOffset);\n    }\n\n    /**\n     * Move the anchor point to the focus point.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveToFocus',\n    value: function moveToFocus() {\n      return this.moveAnchorTo(this.focusKey, this.focusOffset);\n    }\n\n    /**\n     * Move the range's anchor point to the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchorToStartOf',\n    value: function moveAnchorToStartOf(node) {\n      node = getFirst(node);\n      return this.moveAnchorTo(node.key, 0);\n    }\n\n    /**\n     * Move the range's anchor point to the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchorToEndOf',\n    value: function moveAnchorToEndOf(node) {\n      node = getLast(node);\n      return this.moveAnchorTo(node.key, node.text.length);\n    }\n\n    /**\n     * Move the range's focus point to the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocusToStartOf',\n    value: function moveFocusToStartOf(node) {\n      node = getFirst(node);\n      return this.moveFocusTo(node.key, 0);\n    }\n\n    /**\n     * Move the range's focus point to the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocusToEndOf',\n    value: function moveFocusToEndOf(node) {\n      node = getLast(node);\n      return this.moveFocusTo(node.key, node.text.length);\n    }\n\n    /**\n     * Move to the entire range of `start` and `end` nodes.\n     *\n     * @param {Node} start\n     * @param {Node} end (optional)\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveToRangeOf',\n    value: function moveToRangeOf(start) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : start;\n\n      return this.moveAnchorToStartOf(start).moveFocusToEndOf(end);\n    }\n\n    /**\n     * Normalize the range, relative to a `node`, ensuring that the anchor\n     * and focus nodes of the range always refer to leaf text nodes.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'normalize',\n    value: function normalize(node) {\n      var range = this;\n      var anchorKey = range.anchorKey,\n          anchorOffset = range.anchorOffset,\n          focusKey = range.focusKey,\n          focusOffset = range.focusOffset,\n          isBackward = range.isBackward;\n\n      // If the range is unset, make sure it is properly zeroed out.\n\n      if (anchorKey == null || focusKey == null) {\n        return range.merge({\n          anchorKey: null,\n          anchorOffset: 0,\n          focusKey: null,\n          focusOffset: 0,\n          isBackward: false\n        });\n      }\n\n      // Get the anchor and focus nodes.\n      var anchorNode = node.getDescendant(anchorKey);\n      var focusNode = node.getDescendant(focusKey);\n\n      // If the range is malformed, warn and zero it out.\n      if (!anchorNode || !focusNode) {\n        _slateDevLogger2.default.warn('The range was invalid and was reset. The range in question was:', range);\n        var first = node.getFirstText();\n        return range.merge({\n          anchorKey: first ? first.key : null,\n          anchorOffset: 0,\n          focusKey: first ? first.key : null,\n          focusOffset: 0,\n          isBackward: false\n        });\n      }\n\n      // If the anchor node isn't a text node, match it to one.\n      if (anchorNode.kind != 'text') {\n        _slateDevLogger2.default.warn('The range anchor was set to a Node that is not a Text node. This should not happen and can degrade performance. The node in question was:', anchorNode);\n        var anchorText = anchorNode.getTextAtOffset(anchorOffset);\n        var offset = anchorNode.getOffset(anchorText.key);\n        anchorOffset = anchorOffset - offset;\n        anchorNode = anchorText;\n      }\n\n      // If the focus node isn't a text node, match it to one.\n      if (focusNode.kind != 'text') {\n        _slateDevLogger2.default.warn('The range focus was set to a Node that is not a Text node. This should not happen and can degrade performance. The node in question was:', focusNode);\n        var focusText = focusNode.getTextAtOffset(focusOffset);\n        var _offset = focusNode.getOffset(focusText.key);\n        focusOffset = focusOffset - _offset;\n        focusNode = focusText;\n      }\n\n      // If `isBackward` is not set, derive it.\n      if (isBackward == null) {\n        if (anchorNode.key === focusNode.key) {\n          isBackward = anchorOffset > focusOffset;\n        } else {\n          isBackward = !node.areDescendantsSorted(anchorNode.key, focusNode.key);\n        }\n      }\n\n      // Merge in any updated properties.\n      return range.merge({\n        anchorKey: anchorNode.key,\n        anchorOffset: anchorOffset,\n        focusKey: focusNode.key,\n        focusOffset: focusOffset,\n        isBackward: isBackward\n      });\n    }\n\n    /**\n     * Return a JSON representation of the range.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        anchorKey: this.anchorKey,\n        anchorOffset: this.anchorOffset,\n        focusKey: this.focusKey,\n        focusOffset: this.focusOffset,\n        isBackward: this.isBackward,\n        isFocused: this.isFocused,\n        marks: this.marks == null ? null : this.marks.toArray().map(function (m) {\n          return m.toJSON();\n        })\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'range';\n    }\n\n    /**\n     * Check whether the range is blurred.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isBlurred',\n    get: function get() {\n      return !this.isFocused;\n    }\n\n    /**\n     * Check whether the range is collapsed.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isCollapsed',\n    get: function get() {\n      return this.anchorKey == this.focusKey && this.anchorOffset == this.focusOffset;\n    }\n\n    /**\n     * Check whether the range is expanded.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isExpanded',\n    get: function get() {\n      return !this.isCollapsed;\n    }\n\n    /**\n     * Check whether the range is forward.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isForward',\n    get: function get() {\n      return this.isBackward == null ? null : !this.isBackward;\n    }\n\n    /**\n     * Check whether the range's keys are set.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isSet',\n    get: function get() {\n      return this.anchorKey != null && this.focusKey != null;\n    }\n\n    /**\n     * Check whether the range's keys are not set.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isUnset',\n    get: function get() {\n      return !this.isSet;\n    }\n\n    /**\n     * Get the start key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'startKey',\n    get: function get() {\n      return this.isBackward ? this.focusKey : this.anchorKey;\n    }\n\n    /**\n     * Get the start offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'startOffset',\n    get: function get() {\n      return this.isBackward ? this.focusOffset : this.anchorOffset;\n    }\n\n    /**\n     * Get the end key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'endKey',\n    get: function get() {\n      return this.isBackward ? this.anchorKey : this.focusKey;\n    }\n\n    /**\n     * Get the end offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'endOffset',\n    get: function get() {\n      return this.isBackward ? this.anchorOffset : this.focusOffset;\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Range` with `attrs`.\n     *\n     * @param {Object|Range} attrs\n     * @return {Range}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Range.isRange(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Range.fromJSON(attrs);\n      }\n\n      throw new Error('`Range.create` only accepts objects or ranges, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Ranges` from `elements`.\n     *\n     * @param {Array<Range|Object>|List<Range|Object>} elements\n     * @return {List<Range>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Range.create));\n        return list;\n      }\n\n      throw new Error('`Range.createList` only accepts arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a dictionary of settable range properties from `attrs`.\n     *\n     * @param {Object|String|Range} attrs\n     * @return {Object}\n     */\n\n  }, {\n    key: 'createProperties',\n    value: function createProperties() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Range.isRange(attrs)) {\n        return {\n          anchorKey: attrs.anchorKey,\n          anchorOffset: attrs.anchorOffset,\n          focusKey: attrs.focusKey,\n          focusOffset: attrs.focusOffset,\n          isBackward: attrs.isBackward,\n          isFocused: attrs.isFocused,\n          marks: attrs.marks\n        };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        var props = {};\n        if ('anchorKey' in attrs) props.anchorKey = attrs.anchorKey;\n        if ('anchorOffset' in attrs) props.anchorOffset = attrs.anchorOffset;\n        if ('anchorPath' in attrs) props.anchorPath = attrs.anchorPath;\n        if ('focusKey' in attrs) props.focusKey = attrs.focusKey;\n        if ('focusOffset' in attrs) props.focusOffset = attrs.focusOffset;\n        if ('focusPath' in attrs) props.focusPath = attrs.focusPath;\n        if ('isBackward' in attrs) props.isBackward = attrs.isBackward;\n        if ('isFocused' in attrs) props.isFocused = attrs.isFocused;\n        if ('marks' in attrs) props.marks = attrs.marks == null ? null : _mark2.default.createSet(attrs.marks);\n        return props;\n      }\n\n      throw new Error('`Range.createProperties` only accepts objects or ranges, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Range` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Range}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var _object$anchorKey = object.anchorKey,\n          anchorKey = _object$anchorKey === undefined ? null : _object$anchorKey,\n          _object$anchorOffset = object.anchorOffset,\n          anchorOffset = _object$anchorOffset === undefined ? 0 : _object$anchorOffset,\n          _object$focusKey = object.focusKey,\n          focusKey = _object$focusKey === undefined ? null : _object$focusKey,\n          _object$focusOffset = object.focusOffset,\n          focusOffset = _object$focusOffset === undefined ? 0 : _object$focusOffset,\n          _object$isBackward = object.isBackward,\n          isBackward = _object$isBackward === undefined ? null : _object$isBackward,\n          _object$isFocused = object.isFocused,\n          isFocused = _object$isFocused === undefined ? false : _object$isFocused,\n          _object$marks = object.marks,\n          marks = _object$marks === undefined ? null : _object$marks;\n\n\n      var range = new Range({\n        anchorKey: anchorKey,\n        anchorOffset: anchorOffset,\n        focusKey: focusKey,\n        focusOffset: focusOffset,\n        isBackward: isBackward,\n        isFocused: isFocused,\n        marks: marks == null ? null : new _immutable.Set(marks.map(_mark2.default.fromJSON))\n      });\n\n      return range;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isRange',\n\n\n    /**\n     * Check if an `obj` is a `Range`.\n     *\n     * @param {Any} obj\n     * @return {Boolean}\n     */\n\n    value: function isRange(obj) {\n      return !!(obj && obj[_modelTypes2.default.RANGE]);\n    }\n  }]);\n\n  return Range;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nRange.fromJS = Range.fromJSON;\nRange.prototype[_modelTypes2.default.RANGE] = true;\n\n/**\n * Mix in some \"move\" convenience methods.\n */\n\nvar MOVE_METHODS = [['move', ''], ['move', 'To'], ['move', 'ToStartOf'], ['move', 'ToEndOf']];\n\nMOVE_METHODS.forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      p = _ref2[0],\n      s = _ref2[1];\n\n  Range.prototype['' + p + s] = function () {\n    var _ref3;\n\n    return (_ref3 = this[p + 'Anchor' + s].apply(this, arguments))[p + 'Focus' + s].apply(_ref3, arguments);\n  };\n});\n\n/**\n * Mix in the \"start\", \"end\" and \"edge\" convenience methods.\n */\n\nvar EDGE_METHODS = [['has', 'AtStartOf', true], ['has', 'AtEndOf', true], ['has', 'Between', true], ['has', 'In', true], ['collapseTo', ''], ['move', ''], ['moveTo', ''], ['move', 'To'], ['move', 'OffsetTo']];\n\nEDGE_METHODS.forEach(function (_ref4) {\n  var _ref5 = _slicedToArray(_ref4, 3),\n      p = _ref5[0],\n      s = _ref5[1],\n      hasEdge = _ref5[2];\n\n  var anchor = p + 'Anchor' + s;\n  var focus = p + 'Focus' + s;\n\n  Range.prototype[p + 'Start' + s] = function () {\n    return this.isBackward ? this[focus].apply(this, arguments) : this[anchor].apply(this, arguments);\n  };\n\n  Range.prototype[p + 'End' + s] = function () {\n    return this.isBackward ? this[anchor].apply(this, arguments) : this[focus].apply(this, arguments);\n  };\n\n  if (hasEdge) {\n    Range.prototype[p + 'Edge' + s] = function () {\n      return this[anchor].apply(this, arguments) || this[focus].apply(this, arguments);\n    };\n  }\n});\n\n/**\n * Mix in some aliases for convenience / parallelism with the browser APIs.\n */\n\nvar ALIAS_METHODS = [['collapseTo', 'moveTo'], ['collapseToAnchor', 'moveToAnchor'], ['collapseToFocus', 'moveToFocus'], ['collapseToStart', 'moveToStart'], ['collapseToEnd', 'moveToEnd'], ['collapseToStartOf', 'moveToStartOf'], ['collapseToEndOf', 'moveToEndOf'], ['extend', 'moveFocus'], ['extendTo', 'moveFocusTo'], ['extendToStartOf', 'moveFocusToStartOf'], ['extendToEndOf', 'moveFocusToEndOf']];\n\nALIAS_METHODS.forEach(function (_ref6) {\n  var _ref7 = _slicedToArray(_ref6, 2),\n      alias = _ref7[0],\n      method = _ref7[1];\n\n  Range.prototype[alias] = function () {\n    return this[method].apply(this, arguments);\n  };\n});\n\n/**\n * Get the first text of a `node`.\n *\n * @param {Node} node\n * @return {Text}\n */\n\nfunction getFirst(node) {\n  return node.kind == 'text' ? node : node.getFirstText();\n}\n\n/**\n * Get the last text of a `node`.\n *\n * @param {Node} node\n * @return {Text}\n */\n\nfunction getLast(node) {\n  return node.kind == 'text' ? node : node.getLastText();\n}\n\n/**\n * Export.\n *\n * @type {Range}\n */\n\nexports.default = Range;\n\n/***/ }),\n/* 295 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Is in development?\n *\n * @type {Boolean}\n */\n\nvar IS_DEV = typeof process !== 'undefined' && Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"\"}) && \"production\" !== 'production';\n\n/**\n * GLOBAL: True if memoization should is enabled. Only effective when `IS_DEV`.\n *\n * @type {Boolean}\n */\n\nvar ENABLED = true;\n\n/**\n * GLOBAL: Changing this cache key will clear all previous cached results.\n * Only effective when `IS_DEV`.\n *\n * @type {Number}\n */\n\nvar CACHE_KEY = 0;\n\n/**\n * The leaf node of a cache tree. Used to support variable argument length. A\n * unique object, so that native Maps will key it by reference.\n *\n * @type {Object}\n */\n\nvar LEAF = {};\n\n/**\n * A value to represent a memoized undefined value. Allows efficient value\n * retrieval using Map.get only.\n *\n * @type {Object}\n */\n\nvar UNDEFINED = {};\n\n/**\n * Default value for unset keys in native Maps\n *\n * @type {Undefined}\n */\n\nvar UNSET = undefined;\n\n/**\n * Memoize all of the `properties` on a `object`.\n *\n * @param {Object} object\n * @param {Array} properties\n * @return {Record}\n */\n\nfunction memoize(object, properties) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$takesArgumen = options.takesArguments,\n      takesArguments = _options$takesArgumen === undefined ? true : _options$takesArgumen;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var property = _step.value;\n\n      var original = object[property];\n\n      if (!original) {\n        throw new Error('Object does not have a property named \"' + property + '\".');\n      }\n\n      object[property] = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (IS_DEV) {\n          // If memoization is disabled, call into the original method.\n          if (!ENABLED) return original.apply(this, args);\n\n          // If the cache key is different, previous caches must be cleared.\n          if (CACHE_KEY !== this.__cache_key) {\n            this.__cache_key = CACHE_KEY;\n            this.__cache = new Map(); // eslint-disable-line no-undef,no-restricted-globals\n          }\n        }\n\n        if (!this.__cache) {\n          this.__cache = new Map(); // eslint-disable-line no-undef,no-restricted-globals\n        }\n\n        var cachedValue = void 0;\n        var keys = void 0;\n\n        if (takesArguments) {\n          keys = [property].concat(args);\n          cachedValue = getIn(this.__cache, keys);\n        } else {\n          cachedValue = this.__cache.get(property);\n        }\n\n        // If we've got a result already, return it.\n        if (cachedValue !== UNSET) {\n          return cachedValue === UNDEFINED ? undefined : cachedValue;\n        }\n\n        // Otherwise calculate what it should be once and cache it.\n        var value = original.apply(this, args);\n        var v = value === undefined ? UNDEFINED : value;\n\n        if (takesArguments) {\n          this.__cache = setIn(this.__cache, keys, v);\n        } else {\n          this.__cache.set(property, v);\n        }\n\n        return value;\n      };\n    };\n\n    for (var _iterator = properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\n/**\n * Get a value at a key path in a tree of Map.\n *\n * If not set, returns UNSET.\n * If the set value is undefined, returns UNDEFINED.\n *\n * @param {Map} map\n * @param {Array} keys\n * @return {Any|UNSET|UNDEFINED}\n */\n\nfunction getIn(map, keys) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = keys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var key = _step2.value;\n\n      map = map.get(key);\n      if (map === UNSET) return UNSET;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return map.get(LEAF);\n}\n\n/**\n * Set a value at a key path in a tree of Map, creating Maps on the go.\n *\n * @param {Map} map\n * @param {Array} keys\n * @param {Any} value\n * @return {Map}\n */\n\nfunction setIn(map, keys, value) {\n  var parent = map;\n  var child = void 0;\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = keys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var key = _step3.value;\n\n      child = parent.get(key);\n\n      // If the path was not created yet...\n      if (child === UNSET) {\n        child = new Map(); // eslint-disable-line no-undef,no-restricted-globals\n        parent.set(key, child);\n      }\n\n      parent = child;\n    }\n\n    // The whole path has been created, so set the value to the bottom most map.\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  child.set(LEAF, value);\n  return map;\n}\n\n/**\n * In DEV mode, clears the previously memoized values, globally.\n *\n * @return {Void}\n */\n\nfunction __clear() {\n  CACHE_KEY++;\n\n  if (CACHE_KEY >= Number.MAX_SAFE_INTEGER) {\n    CACHE_KEY = 0;\n  }\n}\n\n/**\n * In DEV mode, enable or disable the use of memoize values, globally.\n *\n * @param {Boolean} enabled\n * @return {Void}\n */\n\nfunction __enable(enabled) {\n  ENABLED = enabled;\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = memoize;\nexports.__clear = __clear;\nexports.__enable = __enable;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(87)))\n\n/***/ }),\n/* 296 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(410);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"\"}).DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(87)))\n\n/***/ }),\n/* 297 */\n/***/ (function(module, exports) {\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n/***/ }),\n/* 298 */,\n/* 299 */,\n/* 300 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Data.\n *\n * This isn't an immutable record, it's just a thin wrapper around `Map` so that\n * we can allow for more convenient creation.\n *\n * @type {Object}\n */\n\nvar Data = function () {\n  function Data() {\n    _classCallCheck(this, Data);\n  }\n\n  _createClass(Data, null, [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Data` with `attrs`.\n     *\n     * @param {Object|Data|Map} attrs\n     * @return {Data} data\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (_immutable.Map.isMap(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Data.fromJSON(attrs);\n      }\n\n      throw new Error('`Data.create` only accepts objects or maps, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Data` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Data}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      return new _immutable.Map(object);\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }]);\n\n  return Data;\n}();\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nData.fromJS = Data.fromJSON;\nexports.default = Data;\n\n/***/ }),\n/* 301 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n/* 302 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(283);\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n/***/ }),\n/* 303 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar listCacheClear = __webpack_require__(431),\n    listCacheDelete = __webpack_require__(432),\n    listCacheGet = __webpack_require__(433),\n    listCacheHas = __webpack_require__(434),\n    listCacheSet = __webpack_require__(435);\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n\n/***/ }),\n/* 304 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eq = __webpack_require__(297);\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n/***/ }),\n/* 305 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isKeyable = __webpack_require__(437);\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n\n\n/***/ }),\n/* 306 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isSymbol = __webpack_require__(326);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n\n\n/***/ }),\n/* 307 */\n/***/ (function(module, exports) {\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n\n/***/ }),\n/* 308 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsArguments = __webpack_require__(447),\n    isObjectLike = __webpack_require__(273);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n\n\n/***/ }),\n/* 309 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _operationAttributes = __webpack_require__(455);\n\nvar _operationAttributes2 = _interopRequireDefault(_operationAttributes);\n\nvar _mark = __webpack_require__(275);\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _node = __webpack_require__(282);\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _range = __webpack_require__(294);\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _value = __webpack_require__(334);\n\nvar _value2 = _interopRequireDefault(_value);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  length: undefined,\n  mark: undefined,\n  marks: undefined,\n  newPath: undefined,\n  node: undefined,\n  offset: undefined,\n  path: undefined,\n  position: undefined,\n  properties: undefined,\n  selection: undefined,\n  target: undefined,\n  text: undefined,\n  type: undefined,\n  value: undefined\n};\n\n/**\n * Operation.\n *\n * @type {Operation}\n */\n\nvar Operation = function (_Record) {\n  _inherits(Operation, _Record);\n\n  function Operation() {\n    _classCallCheck(this, Operation);\n\n    return _possibleConstructorReturn(this, (Operation.__proto__ || Object.getPrototypeOf(Operation)).apply(this, arguments));\n  }\n\n  _createClass(Operation, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the operation.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var kind = this.kind,\n          type = this.type;\n\n      var object = { kind: kind, type: type };\n      var ATTRIBUTES = _operationAttributes2.default[type];\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = ATTRIBUTES[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n\n          var value = this[key];\n\n          // Skip keys for objects that should not be serialized, and are only used\n          // for providing the local-only invert behavior for the history stack.\n          if (key == 'document') continue;\n          if (key == 'selection') continue;\n          if (key == 'value') continue;\n          if (key == 'node' && type != 'insert_node') continue;\n\n          if (key == 'mark' || key == 'marks' || key == 'node') {\n            value = value.toJSON();\n          }\n\n          if (key == 'properties' && type == 'set_mark') {\n            var v = {};\n            if ('data' in value) v.data = value.data.toJS();\n            if ('type' in value) v.type = value.type;\n            value = v;\n          }\n\n          if (key == 'properties' && type == 'set_node') {\n            var _v = {};\n            if ('data' in value) _v.data = value.data.toJS();\n            if ('isVoid' in value) _v.isVoid = value.isVoid;\n            if ('type' in value) _v.type = value.type;\n            value = _v;\n          }\n\n          if (key == 'properties' && type == 'set_selection') {\n            var _v2 = {};\n            if ('anchorOffset' in value) _v2.anchorOffset = value.anchorOffset;\n            if ('anchorPath' in value) _v2.anchorPath = value.anchorPath;\n            if ('focusOffset' in value) _v2.focusOffset = value.focusOffset;\n            if ('focusPath' in value) _v2.focusPath = value.focusPath;\n            if ('isBackward' in value) _v2.isBackward = value.isBackward;\n            if ('isFocused' in value) _v2.isFocused = value.isFocused;\n            if ('marks' in value) _v2.marks = value.marks == null ? null : value.marks.toJSON();\n            value = _v2;\n          }\n\n          if (key == 'properties' && type == 'set_value') {\n            var _v3 = {};\n            if ('data' in value) _v3.data = value.data.toJS();\n            if ('decorations' in value) _v3.decorations = value.decorations.toJS();\n            if ('schema' in value) _v3.schema = value.schema.toJS();\n            value = _v3;\n          }\n\n          object[key] = value;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'operation';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Operation` with `attrs`.\n     *\n     * @param {Object|Array|List|String|Operation} attrs\n     * @return {Operation}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Operation.isOperation(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Operation.fromJSON(attrs);\n      }\n\n      throw new Error('`Operation.create` only accepts objects or operations, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Operations` from `elements`.\n     *\n     * @param {Array<Operation|Object>|List<Operation|Object>} elements\n     * @return {List<Operation>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Operation.create));\n        return list;\n      }\n\n      throw new Error('`Operation.createList` only accepts arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a `Operation` from a JSON `object`.\n     *\n     * @param {Object|Operation} object\n     * @return {Operation}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Operation.isOperation(object)) {\n        return object;\n      }\n\n      var type = object.type,\n          value = object.value;\n\n      var ATTRIBUTES = _operationAttributes2.default[type];\n      var attrs = { type: type };\n\n      if (!ATTRIBUTES) {\n        throw new Error('`Operation.fromJSON` was passed an unrecognized operation type: \"' + type + '\"');\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = ATTRIBUTES[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var key = _step2.value;\n\n          var v = object[key];\n\n          if (v === undefined) {\n            // Skip keys for objects that should not be serialized, and are only used\n            // for providing the local-only invert behavior for the history stack.\n            if (key == 'document') continue;\n            if (key == 'selection') continue;\n            if (key == 'value') continue;\n            if (key == 'node' && type != 'insert_node') continue;\n\n            throw new Error('`Operation.fromJSON` was passed a \"' + type + '\" operation without the required \"' + key + '\" attribute.');\n          }\n\n          if (key == 'mark') {\n            v = _mark2.default.create(v);\n          }\n\n          if (key == 'marks' && v != null) {\n            v = _mark2.default.createSet(v);\n          }\n\n          if (key == 'node') {\n            v = _node2.default.create(v);\n          }\n\n          if (key == 'selection') {\n            v = _range2.default.create(v);\n          }\n\n          if (key == 'value') {\n            v = _value2.default.create(v);\n          }\n\n          if (key == 'properties' && type == 'set_mark') {\n            v = _mark2.default.createProperties(v);\n          }\n\n          if (key == 'properties' && type == 'set_node') {\n            v = _node2.default.createProperties(v);\n          }\n\n          if (key == 'properties' && type == 'set_selection') {\n            var _v4 = v,\n                anchorKey = _v4.anchorKey,\n                focusKey = _v4.focusKey,\n                rest = _objectWithoutProperties(_v4, ['anchorKey', 'focusKey']);\n\n            v = _range2.default.createProperties(rest);\n\n            if (anchorKey !== undefined) {\n              v.anchorPath = anchorKey === null ? null : value.document.getPath(anchorKey);\n            }\n\n            if (focusKey !== undefined) {\n              v.focusPath = focusKey === null ? null : value.document.getPath(focusKey);\n            }\n          }\n\n          if (key == 'properties' && type == 'set_value') {\n            v = _value2.default.createProperties(v);\n          }\n\n          attrs[key] = v;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var node = new Operation(attrs);\n      return node;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isOperation',\n\n\n    /**\n     * Check if `any` is a `Operation`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isOperation(any) {\n      return !!(any && any[_modelTypes2.default.OPERATION]);\n    }\n\n    /**\n     * Check if `any` is a list of operations.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isOperationList',\n    value: function isOperationList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Operation.isOperation(item);\n      });\n    }\n  }]);\n\n  return Operation;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nOperation.fromJS = Operation.fromJSON;\nOperation.prototype[_modelTypes2.default.OPERATION] = true;\n\n/**\n * Export.\n *\n * @type {Operation}\n */\n\nexports.default = Operation;\n\n/***/ }),\n/* 310 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(272),\n    stubFalse = __webpack_require__(475);\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(301)(module)))\n\n/***/ }),\n/* 311 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(328),\n    isLength = __webpack_require__(332);\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n\n/***/ }),\n/* 312 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataView = __webpack_require__(479),\n    Map = __webpack_require__(329),\n    Promise = __webpack_require__(480),\n    Set = __webpack_require__(481),\n    WeakMap = __webpack_require__(482),\n    baseGetTag = __webpack_require__(289),\n    toSource = __webpack_require__(351);\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n/***/ }),\n/* 313 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayLikeKeys = __webpack_require__(364),\n    baseKeysIn = __webpack_require__(491),\n    isArrayLike = __webpack_require__(311);\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n\n\n/***/ }),\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _character = __webpack_require__(324);\n\nvar _character2 = _interopRequireDefault(_character);\n\nvar _mark = __webpack_require__(275);\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _leaf = __webpack_require__(346);\n\nvar _leaf2 = _interopRequireDefault(_leaf);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _generateKey = __webpack_require__(287);\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nvar _memoize = __webpack_require__(295);\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  characters: new _immutable.List(),\n  key: undefined\n};\n\n/**\n * Text.\n *\n * @type {Text}\n */\n\nvar Text = function (_Record) {\n  _inherits(Text, _Record);\n\n  function Text() {\n    _classCallCheck(this, Text);\n\n    return _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));\n  }\n\n  _createClass(Text, [{\n    key: 'addMark',\n\n\n    /**\n     * Add a `mark` at `index` and `length`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @param {Mark} mark\n     * @return {Text}\n     */\n\n    value: function addMark(index, length, mark) {\n      var marks = new _immutable.Set([mark]);\n      return this.addMarks(index, length, marks);\n    }\n\n    /**\n     * Add a `set` of marks at `index` and `length`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @param {Set<Mark>} set\n     * @return {Text}\n     */\n\n  }, {\n    key: 'addMarks',\n    value: function addMarks(index, length, set) {\n      var characters = this.characters.map(function (char, i) {\n        if (i < index) return char;\n        if (i >= index + length) return char;\n        var _char = char,\n            marks = _char.marks;\n\n        marks = marks.union(set);\n        char = char.set('marks', marks);\n        return char;\n      });\n\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Derive a set of decorated characters with `decorations`.\n     *\n     * @param {List<Decoration>} decorations\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'getDecoratedCharacters',\n    value: function getDecoratedCharacters(decorations) {\n      var node = this;\n      var _node = node,\n          key = _node.key,\n          characters = _node.characters;\n\n      // PERF: Exit early if there are no characters to be decorated.\n\n      if (characters.size == 0) return characters;\n\n      decorations.forEach(function (range) {\n        var startKey = range.startKey,\n            endKey = range.endKey,\n            startOffset = range.startOffset,\n            endOffset = range.endOffset,\n            marks = range.marks;\n\n        var hasStart = startKey == key;\n        var hasEnd = endKey == key;\n        var index = hasStart ? startOffset : 0;\n        var length = hasEnd ? endOffset - index : characters.size;\n        node = node.addMarks(index, length, marks);\n      });\n\n      return node.characters;\n    }\n\n    /**\n     * Get the decorations for the node from a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getDecorations',\n    value: function getDecorations(schema) {\n      return schema.__getDecorations(this);\n    }\n\n    /**\n     * Derive the leaves for a list of `characters`.\n     *\n     * @param {Array|Void} decorations (optional)\n     * @return {List<Leaf>}\n     */\n\n  }, {\n    key: 'getLeaves',\n    value: function getLeaves() {\n      var decorations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var characters = this.getDecoratedCharacters(decorations);\n      var leaves = [];\n\n      // PERF: cache previous values for faster lookup.\n      var prevChar = void 0;\n      var prevLeaf = void 0;\n\n      // If there are no characters, return one empty range.\n      if (characters.size == 0) {\n        leaves.push({});\n      }\n\n      // Otherwise, loop the characters and build the leaves...\n      else {\n          characters.forEach(function (char, i) {\n            var marks = char.marks,\n                text = char.text;\n\n            // The first one can always just be created.\n\n            if (i == 0) {\n              prevChar = char;\n              prevLeaf = { text: text, marks: marks };\n              leaves.push(prevLeaf);\n              return;\n            }\n\n            // Otherwise, compare the current and previous marks.\n            var prevMarks = prevChar.marks;\n            var isSame = (0, _immutable.is)(marks, prevMarks);\n\n            // If the marks are the same, add the text to the previous range.\n            if (isSame) {\n              prevChar = char;\n              prevLeaf.text += text;\n              return;\n            }\n\n            // Otherwise, create a new range.\n            prevChar = char;\n            prevLeaf = { text: text, marks: marks };\n            leaves.push(prevLeaf);\n          }, []);\n        }\n\n      // PERF: convert the leaves to immutable objects after iterating.\n      leaves = new _immutable.List(leaves.map(function (object) {\n        return new _leaf2.default(object);\n      }));\n\n      // Return the leaves.\n      return leaves;\n    }\n\n    /**\n     * Get all of the marks on the text.\n     *\n     * @return {OrderedSet<Mark>}\n     */\n\n  }, {\n    key: 'getMarks',\n    value: function getMarks() {\n      var array = this.getMarksAsArray();\n      return new _immutable.OrderedSet(array);\n    }\n\n    /**\n     * Get all of the marks on the text as an array\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getMarksAsArray',\n    value: function getMarksAsArray() {\n      return this.characters.reduce(function (array, char) {\n        return array.concat(char.marks.toArray());\n      }, []);\n    }\n\n    /**\n     * Get the marks on the text at `index`.\n     *\n     * @param {Number} index\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getMarksAtIndex',\n    value: function getMarksAtIndex(index) {\n      if (index == 0) return _mark2.default.createSet();\n      var characters = this.characters;\n\n      var char = characters.get(index - 1);\n      if (!char) return _mark2.default.createSet();\n      return char.marks;\n    }\n\n    /**\n     * Get a node by `key`, to parallel other nodes.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNode',\n    value: function getNode(key) {\n      return this.key == key ? this : null;\n    }\n\n    /**\n     * Check if the node has a node by `key`, to parallel other nodes.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasNode',\n    value: function hasNode(key) {\n      return !!this.getNode(key);\n    }\n\n    /**\n     * Insert `text` at `index`.\n     *\n     * @param {Numbder} index\n     * @param {String} text\n     * @param {String} marks (optional)\n     * @return {Text}\n     */\n\n  }, {\n    key: 'insertText',\n    value: function insertText(index, text, marks) {\n      var characters = this.characters;\n\n      var chars = _character2.default.createList(text.split('').map(function (char) {\n        return { text: char, marks: marks };\n      }));\n\n      characters = characters.slice(0, index).concat(chars).concat(characters.slice(index));\n\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Regenerate the node's key.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'regenerateKey',\n    value: function regenerateKey() {\n      var key = (0, _generateKey2.default)();\n      return this.set('key', key);\n    }\n\n    /**\n     * Remove a `mark` at `index` and `length`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @param {Mark} mark\n     * @return {Text}\n     */\n\n  }, {\n    key: 'removeMark',\n    value: function removeMark(index, length, mark) {\n      var characters = this.characters.map(function (char, i) {\n        if (i < index) return char;\n        if (i >= index + length) return char;\n        var _char2 = char,\n            marks = _char2.marks;\n\n        marks = marks.remove(mark);\n        char = char.set('marks', marks);\n        return char;\n      });\n\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Remove text from the text node at `index` for `length`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @return {Text}\n     */\n\n  }, {\n    key: 'removeText',\n    value: function removeText(index, length) {\n      var characters = this.characters;\n\n      var start = index;\n      var end = index + length;\n      characters = characters.filterNot(function (char, i) {\n        return start <= i && i < end;\n      });\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Return a JSON representation of the text.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        leaves: this.getLeaves().toArray().map(function (r) {\n          return r.toJSON();\n        })\n      };\n\n      if (options.preserveKeys) {\n        object.key = this.key;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n\n    /**\n     * Update a `mark` at `index` and `length` with `properties`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @param {Mark} mark\n     * @param {Object} properties\n     * @return {Text}\n     */\n\n  }, {\n    key: 'updateMark',\n    value: function updateMark(index, length, mark, properties) {\n      var newMark = mark.merge(properties);\n\n      var characters = this.characters.map(function (char, i) {\n        if (i < index) return char;\n        if (i >= index + length) return char;\n        var _char3 = char,\n            marks = _char3.marks;\n\n        if (!marks.has(mark)) return char;\n        marks = marks.remove(mark);\n        marks = marks.add(newMark);\n        char = char.set('marks', marks);\n        return char;\n      });\n\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Validate the text node against a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Object|Void}\n     */\n\n  }, {\n    key: 'validate',\n    value: function validate(schema) {\n      return schema.validateNode(this);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'text';\n    }\n\n    /**\n     * Is the node empty?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      return this.text == '';\n    }\n\n    /**\n     * Get the concatenated text of the node.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'text',\n    get: function get() {\n      return this.characters.reduce(function (string, char) {\n        return string + char.text;\n      }, '');\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Text` with `attrs`.\n     *\n     * @param {Object|Array|List|String|Text} attrs\n     * @return {Text}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      if (Text.isText(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { leaves: [{ text: attrs }] };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        if (attrs.text) {\n          var _attrs = attrs,\n              text = _attrs.text,\n              marks = _attrs.marks,\n              key = _attrs.key;\n\n          attrs = { key: key, leaves: [{ text: text, marks: marks }] };\n        }\n\n        return Text.fromJSON(attrs);\n      }\n\n      throw new Error('`Text.create` only accepts objects, arrays, strings or texts, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Texts` from `elements`.\n     *\n     * @param {Array<Text|Object>|List<Text|Object>} elements\n     * @return {List<Text>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Text.create));\n        return list;\n      }\n\n      throw new Error('`Text.createList` only accepts arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a `Text` from a JSON `object`.\n     *\n     * @param {Object|Text} object\n     * @return {Text}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Text.isText(object)) {\n        return object;\n      }\n\n      var _object$leaves = object.leaves,\n          leaves = _object$leaves === undefined ? [] : _object$leaves,\n          _object$key = object.key,\n          key = _object$key === undefined ? (0, _generateKey2.default)() : _object$key;\n\n\n      var characters = leaves.map(_leaf2.default.fromJSON).reduce(function (l, r) {\n        return l.concat(r.getCharacters());\n      }, new _immutable.List());\n\n      var node = new Text({\n        characters: characters,\n        key: key\n      });\n\n      return node;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isText',\n\n\n    /**\n     * Check if `any` is a `Text`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isText(any) {\n      return !!(any && any[_modelTypes2.default.TEXT]);\n    }\n\n    /**\n     * Check if `any` is a list of texts.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isTextList',\n    value: function isTextList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Text.isText(item);\n      });\n    }\n  }]);\n\n  return Text;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nText.fromJS = Text.fromJSON;\nText.prototype[_modelTypes2.default.TEXT] = true;\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Text.prototype, ['getMarks', 'getMarksAsArray'], {\n  takesArguments: false\n});\n\n(0, _memoize2.default)(Text.prototype, ['getDecoratedCharacters', 'getDecorations', 'getLeaves', 'getMarksAtIndex', 'validate'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Text}\n */\n\nexports.default = Text;\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  marks: new _immutable.Set(),\n  text: ''\n};\n\n/**\n * Character.\n *\n * @type {Character}\n */\n\nvar Character = function (_Record) {\n  _inherits(Character, _Record);\n\n  function Character() {\n    _classCallCheck(this, Character);\n\n    return _possibleConstructorReturn(this, (Character.__proto__ || Object.getPrototypeOf(Character)).apply(this, arguments));\n  }\n\n  _createClass(Character, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the character.\n     *\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        text: this.text,\n        marks: this.marks.toArray().map(function (m) {\n          return m.toJSON();\n        })\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'character';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a `Character` with `attrs`.\n     *\n     * @param {Object|String|Character} attrs\n     * @return {Character}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Character.isCharacter(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { text: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Character.fromJSON(attrs);\n      }\n\n      throw new Error('`Character.create` only accepts objects, strings or characters, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Characters` from `elements`.\n     *\n     * @param {String|Array<Object|Character|String>|List<Object|Character|String>} elements\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (typeof elements == 'string') {\n        elements = elements.split('');\n      }\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Character.create));\n        return list;\n      }\n\n      throw new Error('`Block.createList` only accepts strings, arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a `Character` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Character}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var text = object.text,\n          _object$marks = object.marks,\n          marks = _object$marks === undefined ? [] : _object$marks;\n\n\n      if (typeof text != 'string') {\n        throw new Error('`Character.fromJSON` requires a block `text` string.');\n      }\n\n      var character = new Character({\n        text: text,\n        marks: new _immutable.Set(marks)\n      });\n\n      return character;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isCharacter',\n\n\n    /**\n     * Check if `any` is a `Character`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isCharacter(any) {\n      return !!(any && any[_modelTypes2.default.CHARACTER]);\n    }\n\n    /**\n     * Check if `any` is a character list.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isCharacterList',\n    value: function isCharacterList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Character.isCharacter(item);\n      });\n    }\n  }]);\n\n  return Character;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nCharacter.fromJS = Character.fromJSON;\nCharacter.prototype[_modelTypes2.default.CHARACTER] = true;\n\n/**\n * Export.\n *\n * @type {Character}\n */\n\nexports.default = Character;\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar basePick = __webpack_require__(412),\n    flatRest = __webpack_require__(354);\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetTag = __webpack_require__(289),\n    isObjectLike = __webpack_require__(273);\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar mapCacheClear = __webpack_require__(420),\n    mapCacheDelete = __webpack_require__(436),\n    mapCacheGet = __webpack_require__(438),\n    mapCacheHas = __webpack_require__(439),\n    mapCacheSet = __webpack_require__(440);\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetTag = __webpack_require__(289),\n    isObject = __webpack_require__(274);\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(283),\n    root = __webpack_require__(272);\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseAssignValue = __webpack_require__(331),\n    eq = __webpack_require__(297);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar defineProperty = __webpack_require__(353);\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports) {\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports) {\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _data = __webpack_require__(300);\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _document = __webpack_require__(293);\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _history = __webpack_require__(358);\n\nvar _history2 = _interopRequireDefault(_history);\n\nvar _range = __webpack_require__(294);\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _schema = __webpack_require__(366);\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  decorations: null,\n  document: _document2.default.create(),\n  history: _history2.default.create(),\n  schema: _schema2.default.create(),\n  selection: _range2.default.create()\n};\n\n/**\n * Value.\n *\n * @type {Value}\n */\n\nvar Value = function (_Record) {\n  _inherits(Value, _Record);\n\n  function Value() {\n    _classCallCheck(this, Value);\n\n    return _possibleConstructorReturn(this, (Value.__proto__ || Object.getPrototypeOf(Value)).apply(this, arguments));\n  }\n\n  _createClass(Value, [{\n    key: 'change',\n\n\n    /**\n     * Create a new `Change` with the current value as a starting point.\n     *\n     * @param {Object} attrs\n     * @return {Change}\n     */\n\n    value: function change() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var Change = __webpack_require__(497).default;\n      return new Change(_extends({}, attrs, { value: this }));\n    }\n\n    /**\n     * Return a JSON representation of the value.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        document: this.document.toJSON(options)\n      };\n\n      if (options.preserveData) {\n        object.data = this.data.toJSON();\n      }\n\n      if (options.preserveDecorations) {\n        object.decorations = this.decorations ? this.decorations.toArray().map(function (d) {\n          return d.toJSON();\n        }) : null;\n      }\n\n      if (options.preserveHistory) {\n        object.history = this.history.toJSON();\n      }\n\n      if (options.preserveSelection) {\n        object.selection = this.selection.toJSON();\n      }\n\n      if (options.preserveSchema) {\n        object.schema = this.schema.toJSON();\n      }\n\n      if (options.preserveSelection && !options.preserveKeys) {\n        var document = this.document,\n            selection = this.selection;\n\n        object.selection.anchorPath = selection.isSet ? document.getPath(selection.anchorKey) : null;\n        object.selection.focusPath = selection.isSet ? document.getPath(selection.focusKey) : null;\n        delete object.selection.anchorKey;\n        delete object.selection.focusKey;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'value';\n    }\n\n    /**\n     * Are there undoable events?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasUndos',\n    get: function get() {\n      return this.history.undos.size > 0;\n    }\n\n    /**\n     * Are there redoable events?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasRedos',\n    get: function get() {\n      return this.history.redos.size > 0;\n    }\n\n    /**\n     * Is the current selection blurred?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isBlurred',\n    get: function get() {\n      return this.selection.isBlurred;\n    }\n\n    /**\n     * Is the current selection focused?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isFocused',\n    get: function get() {\n      return this.selection.isFocused;\n    }\n\n    /**\n     * Is the current selection collapsed?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isCollapsed',\n    get: function get() {\n      return this.selection.isCollapsed;\n    }\n\n    /**\n     * Is the current selection expanded?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isExpanded',\n    get: function get() {\n      return this.selection.isExpanded;\n    }\n\n    /**\n     * Is the current selection backward?\n     *\n     * @return {Boolean} isBackward\n     */\n\n  }, {\n    key: 'isBackward',\n    get: function get() {\n      return this.selection.isBackward;\n    }\n\n    /**\n     * Is the current selection forward?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isForward',\n    get: function get() {\n      return this.selection.isForward;\n    }\n\n    /**\n     * Get the current start key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'startKey',\n    get: function get() {\n      return this.selection.startKey;\n    }\n\n    /**\n     * Get the current end key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'endKey',\n    get: function get() {\n      return this.selection.endKey;\n    }\n\n    /**\n     * Get the current start offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'startOffset',\n    get: function get() {\n      return this.selection.startOffset;\n    }\n\n    /**\n     * Get the current end offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'endOffset',\n    get: function get() {\n      return this.selection.endOffset;\n    }\n\n    /**\n     * Get the current anchor key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'anchorKey',\n    get: function get() {\n      return this.selection.anchorKey;\n    }\n\n    /**\n     * Get the current focus key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'focusKey',\n    get: function get() {\n      return this.selection.focusKey;\n    }\n\n    /**\n     * Get the current anchor offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'anchorOffset',\n    get: function get() {\n      return this.selection.anchorOffset;\n    }\n\n    /**\n     * Get the current focus offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'focusOffset',\n    get: function get() {\n      return this.selection.focusOffset;\n    }\n\n    /**\n     * Get the current start text node's closest block parent.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'startBlock',\n    get: function get() {\n      return this.startKey && this.document.getClosestBlock(this.startKey);\n    }\n\n    /**\n     * Get the current end text node's closest block parent.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'endBlock',\n    get: function get() {\n      return this.endKey && this.document.getClosestBlock(this.endKey);\n    }\n\n    /**\n     * Get the current anchor text node's closest block parent.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'anchorBlock',\n    get: function get() {\n      return this.anchorKey && this.document.getClosestBlock(this.anchorKey);\n    }\n\n    /**\n     * Get the current focus text node's closest block parent.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'focusBlock',\n    get: function get() {\n      return this.focusKey && this.document.getClosestBlock(this.focusKey);\n    }\n\n    /**\n     * Get the current start text node's closest inline parent.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'startInline',\n    get: function get() {\n      return this.startKey && this.document.getClosestInline(this.startKey);\n    }\n\n    /**\n     * Get the current end text node's closest inline parent.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'endInline',\n    get: function get() {\n      return this.endKey && this.document.getClosestInline(this.endKey);\n    }\n\n    /**\n     * Get the current anchor text node's closest inline parent.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'anchorInline',\n    get: function get() {\n      return this.anchorKey && this.document.getClosestInline(this.anchorKey);\n    }\n\n    /**\n     * Get the current focus text node's closest inline parent.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'focusInline',\n    get: function get() {\n      return this.focusKey && this.document.getClosestInline(this.focusKey);\n    }\n\n    /**\n     * Get the current start text node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'startText',\n    get: function get() {\n      return this.startKey && this.document.getDescendant(this.startKey);\n    }\n\n    /**\n     * Get the current end node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'endText',\n    get: function get() {\n      return this.endKey && this.document.getDescendant(this.endKey);\n    }\n\n    /**\n     * Get the current anchor node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'anchorText',\n    get: function get() {\n      return this.anchorKey && this.document.getDescendant(this.anchorKey);\n    }\n\n    /**\n     * Get the current focus node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'focusText',\n    get: function get() {\n      return this.focusKey && this.document.getDescendant(this.focusKey);\n    }\n\n    /**\n     * Get the next block node.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'nextBlock',\n    get: function get() {\n      return this.endKey && this.document.getNextBlock(this.endKey);\n    }\n\n    /**\n     * Get the previous block node.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'previousBlock',\n    get: function get() {\n      return this.startKey && this.document.getPreviousBlock(this.startKey);\n    }\n\n    /**\n     * Get the next inline node.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'nextInline',\n    get: function get() {\n      return this.endKey && this.document.getNextInline(this.endKey);\n    }\n\n    /**\n     * Get the previous inline node.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'previousInline',\n    get: function get() {\n      return this.startKey && this.document.getPreviousInline(this.startKey);\n    }\n\n    /**\n     * Get the next text node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'nextText',\n    get: function get() {\n      return this.endKey && this.document.getNextText(this.endKey);\n    }\n\n    /**\n     * Get the previous text node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'previousText',\n    get: function get() {\n      return this.startKey && this.document.getPreviousText(this.startKey);\n    }\n\n    /**\n     * Get the characters in the current selection.\n     *\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'characters',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.List() : this.document.getCharactersAtRange(this.selection);\n    }\n\n    /**\n     * Get the marks of the current selection.\n     *\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'marks',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.Set() : this.selection.marks || this.document.getMarksAtRange(this.selection);\n    }\n\n    /**\n     * Get the active marks of the current selection.\n     *\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'activeMarks',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.Set() : this.selection.marks || this.document.getActiveMarksAtRange(this.selection);\n    }\n\n    /**\n     * Get the block nodes in the current selection.\n     *\n     * @return {List<Block>}\n     */\n\n  }, {\n    key: 'blocks',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.List() : this.document.getBlocksAtRange(this.selection);\n    }\n\n    /**\n     * Get the fragment of the current selection.\n     *\n     * @return {Document}\n     */\n\n  }, {\n    key: 'fragment',\n    get: function get() {\n      return this.selection.isUnset ? _document2.default.create() : this.document.getFragmentAtRange(this.selection);\n    }\n\n    /**\n     * Get the inline nodes in the current selection.\n     *\n     * @return {List<Inline>}\n     */\n\n  }, {\n    key: 'inlines',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.List() : this.document.getInlinesAtRange(this.selection);\n    }\n\n    /**\n     * Get the text nodes in the current selection.\n     *\n     * @return {List<Text>}\n     */\n\n  }, {\n    key: 'texts',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.List() : this.document.getTextsAtRange(this.selection);\n    }\n\n    /**\n     * Check whether the selection is empty.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      if (this.isCollapsed) return true;\n      if (this.endOffset != 0 && this.startOffset != 0) return false;\n      return this.fragment.text.length == 0;\n    }\n\n    /**\n     * Check whether the selection is collapsed in a void node.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isInVoid',\n    get: function get() {\n      if (this.isExpanded) return false;\n      return this.document.hasVoidParent(this.startKey);\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Value` with `attrs`.\n     *\n     * @param {Object|Value} attrs\n     * @param {Object} options\n     * @return {Value}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (Value.isValue(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Value.fromJSON(attrs);\n      }\n\n      throw new Error('`Value.create` only accepts objects or values, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a dictionary of settable value properties from `attrs`.\n     *\n     * @param {Object|Value} attrs\n     * @return {Object}\n     */\n\n  }, {\n    key: 'createProperties',\n    value: function createProperties() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Value.isValue(attrs)) {\n        return {\n          data: attrs.data,\n          decorations: attrs.decorations,\n          schema: attrs.schema\n        };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        var props = {};\n        if ('data' in attrs) props.data = _data2.default.create(attrs.data);\n        if ('decorations' in attrs) props.decorations = _range2.default.createList(attrs.decorations);\n        if ('schema' in attrs) props.schema = _schema2.default.create(attrs.schema);\n        return props;\n      }\n\n      throw new Error('`Value.createProperties` only accepts objects or values, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Value` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @param {Object} options\n     *   @property {Boolean} normalize\n     *   @property {Array} plugins\n     * @return {Value}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _object$document = object.document,\n          document = _object$document === undefined ? {} : _object$document,\n          _object$selection = object.selection,\n          selection = _object$selection === undefined ? {} : _object$selection,\n          _object$schema = object.schema,\n          schema = _object$schema === undefined ? {} : _object$schema;\n\n\n      var data = new _immutable.Map();\n\n      document = _document2.default.fromJSON(document);\n      selection = _range2.default.fromJSON(selection);\n      schema = _schema2.default.fromJSON(schema);\n\n      // Allow plugins to set a default value for `data`.\n      if (options.plugins) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = options.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var plugin = _step.value;\n\n            if (plugin.data) data = data.merge(plugin.data);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      // Then merge in the `data` provided.\n      if ('data' in object) {\n        data = data.merge(object.data);\n      }\n\n      if (selection.isUnset) {\n        var text = document.getFirstText();\n        if (text) selection = selection.collapseToStartOf(text);\n      }\n\n      var value = new Value({\n        data: data,\n        document: document,\n        selection: selection,\n        schema: schema\n      });\n\n      if (options.normalize !== false) {\n        value = value.change({ save: false }).normalize().value;\n      }\n\n      return value;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isValue',\n\n\n    /**\n     * Check if a `value` is a `Value`.\n     *\n     * @param {Any} value\n     * @return {Boolean}\n     */\n\n    value: function isValue(value) {\n      return !!(value && value[_modelTypes2.default.VALUE]);\n    }\n  }]);\n\n  return Value;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nValue.fromJS = Value.fromJSON;\nValue.prototype[_modelTypes2.default.VALUE] = true;\n\n/**\n * Export.\n */\n\nexports.default = Value;\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ListCache = __webpack_require__(303),\n    stackClear = __webpack_require__(459),\n    stackDelete = __webpack_require__(460),\n    stackGet = __webpack_require__(461),\n    stackHas = __webpack_require__(462),\n    stackSet = __webpack_require__(463);\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayFilter = __webpack_require__(473),\n    stubArray = __webpack_require__(363);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayLikeKeys = __webpack_require__(364),\n    baseKeys = __webpack_require__(477),\n    isArrayLike = __webpack_require__(311);\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsTypedArray = __webpack_require__(476),\n    baseUnary = __webpack_require__(339),\n    nodeUtil = __webpack_require__(340);\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(350);\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(301)(module)))\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Uint8Array = __webpack_require__(360);\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar overArg = __webpack_require__(365);\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n\n\n/***/ }),\n/* 344 */,\n/* 345 */,\n/* 346 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _character = __webpack_require__(324);\n\nvar _character2 = _interopRequireDefault(_character);\n\nvar _mark = __webpack_require__(275);\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  marks: new _immutable.Set(),\n  text: ''\n};\n\n/**\n * Leaf.\n *\n * @type {Leaf}\n */\n\nvar Leaf = function (_Record) {\n  _inherits(Leaf, _Record);\n\n  function Leaf() {\n    _classCallCheck(this, Leaf);\n\n    return _possibleConstructorReturn(this, (Leaf.__proto__ || Object.getPrototypeOf(Leaf)).apply(this, arguments));\n  }\n\n  _createClass(Leaf, [{\n    key: 'getCharacters',\n\n\n    /**\n     * Return leaf as a list of characters\n     *\n     * @return {List<Character>}\n     */\n\n    value: function getCharacters() {\n      var marks = this.marks;\n\n      var characters = _character2.default.createList(this.text.split('').map(function (char) {\n        return _character2.default.create({\n          text: char,\n          marks: marks\n        });\n      }));\n\n      return characters;\n    }\n\n    /**\n     * Return a JSON representation of the leaf.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        text: this.text,\n        marks: this.marks.toArray().map(function (m) {\n          return m.toJSON();\n        })\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'leaf';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Leaf` with `attrs`.\n     *\n     * @param {Object|Leaf} attrs\n     * @return {Leaf}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Leaf.isLeaf(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { text: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Leaf.fromJSON(attrs);\n      }\n\n      throw new Error('`Leaf.create` only accepts objects, strings or leaves, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Leaf` list from `attrs`.\n     *\n     * @param {Array<Leaf|Object>|List<Leaf|Object>} attrs\n     * @return {List<Leaf>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(attrs) || Array.isArray(attrs)) {\n        var list = new _immutable.List(attrs.map(Leaf.create));\n        return list;\n      }\n\n      throw new Error('`Leaf.createList` only accepts arrays or lists, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Leaf` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Leaf}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var _object$text = object.text,\n          text = _object$text === undefined ? '' : _object$text,\n          _object$marks = object.marks,\n          marks = _object$marks === undefined ? [] : _object$marks;\n\n\n      var leaf = new Leaf({\n        text: text,\n        marks: new _immutable.Set(marks.map(_mark2.default.fromJSON))\n      });\n\n      return leaf;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isLeaf',\n\n\n    /**\n     * Check if `any` is a `Leaf`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isLeaf(any) {\n      return !!(any && any[_modelTypes2.default.LEAF]);\n    }\n\n    /**\n     * Check if `any` is a list of leaves.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isLeafList',\n    value: function isLeafList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Leaf.isLeaf(item);\n      });\n    }\n  }]);\n\n  return Leaf;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nLeaf.fromJS = Leaf.fromJSON;\nLeaf.prototype[_modelTypes2.default.LEAF] = true;\n\n/**\n * Export.\n *\n * @type {Leaf}\n */\n\nexports.default = Leaf;\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _atCurrentRange = __webpack_require__(404);\n\nvar _atCurrentRange2 = _interopRequireDefault(_atCurrentRange);\n\nvar _atRange = __webpack_require__(405);\n\nvar _atRange2 = _interopRequireDefault(_atRange);\n\nvar _byKey = __webpack_require__(408);\n\nvar _byKey2 = _interopRequireDefault(_byKey);\n\nvar _onHistory = __webpack_require__(409);\n\nvar _onHistory2 = _interopRequireDefault(_onHistory);\n\nvar _onSelection = __webpack_require__(519);\n\nvar _onSelection2 = _interopRequireDefault(_onSelection);\n\nvar _onValue = __webpack_require__(521);\n\nvar _onValue2 = _interopRequireDefault(_onValue);\n\nvar _withSchema = __webpack_require__(522);\n\nvar _withSchema2 = _interopRequireDefault(_withSchema);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = _extends({}, _atCurrentRange2.default, _atRange2.default, _byKey2.default, _onHistory2.default, _onSelection2.default, _onValue2.default, _withSchema2.default);\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _debug = __webpack_require__(296);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _pick = __webpack_require__(325);\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _operation = __webpack_require__(309);\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:operation:invert');\n\n/**\n * Invert an `op`.\n *\n * @param {Object} op\n * @return {Object}\n */\n\nfunction invertOperation(op) {\n  op = _operation2.default.create(op);\n  var _op = op,\n      type = _op.type;\n\n  debug(type, op);\n\n  /**\n   * Insert node.\n   */\n\n  if (type == 'insert_node') {\n    var inverse = op.set('type', 'remove_node');\n    return inverse;\n  }\n\n  /**\n   * Remove node.\n   */\n\n  if (type == 'remove_node') {\n    var _inverse = op.set('type', 'insert_node');\n    return _inverse;\n  }\n\n  /**\n   * Move node.\n   */\n\n  if (type == 'move_node') {\n    var _op2 = op,\n        newPath = _op2.newPath,\n        path = _op2.path;\n\n    var inversePath = newPath;\n    var inverseNewPath = path;\n\n    var pathLast = path.length - 1;\n    var newPathLast = newPath.length - 1;\n\n    // If the node's old position was a left sibling of an ancestor of\n    // its new position, we need to adjust part of the path by -1.\n    if (path.length < inversePath.length && path.slice(0, pathLast).every(function (e, i) {\n      return e == inversePath[i];\n    }) && path[pathLast] < inversePath[pathLast]) {\n      inversePath = inversePath.slice(0, pathLast).concat([inversePath[pathLast] - 1]).concat(inversePath.slice(pathLast + 1, inversePath.length));\n    }\n\n    // If the node's new position is an ancestor of the old position,\n    // or a left sibling of an ancestor of its old position, we need\n    // to adjust part of the path by 1.\n    if (newPath.length < inverseNewPath.length && newPath.slice(0, newPathLast).every(function (e, i) {\n      return e == inverseNewPath[i];\n    }) && newPath[newPathLast] <= inverseNewPath[newPathLast]) {\n      inverseNewPath = inverseNewPath.slice(0, newPathLast).concat([inverseNewPath[newPathLast] + 1]).concat(inverseNewPath.slice(newPathLast + 1, inverseNewPath.length));\n    }\n\n    var _inverse2 = op.set('path', inversePath).set('newPath', inverseNewPath);\n    return _inverse2;\n  }\n\n  /**\n   * Merge node.\n   */\n\n  if (type == 'merge_node') {\n    var _op3 = op,\n        _path = _op3.path;\n    var length = _path.length;\n\n    var last = length - 1;\n    var _inversePath = _path.slice(0, last).concat([_path[last] - 1]);\n    var _inverse3 = op.set('type', 'split_node').set('path', _inversePath);\n    return _inverse3;\n  }\n\n  /**\n   * Split node.\n   */\n\n  if (type == 'split_node') {\n    var _op4 = op,\n        _path2 = _op4.path;\n    var _length = _path2.length;\n\n    var _last = _length - 1;\n    var _inversePath2 = _path2.slice(0, _last).concat([_path2[_last] + 1]);\n    var _inverse4 = op.set('type', 'merge_node').set('path', _inversePath2);\n    return _inverse4;\n  }\n\n  /**\n   * Set node.\n   */\n\n  if (type == 'set_node') {\n    var _op5 = op,\n        properties = _op5.properties,\n        node = _op5.node;\n\n    var inverseNode = node.merge(properties);\n    var inverseProperties = (0, _pick2.default)(node, Object.keys(properties));\n    var _inverse5 = op.set('node', inverseNode).set('properties', inverseProperties);\n    return _inverse5;\n  }\n\n  /**\n   * Insert text.\n   */\n\n  if (type == 'insert_text') {\n    var _inverse6 = op.set('type', 'remove_text');\n    return _inverse6;\n  }\n\n  /**\n   * Remove text.\n   */\n\n  if (type == 'remove_text') {\n    var _inverse7 = op.set('type', 'insert_text');\n    return _inverse7;\n  }\n\n  /**\n   * Add mark.\n   */\n\n  if (type == 'add_mark') {\n    var _inverse8 = op.set('type', 'remove_mark');\n    return _inverse8;\n  }\n\n  /**\n   * Remove mark.\n   */\n\n  if (type == 'remove_mark') {\n    var _inverse9 = op.set('type', 'add_mark');\n    return _inverse9;\n  }\n\n  /**\n   * Set mark.\n   */\n\n  if (type == 'set_mark') {\n    var _op6 = op,\n        _properties = _op6.properties,\n        mark = _op6.mark;\n\n    var inverseMark = mark.merge(_properties);\n    var _inverseProperties = (0, _pick2.default)(mark, Object.keys(_properties));\n    var _inverse10 = op.set('mark', inverseMark).set('properties', _inverseProperties);\n    return _inverse10;\n  }\n\n  /**\n   * Set selection.\n   */\n\n  if (type == 'set_selection') {\n    var _op7 = op,\n        _properties2 = _op7.properties,\n        selection = _op7.selection,\n        value = _op7.value;\n\n    var anchorPath = _properties2.anchorPath,\n        focusPath = _properties2.focusPath,\n        props = _objectWithoutProperties(_properties2, ['anchorPath', 'focusPath']);\n\n    var document = value.document;\n\n\n    if (anchorPath !== undefined) {\n      props.anchorKey = anchorPath === null ? null : document.assertPath(anchorPath).key;\n    }\n\n    if (focusPath !== undefined) {\n      props.focusKey = focusPath === null ? null : document.assertPath(focusPath).key;\n    }\n\n    var inverseSelection = selection.merge(props);\n    var inverseProps = (0, _pick2.default)(selection, Object.keys(props));\n\n    if (anchorPath !== undefined) {\n      inverseProps.anchorPath = inverseProps.anchorKey === null ? null : document.getPath(inverseProps.anchorKey);\n      delete inverseProps.anchorKey;\n    }\n\n    if (focusPath !== undefined) {\n      inverseProps.focusPath = inverseProps.focusKey === null ? null : document.getPath(inverseProps.focusKey);\n      delete inverseProps.focusKey;\n    }\n\n    var _inverse11 = op.set('selection', inverseSelection).set('properties', inverseProps);\n    return _inverse11;\n  }\n\n  /**\n   * Set value.\n   */\n\n  if (type == 'set_value') {\n    var _op8 = op,\n        _properties3 = _op8.properties,\n        _value = _op8.value;\n\n    var inverseValue = _value.merge(_properties3);\n    var _inverseProperties2 = (0, _pick2.default)(_value, Object.keys(_properties3));\n    var _inverse12 = op.set('value', inverseValue).set('properties', _inverseProperties2);\n    return _inverse12;\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexports.default = invertOperation;\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar castPath = __webpack_require__(288),\n    toKey = __webpack_require__(306);\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)))\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(283);\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar flatten = __webpack_require__(448),\n    overRest = __webpack_require__(355),\n    setToString = __webpack_require__(356);\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = __webpack_require__(451);\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseSetToString = __webpack_require__(452),\n    shortOut = __webpack_require__(454);\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports) {\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _debug = __webpack_require__(296);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _isEqual = __webpack_require__(456);\n\nvar _isEqual2 = _interopRequireDefault(_isEqual);\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:history');\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  redos: new _immutable.Stack(),\n  undos: new _immutable.Stack()\n};\n\n/**\n * History.\n *\n * @type {History}\n */\n\nvar History = function (_Record) {\n  _inherits(History, _Record);\n\n  function History() {\n    _classCallCheck(this, History);\n\n    return _possibleConstructorReturn(this, (History.__proto__ || Object.getPrototypeOf(History)).apply(this, arguments));\n  }\n\n  _createClass(History, [{\n    key: 'save',\n\n\n    /**\n     * Save an `operation` into the history.\n     *\n     * @param {Object} operation\n     * @param {Object} options\n     * @return {History}\n     */\n\n    value: function save(operation) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var history = this;\n      var _history = history,\n          undos = _history.undos,\n          redos = _history.redos;\n      var merge = options.merge,\n          skip = options.skip;\n\n      var prevBatch = undos.peek();\n      var prevOperation = prevBatch && prevBatch.last();\n\n      if (skip == null) {\n        skip = shouldSkip(operation, prevOperation);\n      }\n\n      if (skip) {\n        return history;\n      }\n\n      if (merge == null) {\n        merge = shouldMerge(operation, prevOperation);\n      }\n\n      debug('save', { operation: operation, merge: merge });\n\n      // If the `merge` flag is true, add the operation to the previous batch.\n      if (merge && prevBatch) {\n        var batch = prevBatch.push(operation);\n        undos = undos.pop();\n        undos = undos.push(batch);\n      }\n\n      // Otherwise, create a new batch with the operation.\n      else {\n          var _batch = new _immutable.List([operation]);\n          undos = undos.push(_batch);\n        }\n\n      // Constrain the history to 100 entries for memory's sake.\n      if (undos.size > 100) {\n        undos = undos.take(100);\n      }\n\n      // Clear the redos and update the history.\n      redos = redos.clear();\n      history = history.set('undos', undos).set('redos', redos);\n      return history;\n    }\n\n    /**\n     * Return a JSON representation of the history.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        redos: this.redos.toJSON(),\n        undos: this.undos.toJSON()\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'history';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `History` with `attrs`.\n     *\n     * @param {Object|History} attrs\n     * @return {History}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (History.isHistory(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return History.fromJSON(attrs);\n      }\n\n      throw new Error('`History.create` only accepts objects or histories, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `History` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {History}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var _object$redos = object.redos,\n          redos = _object$redos === undefined ? [] : _object$redos,\n          _object$undos = object.undos,\n          undos = _object$undos === undefined ? [] : _object$undos;\n\n\n      var history = new History({\n        redos: new _immutable.Stack(redos),\n        undos: new _immutable.Stack(undos)\n      });\n\n      return history;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isHistory',\n\n\n    /**\n     * Check if `any` is a `History`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isHistory(any) {\n      return !!(any && any[_modelTypes2.default.HISTORY]);\n    }\n  }]);\n\n  return History;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nHistory.fromJS = History.fromJSON;\nHistory.prototype[_modelTypes2.default.HISTORY] = true;\n\n/**\n * Check whether to merge a new operation `o` into the previous operation `p`.\n *\n * @param {Object} o\n * @param {Object} p\n * @return {Boolean}\n */\n\nfunction shouldMerge(o, p) {\n  if (!p) return false;\n\n  var merge = o.type == 'set_selection' && p.type == 'set_selection' || o.type == 'insert_text' && p.type == 'insert_text' && o.offset == p.offset + p.text.length && (0, _isEqual2.default)(o.path, p.path) || o.type == 'remove_text' && p.type == 'remove_text' && o.offset + o.text.length == p.offset && (0, _isEqual2.default)(o.path, p.path);\n\n  return merge;\n}\n\n/**\n * Check whether to skip a new operation `o`, given previous operation `p`.\n *\n * @param {Object} o\n * @param {Object} p\n * @return {Boolean}\n */\n\nfunction shouldSkip(o, p) {\n  if (!p) return false;\n\n  var skip = o.type == 'set_selection' && p.type == 'set_selection';\n\n  return skip;\n}\n\n/**\n * Export.\n *\n * @type {History}\n */\n\nexports.default = History;\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SetCache = __webpack_require__(464),\n    arraySome = __webpack_require__(467),\n    cacheHas = __webpack_require__(468);\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(272);\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetAllKeys = __webpack_require__(362),\n    getSymbols = __webpack_require__(336),\n    keys = __webpack_require__(337);\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayPush = __webpack_require__(333),\n    isArray = __webpack_require__(271);\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports) {\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseTimes = __webpack_require__(474),\n    isArguments = __webpack_require__(308),\n    isArray = __webpack_require__(271),\n    isBuffer = __webpack_require__(310),\n    isIndex = __webpack_require__(307),\n    isTypedArray = __webpack_require__(338);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports) {\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _debug = __webpack_require__(296);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mergeWith = __webpack_require__(483);\n\nvar _mergeWith2 = _interopRequireDefault(_mergeWith);\n\nvar _immutable = __webpack_require__(261);\n\nvar _coreSchemaRules = __webpack_require__(496);\n\nvar _coreSchemaRules2 = _interopRequireDefault(_coreSchemaRules);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _stack = __webpack_require__(374);\n\nvar _stack2 = _interopRequireDefault(_stack);\n\nvar _memoize = __webpack_require__(295);\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Validation failure reasons.\n *\n * @type {Object}\n */\n\nvar CHILD_KIND_INVALID = 'child_kind_invalid';\nvar CHILD_REQUIRED = 'child_required';\nvar CHILD_TYPE_INVALID = 'child_type_invalid';\nvar CHILD_UNKNOWN = 'child_unknown';\nvar FIRST_CHILD_KIND_INVALID = 'first_child_kind_invalid';\nvar FIRST_CHILD_TYPE_INVALID = 'first_child_type_invalid';\nvar LAST_CHILD_KIND_INVALID = 'last_child_kind_invalid';\nvar LAST_CHILD_TYPE_INVALID = 'last_child_type_invalid';\nvar NODE_DATA_INVALID = 'node_data_invalid';\nvar NODE_IS_VOID_INVALID = 'node_is_void_invalid';\nvar NODE_MARK_INVALID = 'node_mark_invalid';\nvar NODE_TEXT_INVALID = 'node_text_invalid';\nvar PARENT_KIND_INVALID = 'parent_kind_invalid';\nvar PARENT_TYPE_INVALID = 'parent_type_invalid';\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:schema');\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  stack: _stack2.default.create(),\n  document: {},\n  blocks: {},\n  inlines: {}\n};\n\n/**\n * Schema.\n *\n * @type {Schema}\n */\n\nvar Schema = function (_Record) {\n  _inherits(Schema, _Record);\n\n  function Schema() {\n    _classCallCheck(this, Schema);\n\n    return _possibleConstructorReturn(this, (Schema.__proto__ || Object.getPrototypeOf(Schema)).apply(this, arguments));\n  }\n\n  _createClass(Schema, [{\n    key: 'getRule',\n\n\n    /**\n     * Get the rule for an `object`.\n     *\n     * @param {Mixed} object\n     * @return {Object}\n     */\n\n    value: function getRule(object) {\n      switch (object.kind) {\n        case 'document':\n          return this.document;\n        case 'block':\n          return this.blocks[object.type];\n        case 'inline':\n          return this.inlines[object.type];\n      }\n    }\n\n    /**\n     * Get a dictionary of the parent rule validations by child type.\n     *\n     * @return {Object|Null}\n     */\n\n  }, {\n    key: 'getParentRules',\n    value: function getParentRules() {\n      var blocks = this.blocks,\n          inlines = this.inlines;\n\n      var parents = {};\n\n      for (var key in blocks) {\n        var rule = blocks[key];\n        if (rule.parent == null) continue;\n        parents[key] = rule;\n      }\n\n      for (var _key in inlines) {\n        var _rule = inlines[_key];\n        if (_rule.parent == null) continue;\n        parents[_key] = _rule;\n      }\n\n      return Object.keys(parents).length == 0 ? null : parents;\n    }\n\n    /**\n     * Fail validation by returning a normalizing change function.\n     *\n     * @param {String} reason\n     * @param {Object} context\n     * @return {Function}\n     */\n\n  }, {\n    key: 'fail',\n    value: function fail(reason, context) {\n      var _this2 = this;\n\n      return function (change) {\n        debug('normalizing', { reason: reason, context: context });\n        var rule = context.rule;\n        var size = change.operations.size;\n\n        if (rule.normalize) rule.normalize(change, reason, context);\n        if (change.operations.size > size) return;\n        _this2.normalize(change, reason, context);\n      };\n    }\n\n    /**\n     * Normalize an invalid value with `reason` and `context`.\n     *\n     * @param {Change} change\n     * @param {String} reason\n     * @param {Mixed} context\n     */\n\n  }, {\n    key: 'normalize',\n    value: function normalize(change, reason, context) {\n      switch (reason) {\n        case CHILD_KIND_INVALID:\n        case CHILD_TYPE_INVALID:\n        case CHILD_UNKNOWN:\n        case FIRST_CHILD_KIND_INVALID:\n        case FIRST_CHILD_TYPE_INVALID:\n        case LAST_CHILD_KIND_INVALID:\n        case LAST_CHILD_TYPE_INVALID:\n          {\n            var child = context.child,\n                node = context.node;\n\n            return child.kind == 'text' && node.kind == 'block' && node.nodes.size == 1 ? change.removeNodeByKey(node.key) : change.removeNodeByKey(child.key);\n          }\n\n        case CHILD_REQUIRED:\n        case NODE_TEXT_INVALID:\n        case PARENT_KIND_INVALID:\n        case PARENT_TYPE_INVALID:\n          {\n            var _node = context.node;\n\n            return _node.kind == 'document' ? _node.nodes.forEach(function (child) {\n              return change.removeNodeByKey(child.key);\n            }) : change.removeNodeByKey(_node.key);\n          }\n\n        case NODE_DATA_INVALID:\n          {\n            var _node2 = context.node,\n                key = context.key;\n\n            return _node2.data.get(key) === undefined && _node2.kind != 'document' ? change.removeNodeByKey(_node2.key) : change.setNodeByKey(_node2.key, { data: _node2.data.delete(key) });\n          }\n\n        case NODE_IS_VOID_INVALID:\n          {\n            var _node3 = context.node;\n\n            return change.setNodeByKey(_node3.key, { isVoid: !_node3.isVoid });\n          }\n\n        case NODE_MARK_INVALID:\n          {\n            var _node4 = context.node,\n                mark = context.mark;\n\n            return _node4.getTexts().forEach(function (t) {\n              return change.removeMarkByKey(t.key, 0, t.text.length, mark);\n            });\n          }\n      }\n    }\n\n    /**\n     * Validate a `node` with the schema, returning a function that will fix the\n     * invalid node, or void if the node is valid.\n     *\n     * @param {Node} node\n     * @return {Function|Void}\n     */\n\n  }, {\n    key: 'validateNode',\n    value: function validateNode(node) {\n      var _this3 = this;\n\n      var ret = this.stack.find('validateNode', node);\n      if (ret) return ret;\n\n      if (node.kind == 'text') return;\n\n      var rule = this.getRule(node) || {};\n      var parents = this.getParentRules();\n      var ctx = { node: node, rule: rule };\n\n      if (rule.isVoid != null) {\n        if (node.isVoid != rule.isVoid) {\n          return this.fail(NODE_IS_VOID_INVALID, ctx);\n        }\n      }\n\n      if (rule.data != null) {\n        for (var key in rule.data) {\n          var fn = rule.data[key];\n          var value = node.data.get(key);\n\n          if (!fn(value)) {\n            return this.fail(NODE_DATA_INVALID, _extends({}, ctx, { key: key, value: value }));\n          }\n        }\n      }\n\n      if (rule.marks != null) {\n        var marks = node.getMarks().toArray();\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          var _loop = function _loop() {\n            var mark = _step.value;\n\n            if (!rule.marks.some(function (def) {\n              return def.type === mark.type;\n            })) {\n              return {\n                v: _this3.fail(NODE_MARK_INVALID, _extends({}, ctx, { mark: mark }))\n              };\n            }\n          };\n\n          for (var _iterator = marks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _ret = _loop();\n\n            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      if (rule.text != null) {\n        var text = node.text;\n\n\n        if (!rule.text.test(text)) {\n          return this.fail(NODE_TEXT_INVALID, _extends({}, ctx, { text: text }));\n        }\n      }\n\n      if (rule.first != null) {\n        var _rule$first = rule.first,\n            kinds = _rule$first.kinds,\n            types = _rule$first.types;\n\n        var child = node.nodes.first();\n\n        if (child && kinds && !kinds.includes(child.kind)) {\n          return this.fail(FIRST_CHILD_KIND_INVALID, _extends({}, ctx, { child: child }));\n        }\n\n        if (child && types && !types.includes(child.type)) {\n          return this.fail(FIRST_CHILD_TYPE_INVALID, _extends({}, ctx, { child: child }));\n        }\n      }\n\n      if (rule.last != null) {\n        var _rule$last = rule.last,\n            _kinds = _rule$last.kinds,\n            _types = _rule$last.types;\n\n        var _child = node.nodes.last();\n\n        if (_child && _kinds && !_kinds.includes(_child.kind)) {\n          return this.fail(LAST_CHILD_KIND_INVALID, _extends({}, ctx, { child: _child }));\n        }\n\n        if (_child && _types && !_types.includes(_child.type)) {\n          return this.fail(LAST_CHILD_TYPE_INVALID, _extends({}, ctx, { child: _child }));\n        }\n      }\n\n      if (rule.nodes != null || parents != null) {\n        var nextDef = function nextDef() {\n          offset = offset == null ? null : 0;\n          def = defs.shift();\n          min = def && (def.min == null ? 0 : def.min);\n          max = def && (def.max == null ? Infinity : def.max);\n          return !!def;\n        };\n\n        var nextChild = function nextChild() {\n          index = index == null ? 0 : index + 1;\n          offset = offset == null ? 0 : offset + 1;\n          _child2 = children[index];\n          if (max != null && offset == max) nextDef();\n          return !!_child2;\n        };\n\n        var rewind = function rewind() {\n          offset -= 1;\n          index -= 1;\n        };\n\n        var children = node.nodes.toArray();\n        var defs = rule.nodes != null ? rule.nodes.slice() : [];\n\n        var offset = void 0;\n        var min = void 0;\n        var index = void 0;\n        var def = void 0;\n        var max = void 0;\n        var _child2 = void 0;\n\n        if (rule.nodes != null) {\n          nextDef();\n        }\n\n        while (nextChild()) {\n          if (parents != null && _child2.kind != 'text' && _child2.type in parents) {\n            var r = parents[_child2.type];\n\n            if (r.parent.kinds != null && !r.parent.kinds.includes(node.kind)) {\n              return this.fail(PARENT_KIND_INVALID, { node: _child2, parent: node, rule: r });\n            }\n\n            if (r.parent.types != null && !r.parent.types.includes(node.type)) {\n              return this.fail(PARENT_TYPE_INVALID, { node: _child2, parent: node, rule: r });\n            }\n          }\n\n          if (rule.nodes != null) {\n            if (!def) {\n              return this.fail(CHILD_UNKNOWN, _extends({}, ctx, { child: _child2, index: index }));\n            }\n\n            if (def.kinds != null && !def.kinds.includes(_child2.kind)) {\n              if (offset >= min && nextDef()) {\n                rewind();\n                continue;\n              }\n              return this.fail(CHILD_KIND_INVALID, _extends({}, ctx, { child: _child2, index: index }));\n            }\n\n            if (def.types != null && !def.types.includes(_child2.type)) {\n              if (offset >= min && nextDef()) {\n                rewind();\n                continue;\n              }\n              return this.fail(CHILD_TYPE_INVALID, _extends({}, ctx, { child: _child2, index: index }));\n            }\n          }\n        }\n\n        if (rule.nodes != null) {\n          while (min != null) {\n            if (offset < min) {\n              return this.fail(CHILD_REQUIRED, _extends({}, ctx, { index: index }));\n            }\n\n            nextDef();\n          }\n        }\n      }\n    }\n\n    /**\n     * Return a JSON representation of the schema.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        document: this.document,\n        blocks: this.blocks,\n        inlines: this.inlines\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'schema';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Schema` with `attrs`.\n     *\n     * @param {Object|Schema} attrs\n     * @return {Schema}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Schema.isSchema(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Schema.fromJSON(attrs);\n      }\n\n      throw new Error('`Schema.create` only accepts objects or schemas, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Schema` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Schema}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Schema.isSchema(object)) {\n        return object;\n      }\n\n      var plugins = object.plugins;\n\n\n      if (object.rules) {\n        throw new Error('Schemas in Slate have changed! They are no longer accept a `rules` property.');\n      }\n\n      if (object.nodes) {\n        throw new Error('Schemas in Slate have changed! They are no longer accept a `nodes` property.');\n      }\n\n      if (!plugins) {\n        plugins = [{ schema: object }];\n      }\n\n      var schema = resolveSchema(plugins);\n      var stack = _stack2.default.create({ plugins: [].concat(_toConsumableArray(_coreSchemaRules2.default), _toConsumableArray(plugins)) });\n      var ret = new Schema(_extends({}, schema, { stack: stack }));\n      return ret;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isSchema',\n\n\n    /**\n     * Check if `any` is a `Schema`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isSchema(any) {\n      return !!(any && any[_modelTypes2.default.SCHEMA]);\n    }\n  }]);\n\n  return Schema;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Resolve a set of schema rules from an array of `plugins`.\n *\n * @param {Array} plugins\n * @return {Object}\n */\n\nSchema.fromJS = Schema.fromJSON;\nfunction resolveSchema() {\n  var plugins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var schema = {\n    document: {},\n    blocks: {},\n    inlines: {}\n  };\n\n  plugins.slice().reverse().forEach(function (plugin) {\n    if (!plugin.schema) return;\n\n    if (plugin.schema.rules) {\n      throw new Error('Schemas in Slate have changed! They are no longer accept a `rules` property.');\n    }\n\n    if (plugin.schema.nodes) {\n      throw new Error('Schemas in Slate have changed! They are no longer accept a `nodes` property.');\n    }\n\n    var _plugin$schema = plugin.schema,\n        _plugin$schema$docume = _plugin$schema.document,\n        document = _plugin$schema$docume === undefined ? {} : _plugin$schema$docume,\n        _plugin$schema$blocks = _plugin$schema.blocks,\n        blocks = _plugin$schema$blocks === undefined ? {} : _plugin$schema$blocks,\n        _plugin$schema$inline = _plugin$schema.inlines,\n        inlines = _plugin$schema$inline === undefined ? {} : _plugin$schema$inline;\n\n    var d = resolveDocumentRule(document);\n    var bs = {};\n    var is = {};\n\n    for (var key in blocks) {\n      bs[key] = resolveNodeRule('block', key, blocks[key]);\n    }\n\n    for (var _key2 in inlines) {\n      is[_key2] = resolveNodeRule('inline', _key2, inlines[_key2]);\n    }\n\n    (0, _mergeWith2.default)(schema.document, d, customizer);\n    (0, _mergeWith2.default)(schema.blocks, bs, customizer);\n    (0, _mergeWith2.default)(schema.inlines, is, customizer);\n  });\n\n  return schema;\n}\n\n/**\n * Resolve a document rule `obj`.\n *\n * @param {Object} obj\n * @return {Object}\n */\n\nfunction resolveDocumentRule(obj) {\n  return _extends({\n    data: {},\n    nodes: null\n  }, obj);\n}\n\n/**\n * Resolve a node rule with `type` from `obj`.\n *\n * @param {String} kind\n * @param {String} type\n * @param {Object} obj\n * @return {Object}\n */\n\nfunction resolveNodeRule(kind, type, obj) {\n  return _extends({\n    data: {},\n    isVoid: null,\n    nodes: null,\n    first: null,\n    last: null,\n    parent: null,\n    text: null\n  }, obj);\n}\n\n/**\n * A Lodash customizer for merging schema definitions. Special cases `kinds`\n * and `types` arrays to be unioned, and ignores new `null` values.\n *\n * @param {Mixed} target\n * @param {Mixed} source\n * @return {Array|Void}\n */\n\nfunction customizer(target, source, key) {\n  if (key == 'kinds' || key == 'types') {\n    return target == null ? source : target.concat(source);\n  } else {\n    return source == null ? target : source;\n  }\n}\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nSchema.prototype[_modelTypes2.default.SCHEMA] = true;\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Schema.prototype, ['getParentRules'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Schema}\n */\n\nexports.default = Schema;\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseAssignValue = __webpack_require__(331),\n    eq = __webpack_require__(297);\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(272);\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(301)(module)))\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar cloneArrayBuffer = __webpack_require__(342);\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports) {\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseCreate = __webpack_require__(488),\n    getPrototype = __webpack_require__(343),\n    isPrototype = __webpack_require__(341);\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetTag = __webpack_require__(289),\n    getPrototype = __webpack_require__(343),\n    isObjectLike = __webpack_require__(273);\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n\n\n/***/ }),\n/* 373 */\n/***/ (function(module, exports) {\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  return key == '__proto__'\n    ? undefined\n    : object[key];\n}\n\nmodule.exports = safeGet;\n\n\n/***/ }),\n/* 374 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _memoize = __webpack_require__(295);\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  plugins: []\n};\n\n/**\n * Stack.\n *\n * @type {Stack}\n */\n\nvar Stack = function (_Record) {\n  _inherits(Stack, _Record);\n\n  function Stack() {\n    _classCallCheck(this, Stack);\n\n    return _possibleConstructorReturn(this, (Stack.__proto__ || Object.getPrototypeOf(Stack)).apply(this, arguments));\n  }\n\n  _createClass(Stack, [{\n    key: 'getPluginsWith',\n\n\n    /**\n     * Get all plugins with `property`.\n     *\n     * @param {String} property\n     * @return {Array}\n     */\n\n    value: function getPluginsWith(property) {\n      return this.plugins.filter(function (plugin) {\n        return plugin[property] != null;\n      });\n    }\n\n    /**\n     * Iterate the plugins with `property`, returning the first non-null value.\n     *\n     * @param {String} property\n     * @param {Any} ...args\n     */\n\n  }, {\n    key: 'find',\n    value: function find(property) {\n      var plugins = this.getPluginsWith(property);\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var plugin = _step.value;\n\n          var ret = plugin[property].apply(plugin, args);\n          if (ret != null) return ret;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    /**\n     * Iterate the plugins with `property`, returning all the non-null values.\n     *\n     * @param {String} property\n     * @param {Any} ...args\n     * @return {Array}\n     */\n\n  }, {\n    key: 'map',\n    value: function map(property) {\n      var plugins = this.getPluginsWith(property);\n      var array = [];\n\n      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = plugins[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var plugin = _step2.value;\n\n          var ret = plugin[property].apply(plugin, args);\n          if (ret != null) array.push(ret);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return array;\n    }\n\n    /**\n     * Iterate the plugins with `property`, breaking on any a non-null values.\n     *\n     * @param {String} property\n     * @param {Any} ...args\n     */\n\n  }, {\n    key: 'run',\n    value: function run(property) {\n      var plugins = this.getPluginsWith(property);\n\n      for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        args[_key3 - 1] = arguments[_key3];\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var plugin = _step3.value;\n\n          var ret = plugin[property].apply(plugin, args);\n          if (ret != null) return;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n\n    /**\n     * Iterate the plugins with `property`, reducing to a set of React children.\n     *\n     * @param {String} property\n     * @param {Object} props\n     * @param {Any} ...args\n     */\n\n  }, {\n    key: 'render',\n    value: function render(property, props) {\n      var plugins = this.getPluginsWith(property).slice().reverse();\n      var _props$children = props.children,\n          children = _props$children === undefined ? null : _props$children;\n\n      for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n        args[_key4 - 2] = arguments[_key4];\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n\n        for (var _iterator4 = plugins[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var plugin = _step4.value;\n\n          var ret = plugin[property].apply(plugin, [props].concat(args));\n          if (ret == null) continue;\n          props.children = children = ret;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return children;\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'stack';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Constructor.\n     *\n     * @param {Object} attrs\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _attrs$plugins = attrs.plugins,\n          plugins = _attrs$plugins === undefined ? [] : _attrs$plugins;\n\n      var stack = new Stack({ plugins: plugins });\n      return stack;\n    }\n\n    /**\n     * Check if `any` is a `Stack`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isStack',\n    value: function isStack(any) {\n      return !!(any && any[_modelTypes2.default.STACK]);\n    }\n  }]);\n\n  return Stack;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nStack.prototype[_modelTypes2.default.STACK] = true;\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Stack.prototype, ['getPluginsWith'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Stack}\n */\n\nexports.default = Stack;\n\n/***/ }),\n/* 375 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _debug = __webpack_require__(296);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _operation2 = __webpack_require__(309);\n\nvar _operation3 = _interopRequireDefault(_operation2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:operation:apply');\n\n/**\n * Applying functions.\n *\n * @type {Object}\n */\n\nvar APPLIERS = {\n\n  /**\n   * Add mark to text at `offset` and `length` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  add_mark: function add_mark(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        length = operation.length,\n        mark = operation.mark;\n    var _value = value,\n        document = _value.document;\n\n    var node = document.assertPath(path);\n    node = node.addMark(offset, length, mark);\n    document = document.updateNode(node);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Insert a `node` at `index` in a node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  insert_node: function insert_node(value, operation) {\n    var path = operation.path,\n        node = operation.node;\n\n    var index = path[path.length - 1];\n    var rest = path.slice(0, -1);\n    var _value2 = value,\n        document = _value2.document;\n\n    var parent = document.assertPath(rest);\n    parent = parent.insertNode(index, node);\n    document = document.updateNode(parent);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Insert `text` at `offset` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  insert_text: function insert_text(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        text = operation.text,\n        marks = operation.marks;\n    var _value3 = value,\n        document = _value3.document,\n        selection = _value3.selection;\n    var _selection = selection,\n        anchorKey = _selection.anchorKey,\n        focusKey = _selection.focusKey,\n        anchorOffset = _selection.anchorOffset,\n        focusOffset = _selection.focusOffset;\n\n    var node = document.assertPath(path);\n\n    // Update the document\n    node = node.insertText(offset, text, marks);\n    document = document.updateNode(node);\n\n    // Update the selection\n    if (anchorKey == node.key && anchorOffset >= offset) {\n      selection = selection.moveAnchor(text.length);\n    }\n    if (focusKey == node.key && focusOffset >= offset) {\n      selection = selection.moveFocus(text.length);\n    }\n\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Merge a node at `path` with the previous node.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  merge_node: function merge_node(value, operation) {\n    var path = operation.path;\n\n    var withPath = path.slice(0, path.length - 1).concat([path[path.length - 1] - 1]);\n    var _value4 = value,\n        document = _value4.document,\n        selection = _value4.selection;\n\n    var one = document.assertPath(withPath);\n    var two = document.assertPath(path);\n    var parent = document.getParent(one.key);\n    var oneIndex = parent.nodes.indexOf(one);\n    var twoIndex = parent.nodes.indexOf(two);\n\n    // Perform the merge in the document.\n    parent = parent.mergeNode(oneIndex, twoIndex);\n    document = document.updateNode(parent);\n\n    // If the nodes are text nodes and the selection is inside the second node\n    // update it to refer to the first node instead.\n    if (one.kind == 'text') {\n      var _selection2 = selection,\n          anchorKey = _selection2.anchorKey,\n          anchorOffset = _selection2.anchorOffset,\n          focusKey = _selection2.focusKey,\n          focusOffset = _selection2.focusOffset;\n\n      var normalize = false;\n\n      if (anchorKey == two.key) {\n        selection = selection.moveAnchorTo(one.key, one.text.length + anchorOffset);\n        normalize = true;\n      }\n\n      if (focusKey == two.key) {\n        selection = selection.moveFocusTo(one.key, one.text.length + focusOffset);\n        normalize = true;\n      }\n\n      if (normalize) {\n        selection = selection.normalize(document);\n      }\n    }\n\n    // Update the document and selection.\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Move a node by `path` to `newPath`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  move_node: function move_node(value, operation) {\n    var path = operation.path,\n        newPath = operation.newPath;\n\n    var newIndex = newPath[newPath.length - 1];\n    var newParentPath = newPath.slice(0, -1);\n    var oldParentPath = path.slice(0, -1);\n    var oldIndex = path[path.length - 1];\n    var _value5 = value,\n        document = _value5.document;\n\n    var node = document.assertPath(path);\n\n    // Remove the node from its current parent.\n    var parent = document.getParent(node.key);\n    parent = parent.removeNode(oldIndex);\n    document = document.updateNode(parent);\n\n    // Find the new target...\n    var target = void 0;\n\n    // If the old path and the rest of the new path are the same, then the new\n    // target is the old parent.\n    if (oldParentPath.every(function (x, i) {\n      return x === newParentPath[i];\n    }) && oldParentPath.length === newParentPath.length) {\n      target = parent;\n    }\n\n    // Otherwise, if the old path removal resulted in the new path being no longer\n    // correct, we need to decrement the new path at the old path's last index.\n    else if (oldParentPath.every(function (x, i) {\n        return x === newParentPath[i];\n      }) && oldIndex < newParentPath[oldParentPath.length]) {\n        newParentPath[oldParentPath.length]--;\n        target = document.assertPath(newParentPath);\n      }\n\n      // Otherwise, we can just grab the target normally...\n      else {\n          target = document.assertPath(newParentPath);\n        }\n\n    // Insert the new node to its new parent.\n    target = target.insertNode(newIndex, node);\n    document = document.updateNode(target);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Remove mark from text at `offset` and `length` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  remove_mark: function remove_mark(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        length = operation.length,\n        mark = operation.mark;\n    var _value6 = value,\n        document = _value6.document;\n\n    var node = document.assertPath(path);\n    node = node.removeMark(offset, length, mark);\n    document = document.updateNode(node);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Remove a node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  remove_node: function remove_node(value, operation) {\n    var path = operation.path;\n    var _value7 = value,\n        document = _value7.document,\n        selection = _value7.selection;\n    var _selection3 = selection,\n        startKey = _selection3.startKey,\n        endKey = _selection3.endKey;\n\n    var node = document.assertPath(path);\n\n    // If the selection is set, check to see if it needs to be updated.\n    if (selection.isSet) {\n      var hasStartNode = node.hasNode(startKey);\n      var hasEndNode = node.hasNode(endKey);\n      var first = node.kind == 'text' ? node : node.getFirstText() || node;\n      var last = node.kind == 'text' ? node : node.getLastText() || node;\n      var prev = document.getPreviousText(first.key);\n      var next = document.getNextText(last.key);\n\n      // If the start point was in this node, update it to be just before/after.\n      if (hasStartNode) {\n        if (prev) {\n          selection = selection.moveStartTo(prev.key, prev.text.length);\n        } else if (next) {\n          selection = selection.moveStartTo(next.key, 0);\n        } else {\n          selection = selection.deselect();\n        }\n      }\n\n      // If the end point was in this node, update it to be just before/after.\n      if (selection.isSet && hasEndNode) {\n        if (prev) {\n          selection = selection.moveEndTo(prev.key, prev.text.length);\n        } else if (next) {\n          selection = selection.moveEndTo(next.key, 0);\n        } else {\n          selection = selection.deselect();\n        }\n      }\n\n      // If the selection wasn't deselected, normalize it.\n      if (selection.isSet) {\n        selection = selection.normalize(document);\n      }\n    }\n\n    // Remove the node from the document.\n    var parent = document.getParent(node.key);\n    var index = parent.nodes.indexOf(node);\n    parent = parent.removeNode(index);\n    document = document.updateNode(parent);\n\n    // Update the document and selection.\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Remove `text` at `offset` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  remove_text: function remove_text(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        text = operation.text;\n    var length = text.length;\n\n    var rangeOffset = offset + length;\n    var _value8 = value,\n        document = _value8.document,\n        selection = _value8.selection;\n    var _selection4 = selection,\n        anchorKey = _selection4.anchorKey,\n        focusKey = _selection4.focusKey,\n        anchorOffset = _selection4.anchorOffset,\n        focusOffset = _selection4.focusOffset;\n\n    var node = document.assertPath(path);\n\n    if (anchorKey == node.key && anchorOffset >= rangeOffset) {\n      selection = selection.moveAnchor(-length);\n    }\n\n    if (focusKey == node.key && focusOffset >= rangeOffset) {\n      selection = selection.moveFocus(-length);\n    }\n\n    node = node.removeText(offset, length);\n    document = document.updateNode(node);\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Set `properties` on mark on text at `offset` and `length` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  set_mark: function set_mark(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        length = operation.length,\n        mark = operation.mark,\n        properties = operation.properties;\n    var _value9 = value,\n        document = _value9.document;\n\n    var node = document.assertPath(path);\n    node = node.updateMark(offset, length, mark, properties);\n    document = document.updateNode(node);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Set `properties` on a node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  set_node: function set_node(value, operation) {\n    var path = operation.path,\n        properties = operation.properties;\n    var _value10 = value,\n        document = _value10.document;\n\n    var node = document.assertPath(path);\n    node = node.merge(properties);\n    document = document.updateNode(node);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Set `properties` on the selection.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  set_selection: function set_selection(value, operation) {\n    var properties = operation.properties;\n\n    var anchorPath = properties.anchorPath,\n        focusPath = properties.focusPath,\n        props = _objectWithoutProperties(properties, ['anchorPath', 'focusPath']);\n\n    var _value11 = value,\n        document = _value11.document,\n        selection = _value11.selection;\n\n\n    if (anchorPath !== undefined) {\n      props.anchorKey = anchorPath === null ? null : document.assertPath(anchorPath).key;\n    }\n\n    if (focusPath !== undefined) {\n      props.focusKey = focusPath === null ? null : document.assertPath(focusPath).key;\n    }\n\n    selection = selection.merge(props);\n    selection = selection.normalize(document);\n    value = value.set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Set `properties` on `value`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  set_value: function set_value(value, operation) {\n    var properties = operation.properties;\n\n    value = value.merge(properties);\n    return value;\n  },\n\n\n  /**\n   * Split a node by `path` at `offset`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  split_node: function split_node(value, operation) {\n    var path = operation.path,\n        position = operation.position;\n    var _value12 = value,\n        document = _value12.document,\n        selection = _value12.selection;\n\n    // Calculate a few things...\n\n    var node = document.assertPath(path);\n    var parent = document.getParent(node.key);\n    var index = parent.nodes.indexOf(node);\n\n    // Split the node by its parent.\n    parent = parent.splitNode(index, position);\n    document = document.updateNode(parent);\n\n    // Determine whether we need to update the selection...\n    var _selection5 = selection,\n        startKey = _selection5.startKey,\n        endKey = _selection5.endKey,\n        startOffset = _selection5.startOffset,\n        endOffset = _selection5.endOffset;\n\n    var next = document.getNextText(node.key);\n    var normalize = false;\n\n    // If the start point is after or equal to the split, update it.\n    if (node.key == startKey && position <= startOffset) {\n      selection = selection.moveStartTo(next.key, startOffset - position);\n      normalize = true;\n    }\n\n    // If the end point is after or equal to the split, update it.\n    if (node.key == endKey && position <= endOffset) {\n      selection = selection.moveEndTo(next.key, endOffset - position);\n      normalize = true;\n    }\n\n    // Normalize the selection if we changed it, since the methods we use might\n    // leave it in a non-normalized value.\n    if (normalize) {\n      selection = selection.normalize(document);\n    }\n\n    // Return the updated value.\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  }\n};\n\n/**\n * Apply an `operation` to a `value`.\n *\n * @param {Value} value\n * @param {Object|Operation} operation\n * @return {Value} value\n */\n\nfunction applyOperation(value, operation) {\n  operation = _operation3.default.create(operation);\n  var _operation = operation,\n      type = _operation.type;\n\n  var apply = APPLIERS[type];\n\n  if (!apply) {\n    throw new Error('Unknown operation type: \"' + type + '\".');\n  }\n\n  debug(type, operation);\n  value = apply(value, operation);\n  return value;\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexports.default = applyOperation;\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayPush = __webpack_require__(333),\n    getPrototype = __webpack_require__(343),\n    getSymbols = __webpack_require__(336),\n    stubArray = __webpack_require__(363);\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetAllKeys = __webpack_require__(362),\n    getSymbolsIn = __webpack_require__(376),\n    keysIn = __webpack_require__(313);\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n\n\n/***/ }),\n/* 378 */,\n/* 379 */,\n/* 380 */,\n/* 381 */,\n/* 382 */,\n/* 383 */,\n/* 384 */,\n/* 385 */,\n/* 386 */,\n/* 387 */,\n/* 388 */,\n/* 389 */,\n/* 390 */,\n/* 391 */,\n/* 392 */,\n/* 393 */,\n/* 394 */,\n/* 395 */,\n/* 396 */,\n/* 397 */,\n/* 398 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _Redirect=__webpack_require__(266);var _Redirect2=_interopRequireDefault(_Redirect);var _axios=__webpack_require__(82);var _axios2=_interopRequireDefault(_axios);var _queryString=__webpack_require__(279);var _queryString2=_interopRequireDefault(_queryString);var _editor=__webpack_require__(399);var _editor2=_interopRequireDefault(_editor);var _message=__webpack_require__(263);var _message2=_interopRequireDefault(_message);__webpack_require__(531);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/* eslint-env browser */var isNumber=function isNumber(num){var numbers=String(num).match('[0-9]+');if(numbers){return numbers[0]===String(num);}return false;};var numLength=function numLength(num,minLength,maxLength){return String(num).length>=minLength&&String(num).length<=maxLength;};var EditCampaign=function(_React$Component){_inherits(EditCampaign,_React$Component);// Sets up state and props and binds this to the class methods.\nfunction EditCampaign(props){_classCallCheck(this,EditCampaign);var _this=_possibleConstructorReturn(this,(EditCampaign.__proto__||Object.getPrototypeOf(EditCampaign)).call(this,props));_this.state={nonprofitInfo:{},campaigns:{},campaignInfo:{name:'',fundingNeeded:100,duration:10},contentInfo:{},campaignContent:[],fetched:false,hasCampaign:false,campaignId:null,campaignCreated:false,campaignCreatedId:null,valid:false,editorData:{},message:{type:'',message:''},error:{type:'',message:''},campaignSaved:false};_this.componentWillMount=_this.componentWillMount.bind(_this);_this.componentDidMount=_this.componentDidMount.bind(_this);_this.onChange=_this.onChange.bind(_this);_this.onSubmit=_this.onSubmit.bind(_this);_this.validate=_this.validate.bind(_this);_this.onChangeEditorData=_this.onChangeEditorData.bind(_this);return _this;}_createClass(EditCampaign,[{key:'componentWillMount',value:function componentWillMount(){var _this2=this;if('id'in this.props.match.params){var editCampaignId=parseInt(this.props.match.params.id,10);this.setState({valid:true});var _queryString$parse=_queryString2.default.parse(this.props.location.search),origin=_queryString$parse.origin;if(origin==='create-campaign'){this.setState({message:{type:'campaign created',message:'Your campaign was successfully created.'}});}_axios2.default.get('https://'+window.location.hostname+':3000/api/nonprofits/campaigns/'+this.props.userAuth.accessToken).then(function(results){_this2.setState({campaigns:results.data.data.campaigns});_this2.setState({nonprofitInfo:results.data.data.nonprofit});_this2.setState({campaignId:editCampaignId});if(_this2.state.campaigns.find(function(campaign){return campaign.campaignId===parseInt(editCampaignId,10);})){_this2.setState({hasCampaign:true});_axios2.default.get('https://'+window.location.hostname+':3000/api/campaigns/'+editCampaignId+'?accessToken='+_this2.props.userAuth.accessToken).then(function(campaignResults){var _campaignResults$data=campaignResults.data.data,campaignInfo=_campaignResults$data.campaignInfo,campaignContent=_campaignResults$data.campaignContent;campaignInfo.fundingNeeded=parseFloat(campaignInfo.fundingNeeded);document.title='Edit '+campaignInfo.name+' Campaign - Design Bright';_this2.setState({campaignInfo:campaignInfo});_this2.setState({contentInfo:results.data.data.contentInfo,campaignSaved:true});_this2.setState({campaignContent:campaignContent});_this2.setState({fetched:true});}).catch(function(error){return console.log(error);});}else{_this2.setState({hasCampaign:false});_this2.setState({fetched:true});}}).catch(function(error){return console.log(error);});}else{this.setState({fetched:true,hasCampaign:true});}}},{key:'componentDidMount',value:function componentDidMount(){this.validate();}},{key:'onChange',value:function onChange(e){var _this3=this;var target=e.target;var name=target.name;var value=void 0;if(name==='fundingNeeded'){value=target.value.replace(/\\.|,|[^0-9.]/g,'');if(value===''){value=100;}}else{value=target.type==='checkbox'?target.checked:target.value;}var campaignInfo=this.state.campaignInfo;campaignInfo[name]=value;this.setState({campaignInfo:campaignInfo,campaignSaved:false},function(){if(_this3.validate()){_this3.setState({valid:true});}else{_this3.setState({valid:false});}});}},{key:'onSubmit',value:function onSubmit(e){var _this4=this;e.preventDefault();var accessToken=this.props.userAuth.accessToken;if(this.state.campaignContent.length>0){_axios2.default.patch('https://'+window.location.hostname+':3000/api/campaigns/edit/'+this.state.campaignInfo.campaignId,{campaignInfo:this.state.campaignInfo,campaignContent:this.state.editorData,accessToken:accessToken}).then(function(editCampaignResults){window.scrollTo(0,0);_this4.setState({message:{type:'edit campaign',message:editCampaignResults.data.message},campaignSaved:true});}).catch(function(editCampaignErr){window.scrollTo(0,0);_this4.setState({error:{type:'edit campaign',message:editCampaignErr.response.data.message}});});}else{_axios2.default.post('https://'+window.location.hostname+':3000/api/campaigns/create',{newCampaign:_extends({},this.state.campaignInfo,{content:this.state.editorData}),accessToken:accessToken}).then(function(createCampaignResults){window.scrollTo(0,0);_this4.setState({campaignCreated:true,campaignCreatedId:createCampaignResults.data.data.campaignId});_this4.setState({message:{type:'edit campaign',message:createCampaignResults.data.message}});}).catch(function(createCampaignErr){window.scrollTo(0,0);if(createCampaignErr.response.data.statusCode===409){var campaignInfo=_this4.state.campaignInfo;campaignInfo.name='';_this4.setState({campaignInfo:campaignInfo});}_this4.setState({error:{type:'edit campaign',message:createCampaignErr.response.data.message}});});}}},{key:'onChangeEditorData',value:function onChangeEditorData(editorData,campaignSaved){var _this5=this;this.setState({editorData:editorData,campaignSaved:campaignSaved},function(){if(_this5.validate()){_this5.setState({valid:true});}else{_this5.setState({valid:false});}});}},{key:'validate',value:function validate(){if(this.state.campaignInfo.startDate){if(this.state.editorData.document.nodes[0].nodes[0].ranges[0].text!==''){return true;}}else if(this.state.campaignInfo.name.length>0&&isNumber(this.state.campaignInfo.duration)&&numLength(this.state.campaignInfo.duration,2,2)&&isNumber(this.state.campaignInfo.fundingNeeded)&&numLength(this.state.campaignInfo.fundingNeeded,3,6)&&this.state.editorData.document.nodes[0].nodes[0].ranges[0].text!==''){return true;}return false;}},{key:'render',value:function render(){var _this6=this;if(this.state.campaignCreated){return _react2.default.createElement(_Redirect2.default,{to:{pathname:'/campaign/edit/'+this.state.campaignCreatedId,search:'?origin=create-campaign'}});}else if(this.props.onRequireAuth()){if(this.props.userInfo.userType==='non-profit'){if(this.state.fetched){if(this.state.hasCampaign){return _react2.default.createElement('main',{id:'editCampaigns',className:'small-12 columns'+('ontouchstart'in document.documentElement?'':' no-touch')},_react2.default.createElement(_message2.default,{error:this.state.error,onClearMessage:function onClearMessage(){return _this6.setState({message:{type:'',message:''}});},message:this.state.message,onClearError:function onClearError(){return _this6.setState({error:{type:'',message:''}});}}),_react2.default.createElement('section',{className:'row align-center'},_react2.default.createElement('form',{className:'small-12 columns',onSubmit:this.onSubmit},_react2.default.createElement('div',{className:'row header'},_react2.default.createElement('h1',{className:'small-12 columns'},_react2.default.createElement('span',{className:'underlined'},this.state.campaignContent.length>0?'Edit '+this.state.campaignInfo.name+'\\'s Campaign':'Create '+(this.state.campaignInfo.name?this.state.campaignInfo.name+'\\'s':'')+' Campaign')),this.state.campaignInfo.startDate?_react2.default.createElement('p',{className:'message small-12 columns'},new Date(Date.parse(this.state.campaignInfo.endDate)).getTime()<=new Date().getTime()?'This campaign has already ended so only it\\'s content can be modified.':'This campaign has already started so only it\\'s content can be modified.'):null),_react2.default.createElement('div',{className:'row'},this.state.campaignInfo.startDate?_react2.default.createElement('div',{className:'small-12 large-5 columns'},_react2.default.createElement('p',{className:'title'},'Campaign Name:'),_react2.default.createElement('p',{className:'info'},this.state.campaignInfo.name),_react2.default.createElement('p',{className:'title'},'Campaign Duration:'),_react2.default.createElement('p',{className:'info'},this.state.campaignInfo.duration,' Days'),_react2.default.createElement('p',{className:'title'},'Funding Needed:'),_react2.default.createElement('p',{className:'info'},'$',this.state.campaignInfo.fundingNeeded),_react2.default.createElement('p',{className:'title'},'Start Date:'),_react2.default.createElement('p',{className:'info'},new Date(Date.parse(this.state.campaignInfo.startDate)).toLocaleDateString()),this.state.campaignInfo.endDate?_react2.default.createElement('div',null,_react2.default.createElement('p',{className:'title'},'End Date:'),_react2.default.createElement('p',{className:'info'},new Date(Date.parse(this.state.campaignInfo.endDate)).toLocaleDateString())):null):_react2.default.createElement('div',{className:'small-12 large-5 columns'},_react2.default.createElement('label',{htmlFor:'name'},'Campaign Name: ',_react2.default.createElement('span',{className:'required'},'*')),_react2.default.createElement('input',{value:this.state.campaignInfo.name,onChange:this.onChange,type:'text',name:'name',id:'campaignName',required:true}),_react2.default.createElement('label',{htmlFor:'duration',className:'row'+(isNumber(this.state.campaignInfo.duration)&&numLength(this.state.campaignInfo.duration,2,2)?'':' invalid')},_react2.default.createElement('div',{className:'small-12 columns'},'Campaign Duration (Days): ',_react2.default.createElement('span',{className:'required'},'*')),_react2.default.createElement('div',{className:'small-12 columns'},_react2.default.createElement('span',{className:'error'},'The campaign duration must be between 10 and 99 days.'))),_react2.default.createElement('input',{value:this.state.campaignInfo.duration,onChange:this.onChange,type:'number',name:'duration',id:'campaignDuration',required:true}),_react2.default.createElement('label',{htmlFor:'fundingNeeded',className:'row'+(isNumber(this.state.campaignInfo.fundingNeeded)&&numLength(this.state.campaignInfo.fundingNeeded,3,6)?'':' invalid')},_react2.default.createElement('div',{className:'small-12 columns'},'Funding Needed: ',_react2.default.createElement('span',{className:'required'},'*')),_react2.default.createElement('div',{className:'small-12 columns'},_react2.default.createElement('span',{className:'error'},'Funding must be more than $100 but less than $1,000,000.'))),_react2.default.createElement('input',{value:'$'+parseInt(this.state.campaignInfo.fundingNeeded,10).toLocaleString(),onChange:this.onChange,type:'text',name:'fundingNeeded',id:'campaignFunding',required:true})),_react2.default.createElement('div',{className:'small-12 large-7 columns'},_react2.default.createElement('label',{htmlFor:'campaignEditor'},'Campaign Content: ',_react2.default.createElement('span',{className:'required'},'*')),_react2.default.createElement(_editor2.default,{content:this.state.campaignContent,campaignInfo:this.state.campaignInfo,nonprofitInfo:this.state.nonprofitInfo,campaignId:this.state.campaignId,onChangeEditorData:this.onChangeEditorData}))),_react2.default.createElement('div',{className:'row align-center'},_react2.default.createElement('button',{className:'primary small-11 medium-10 large-8 columns'+(this.state.campaignContent.length>0?''+(this.state.valid&&!this.state.campaignSaved?'':' disabled'):''+(this.state.valid?'':' disabled')),disabled:this.state.campaignContent.length>0?!this.state.valid&&this.state.campaignSaved:!this.state.valid,type:'submit',onClick:this.onSubmit},this.state.campaignContent.length>0?''+(this.state.campaignSaved?'No Changes Made':'Save Changes'):'Create Campaign'),!this.state.valid?_react2.default.createElement('span',{className:'error small-12'},'Please make sure you\\'ve entered all your information.'):null))));}return _react2.default.createElement(_Redirect2.default,{to:{pathname:'/manage-campaigns',search:'?origin=not-auth-to-edit'}});}return _react2.default.createElement('h1',null,'Loading');}return _react2.default.createElement(_Redirect2.default,{to:{pathname:'/user/profile',search:'?origin=nonprofit-page'}});}return _react2.default.createElement(_Redirect2.default,{to:{pathname:'/login',search:'?origin=secure'}});}}]);return EditCampaign;}(_react2.default.Component);exports.default=EditCampaign;\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};/* eslint-env browser */var _slate=__webpack_require__(400);var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _isUrl=__webpack_require__(524);var _isUrl2=_interopRequireDefault(_isUrl);var _axios=__webpack_require__(82);var _axios2=_interopRequireDefault(_axios);var _helpers=__webpack_require__(85);var _helpers2=_interopRequireDefault(_helpers);var _images=__webpack_require__(525);var _images2=_interopRequireDefault(_images);var _toolbar=__webpack_require__(526);var _toolbar2=_interopRequireDefault(_toolbar);var _createLink=__webpack_require__(527);var _createLink2=_interopRequireDefault(_createLink);var _createImage=__webpack_require__(528);var _createImage2=_interopRequireDefault(_createImage);__webpack_require__(529);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var defaultBlock={type:'paragraph',isVoid:false,data:{}};/**\n * Define a schema.\n *\n * @type {Object}\n */var schema={nodes:{header:function header(props){return _react2.default.createElement('h2',props.attributes,_react2.default.createElement('span',{className:'underlined'},props.children));},paragraph:function paragraph(props){return _react2.default.createElement('p',props.attributes,props.children);},bulletedList:function bulletedList(props){return _react2.default.createElement('ul',null,props.children);},listItem:function listItem(props){return _react2.default.createElement('li',null,props.children);},numberedList:function numberedList(props){return _react2.default.createElement('ol',null,props.children);},link:function link(props){var url=props.node.data.get('url');return _react2.default.createElement('a',_extends({href:url},props.attributes),props.children);},image:function image(props){var node=props.node,state=props.state;var active=state.isFocused&&state.selection.hasEdgeIn(node);var src=node.data.get('src');var alt=node.data.get('alt');var imageType=node.data.get('imageType');var className=active?'active':null;return _react2.default.createElement(_images2.default,{src:src,className:className,imageType:imageType,attributes:props.attributes,alt:alt});}},marks:{bold:{fontWeight:'bold'},italic:{fontStyle:'italic'},underlined:{textDecoration:'underline'}},rules:[// Rule to insert a paragraph block if the document is empty.\n{match:function match(node){return node.kind==='document';},validate:function validate(document){return document.nodes.size?null:true;},normalize:function normalize(transform,document){var block=_slate.Block.create(defaultBlock);transform.insertNodeByKey(document.key,0,block);}},// Rule to insert a paragraph below a void node (the image) if that node is\n// the last one in the document.\n{match:function match(node){return node.kind==='document';},validate:function validate(document){var lastNode=document.nodes.last();return lastNode&&lastNode.isVoid?true:null;},normalize:function normalize(transform,document){var block=_slate.Block.create(defaultBlock);transform.insertNodeByKey(document.key,document.nodes.size,block);}}]};var CampaignEditor=function(_React$Component){_inherits(CampaignEditor,_React$Component);// Sets up state and props and binds this to the class methods.\nfunction CampaignEditor(props){_classCallCheck(this,CampaignEditor);var _this=_possibleConstructorReturn(this,(CampaignEditor.__proto__||Object.getPrototypeOf(CampaignEditor)).call(this,props));var initialState=void 0;if(props.content.length>0){initialState={nodes:props.content};}else{initialState={nodes:[{kind:'block',type:'paragraph',nodes:[{kind:'text',text:'We recommend that you follow the following format for you campaign. This is where you would write your initial introduction for your campaign. This will also serve as the description on the search and browse pages. If you don\\'t put the paragraph here the next paragraph will be your description.'}]},{kind:'block',type:'header',nodes:[{kind:'text',text:'Main Image'}]},{kind:'block',type:'image',isVoid:true,data:{alt:'Senior veteran at a march.',imageType:'main',src:'/assets/img/veteran.jpg'}},{kind:'block',type:'paragraph',nodes:[{kind:'text',text:'You should delete the image above and replace it with your own. This will serve as the image in the campaign list. If you don\\'t put one here we will use the first main image you insert.'}]},{kind:'block',type:'header',nodes:[{kind:'text',text:'You Can Use Headers to Organize Your Content'}]},{kind:'block',type:'image',isVoid:true,data:{alt:'A flag on a home.',imageType:'left',src:'/assets/img/flag-home.jpg'}},{kind:'block',type:'paragraph',nodes:[{kind:'text',text:'Images can be inserted so that they flow with your content. These can be on the left or right side.'}]},{kind:'block',type:'paragraph',nodes:[{kind:'text',text:'You can also use '},{kind:'inline',text:'links',type:'link',data:{url:'https://www.designbright.org'},nodes:[{kind:'text',text:'links'}]},{kind:'text',text:' in your text to provide a connection to your non-profit\\'s information.'}]}]};}_this.state={editorState:_slate.Raw.deserialize(initialState,{terse:true}),showCreateLink:false,newUrl:'http://',newUrlText:'',showAddImage:false,newSrc:'',newAlt:'',newImageType:'main',heldEditorState:{}};_this.onChangeEditor=_this.onChangeEditor.bind(_this);_this.onAddImage=_this.onAddImage.bind(_this);_this.onCreateImage=_this.onCreateImage.bind(_this);_this.cancelCreateImage=_this.cancelCreateImage.bind(_this);_this.onChangeFormat=_this.onChangeFormat.bind(_this);_this.onNewLink=_this.onNewLink.bind(_this);_this.isBlock=_this.isBlock.bind(_this);_this.isLink=_this.isLink.bind(_this);_this.onCreateLink=_this.onCreateLink.bind(_this);_this.onChangeInput=_this.onChangeInput.bind(_this);_this.cancelCreateLink=_this.cancelCreateLink.bind(_this);_this.componentDidMount=_this.componentDidMount.bind(_this);_this.onClickInline=_this.onClickInline.bind(_this);_this.onClickList=_this.onClickList.bind(_this);return _this;}_createClass(CampaignEditor,[{key:'componentDidMount',value:function componentDidMount(){this.onChangeEditor(this.state.editorState,true);}},{key:'onChangeEditor',value:function onChangeEditor(editorState,campaignSaved){this.setState({editorState:editorState},this.props.onChangeEditorData(_slate.Raw.serialize(editorState),campaignSaved));}},{key:'onChangeInput',value:function onChangeInput(e){var target=e.target;var value=function value(){if(target.type==='checkbox'){return target.checked;}else if(target.type==='file'){return target.files[0];}return target.value;};var name=target.name;this.setState(_defineProperty({},name,value()));}},{key:'onAddImage',value:function onAddImage(e){e.preventDefault();// const src = window.prompt('Enter the URL of the image:');\n// const alt = window.prompt('Please enter a description:');\n// const imageType = window.prompt('Please enter the image type:');\nvar editorState=this.state.editorState;this.cancelCreateLink();this.setState({heldEditorState:editorState,showAddImage:true});}},{key:'onCreateImage',value:function onCreateImage(e){var _this2=this;e.preventDefault();this.setState({heldState:this.state.editorState});var formData=new FormData();formData.append('file',this.state.newSrc);formData.append('campaignId',this.props.campaignInfo.campaignId);formData.append('campaignName',this.props.campaignInfo.name);formData.append('nonprofitId',this.props.nonprofitInfo.nonprofitId);formData.append('imageType',this.state.newImageType);formData.append('imageAlt',this.state.newAlt);_axios2.default.post('https://'+window.location.hostname+':3000/api/campaigns/upload/photo/'+this.props.campaignInfo.campaignId,formData,{headers:{'Content-Type':'multipart/form-data'}}).then(function(_ref){var data=_ref.data;var newImage=data.data;var _state=_this2.state,newAlt=_state.newAlt,newImageType=_state.newImageType,heldState=_state.heldState;_this2.insertImage(newImage.secure_url,newAlt,newImageType,heldState);}).catch(function(error){return console.log(error);});}},{key:'cancelCreateImage',value:function cancelCreateImage(e){if(e){e.preventDefault();}return this.setState({heldEditorState:{},showAddImage:false,newSrc:'',newAlt:'',newImageType:'main'});}},{key:'insertImage',value:function insertImage(src,alt,imageType,heldState){var transform=heldState.transform();var newEditorState=transform.insertBlock({type:'image',isVoid:true,data:{src:src,alt:alt,imageType:imageType}}).apply();this.setState({heldEditorState:{},showAddImage:false,newSrc:'',newAlt:'',newImageType:'main'},this.onChangeEditor(newEditorState));}},{key:'onChangeFormat',value:function onChangeFormat(e){var type=e.target.value;var editorState=this.state.editorState;var transform=editorState.transform();if(this.state.editorState.focusBlock.type!=='image'){var isBlock=this.isBlock(type);transform.setBlock(isBlock?'paragraph':type);var newEditorState=transform.apply();this.onChangeEditor(newEditorState);}}},{key:'isBlock',value:function isBlock(type){var editorState=this.state.editorState;var nodeType=void 0;var test=editorState.blocks.some(function(node){if(node.type==='image'){nodeType=node.type;}return node.type===type;});if(nodeType){return nodeType;}return test;}},{key:'isLink',value:function isLink(){var editorState=this.state.editorState;return editorState.inlines.some(function(inline){return inline.type==='link';});}},{key:'onNewLink',value:function onNewLink(e){e.preventDefault();var editorState=this.state.editorState;var isLink=this.isLink();var newEditorState=editorState;this.cancelCreateImage();if(this.state.showCreateLink){return this.cancelCreateLink(e);}if(isLink){newEditorState=editorState.transform().unwrapInline('link').apply();return this.onChangeEditor(newEditorState);}return this.setState({heldEditorState:newEditorState,showCreateLink:true},this.onChangeEditor(newEditorState));}},{key:'onCreateLink',value:function onCreateLink(e){e.preventDefault();var editorState=this.state.heldEditorState;var newEditorState=void 0;if(editorState.isExpanded){var url=this.state.newUrl;newEditorState=editorState.transform().wrapInline({type:'link',data:{url:url}}).collapseToEnd().apply();}else{var _url=this.state.newUrl;var text=this.state.newUrlText;newEditorState=editorState.transform().insertText(text).extend(0-text.length).wrapInline({type:'link',data:{url:_url}}).collapseToEnd().apply();}this.setState({showCreateLink:false,newUrl:'http://',newUrlText:'',heldEditorState:{}},this.onChangeEditor(newEditorState));}},{key:'cancelCreateLink',value:function cancelCreateLink(e){if(e){e.preventDefault();}return this.setState({heldEditorState:{},showCreateLink:false,newUrl:'http://',newUrlText:''});}},{key:'onClickInline',value:function onClickInline(e,type){e.preventDefault();var editorState=this.state.editorState;var transform=editorState.transform();var isHeader=editorState.blocks.some(function(block){return block.type==='header';});editorState.marks.forEach(function(mark){return mark.type!==type?transform.removeMark(mark):null;},this);if(!isHeader){transform.toggleMark(type);}var newEditorState=transform.apply();return this.onChangeEditor(newEditorState);}},{key:'onClickList',value:function onClickList(e,type){e.preventDefault();var editorState=this.state.editorState;var newEditorState=editorState;// Handle the extra wrapping required for list buttons.\nvar isList=this.isBlock('listItem');var isType=editorState.blocks.some(function(block){return!!newEditorState.document.getClosest(block.key,function(parent){return parent.type===type;});});if(isList&&isType){newEditorState=newEditorState.transform().setBlock(defaultBlock).unwrapBlock('bulletedList').unwrapBlock('numberedList');}else if(isList){newEditorState=newEditorState.transform().unwrapBlock(type==='bulletedList'?'numberedList':'bulletedList').wrapBlock(type);}else{newEditorState=newEditorState.transform().setBlock('listItem').wrapBlock(type);}newEditorState=newEditorState.apply();this.onChangeEditor(newEditorState);}},{key:'render',value:function render(){return _react2.default.createElement('div',{id:'campaignEditor'},_react2.default.createElement(_toolbar2.default,{onClickInline:this.onClickInline,onClickList:this.onClickList,onAddImage:this.onAddImage,onNewLink:this.onNewLink,onChangeFormat:this.onChangeFormat,selectValue:this.state.editorState.focusBlock,inlineType:this.state.editorState.focusInline}),this.state.showCreateLink?_react2.default.createElement(_createLink2.default,{editorState:this.state.heldEditorState,onCreateLink:this.onCreateLink,cancelCreateLink:this.cancelCreateLink,newUrl:this.state.newUrl,newUrlText:this.state.newUrlText,onChange:this.onChangeInput,validate:function validate(url){return(0,_isUrl2.default)(url);}}):null,this.state.showAddImage?_react2.default.createElement(_createImage2.default,{editorState:this.state.heldEditorState,onCreateImage:this.onCreateImage,cancelCreateImage:this.cancelCreateImage,onChange:this.onChangeInput,newSrc:this.state.newSrc,newAlt:this.state.newAlt,newImageType:this.state.newImageType,validate:function validate(src){return(0,_helpers2.default)(src);}}):null,_react2.default.createElement('div',{className:'grey-line'}),_react2.default.createElement('div',{className:'editor'},_react2.default.createElement(_slate.Editor,{schema:schema,state:this.state.editorState,onChange:this.onChangeEditor})));}}]);return CampaignEditor;}(_react2.default.Component);exports.default=CampaignEditor;\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setKeyGenerator = exports.resetKeyGenerator = exports.Value = exports.Text = exports.Stack = exports.Schema = exports.Range = exports.Operations = exports.Operation = exports.Node = exports.Mark = exports.Leaf = exports.Inline = exports.History = exports.Document = exports.Data = exports.Character = exports.Changes = exports.Block = undefined;\n\nvar _block = __webpack_require__(285);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _changes = __webpack_require__(347);\n\nvar _changes2 = _interopRequireDefault(_changes);\n\nvar _character = __webpack_require__(324);\n\nvar _character2 = _interopRequireDefault(_character);\n\nvar _data = __webpack_require__(300);\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _document = __webpack_require__(293);\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _history = __webpack_require__(358);\n\nvar _history2 = _interopRequireDefault(_history);\n\nvar _inline = __webpack_require__(286);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _leaf = __webpack_require__(346);\n\nvar _leaf2 = _interopRequireDefault(_leaf);\n\nvar _mark = __webpack_require__(275);\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _node = __webpack_require__(282);\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _operation = __webpack_require__(309);\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _operations = __webpack_require__(523);\n\nvar _operations2 = _interopRequireDefault(_operations);\n\nvar _range = __webpack_require__(294);\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _schema = __webpack_require__(366);\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nvar _stack = __webpack_require__(374);\n\nvar _stack2 = _interopRequireDefault(_stack);\n\nvar _text = __webpack_require__(323);\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _value = __webpack_require__(334);\n\nvar _value2 = _interopRequireDefault(_value);\n\nvar _generateKey = __webpack_require__(287);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.Block = _block2.default;\nexports.Changes = _changes2.default;\nexports.Character = _character2.default;\nexports.Data = _data2.default;\nexports.Document = _document2.default;\nexports.History = _history2.default;\nexports.Inline = _inline2.default;\nexports.Leaf = _leaf2.default;\nexports.Mark = _mark2.default;\nexports.Node = _node2.default;\nexports.Operation = _operation2.default;\nexports.Operations = _operations2.default;\nexports.Range = _range2.default;\nexports.Schema = _schema2.default;\nexports.Stack = _stack2.default;\nexports.Text = _text2.default;\nexports.Value = _value2.default;\nexports.resetKeyGenerator = _generateKey.resetKeyGenerator;\nexports.setKeyGenerator = _generateKey.setKeyGenerator;\nexports.default = {\n  Block: _block2.default,\n  Changes: _changes2.default,\n  Character: _character2.default,\n  Data: _data2.default,\n  Document: _document2.default,\n  History: _history2.default,\n  Inline: _inline2.default,\n  Leaf: _leaf2.default,\n  Mark: _mark2.default,\n  Node: _node2.default,\n  Operation: _operation2.default,\n  Operations: _operations2.default,\n  Range: _range2.default,\n  Schema: _schema2.default,\n  Stack: _stack2.default,\n  Text: _text2.default,\n  Value: _value2.default,\n  resetKeyGenerator: _generateKey.resetKeyGenerator,\n  setKeyGenerator: _generateKey.setKeyGenerator\n};\n\n/***/ }),\n/* 401 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar GROUP_LEFT_TO_RIGHT,\n    GROUP_RIGHT_TO_LEFT,\n    EXPRESSION_LEFT_TO_RIGHT,\n    EXPRESSION_RIGHT_TO_LEFT;\n\n/*\n * Character ranges of left-to-right characters.\n */\n\nGROUP_LEFT_TO_RIGHT = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n    '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n    '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF';\n\n/*\n * Character ranges of right-to-left characters.\n */\n\nGROUP_RIGHT_TO_LEFT = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\n\n/*\n * Expression to match a left-to-right string.\n *\n * Matches the start of a string, followed by zero or\n * more non-right-to-left characters, followed by a\n * left-to-right character.\n */\n\nEXPRESSION_LEFT_TO_RIGHT = new RegExp(\n    '^[^' + GROUP_RIGHT_TO_LEFT + ']*[' + GROUP_LEFT_TO_RIGHT + ']'\n);\n\n/*\n * Expression to match a right-to-left string.\n *\n * Matches the start of a string, followed by zero or\n * more non-left-to-right characters, followed by a\n * right-to-left character.\n */\n\nEXPRESSION_RIGHT_TO_LEFT = new RegExp(\n    '^[^' + GROUP_LEFT_TO_RIGHT + ']*[' + GROUP_RIGHT_TO_LEFT + ']'\n);\n\n/**\n * Detect the direction of text.\n *\n * @param {string} value - value to stringify and check.\n * @return {string} - One of `\"rtl\"`, `\"ltr\"`, or\n *   `\"neutral\"`.\n */\nfunction direction(value) {\n    value = value.toString();\n\n    if (EXPRESSION_RIGHT_TO_LEFT.test(value)) {\n        return 'rtl';\n    }\n\n    if (EXPRESSION_LEFT_TO_RIGHT.test(value)) {\n        return 'ltr';\n    }\n\n    return 'neutral';\n}\n\n/*\n * Expose `direction`.\n */\n\nmodule.exports = direction;\n\n\n/***/ }),\n/* 402 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {var global$1 = typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {}\n\n// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global$1.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global$1.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}\nfunction umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global$1.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar process = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\n/* eslint-disable no-console */\n\n/**\n * Is in development?\n *\n * @type {Boolean}\n */\n\nvar IS_DEV = typeof process !== 'undefined' && process.env && \"development\" !== 'production';\n\n/**\n * Has console?\n *\n * @type {Boolean}\n */\n\nvar HAS_CONSOLE = typeof console != 'undefined' && typeof console.log == 'function' && typeof console.warn == 'function' && typeof console.error == 'function';\n\n/**\n * Log a `message` at `level`.\n *\n * @param {String} level\n * @param {String} message\n * @param {Any} ...args\n */\n\nfunction log(level, message) {\n  if (!IS_DEV) {\n    return;\n  }\n\n  if (HAS_CONSOLE) {\n    var _console;\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    (_console = console)[level].apply(_console, [message].concat(args));\n  }\n}\n\n/**\n * Log an error `message`.\n *\n * @param {String} message\n * @param {Any} ...args\n */\n\nfunction error(message) {\n  if (HAS_CONSOLE) {\n    var _console2;\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    (_console2 = console).error.apply(_console2, [message].concat(args));\n  }\n}\n\n/**\n * Log a warning `message` in development only.\n *\n * @param {String} message\n * @param {Any} ...args\n */\n\nfunction warn(message) {\n  for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  log.apply(undefined, ['warn', 'Warning: ' + message].concat(args));\n}\n\n/**\n * Log a deprecation warning `message`, with helpful `version` number in\n * development only.\n *\n * @param {String} version\n * @param {String} message\n * @param {Any} ...args\n */\n\nfunction deprecate(version$$1, message) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n    args[_key4 - 2] = arguments[_key4];\n  }\n\n  log.apply(undefined, ['warn', 'Deprecation (' + version$$1 + '): ' + message].concat(args));\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nvar index = {\n  deprecate: deprecate,\n  error: error,\n  warn: warn\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n//# sourceMappingURL=slate-dev-logger.es.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(25)))\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Check if an `index` of a `text` node is in a `range`.\n *\n * @param {Number} index\n * @param {Text} text\n * @param {Range} range\n * @return {Boolean}\n */\n\nfunction isIndexInRange(index, text, range) {\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n\n\n  if (text.key == startKey && text.key == endKey) {\n    return startOffset <= index && index < endOffset;\n  } else if (text.key == startKey) {\n    return startOffset <= index;\n  } else if (text.key == endKey) {\n    return index < endOffset;\n  } else {\n    return true;\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexports.default = isIndexInRange;\n\n/***/ }),\n/* 404 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _block = __webpack_require__(285);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _inline = __webpack_require__(286);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _mark = __webpack_require__(275);\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Mix in the changes that pass through to their at-range equivalents because\n * they don't have any effect on the selection.\n */\n\nvar PROXY_TRANSFORMS = ['deleteBackward', 'deleteCharBackward', 'deleteLineBackward', 'deleteWordBackward', 'deleteForward', 'deleteCharForward', 'deleteWordForward', 'deleteLineForward', 'setBlock', 'setInline', 'splitInline', 'unwrapBlock', 'unwrapInline', 'wrapBlock', 'wrapInline'];\n\nPROXY_TRANSFORMS.forEach(function (method) {\n  Changes[method] = function (change) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var value = change.value;\n    var selection = value.selection;\n\n    var methodAtRange = method + 'AtRange';\n    change[methodAtRange].apply(change, [selection].concat(args));\n  };\n});\n\n/**\n * Add a `mark` to the characters in the current selection.\n *\n * @param {Change} change\n * @param {Mark} mark\n */\n\nChanges.addMark = function (change, mark) {\n  mark = _mark2.default.create(mark);\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n\n  if (selection.isExpanded) {\n    change.addMarkAtRange(selection, mark);\n  } else if (selection.marks) {\n    var marks = selection.marks.add(mark);\n    var sel = selection.set('marks', marks);\n    change.select(sel);\n  } else {\n    var _marks = document.getActiveMarksAtRange(selection).add(mark);\n    var _sel = selection.set('marks', _marks);\n    change.select(_sel);\n  }\n};\n\n/**\n * Add a list of `marks` to the characters in the current selection.\n *\n * @param {Change} change\n * @param {Mark} mark\n */\n\nChanges.addMarks = function (change, marks) {\n  marks.forEach(function (mark) {\n    return change.addMark(mark);\n  });\n};\n\n/**\n * Delete at the current selection.\n *\n * @param {Change} change\n */\n\nChanges.delete = function (change) {\n  var value = change.value;\n  var selection = value.selection;\n\n  change.deleteAtRange(selection);\n\n  // Ensure that the selection is collapsed to the start, because in certain\n  // cases when deleting across inline nodes, when splitting the inline node the\n  // end point of the selection will end up after the split point.\n  change.collapseToStart();\n};\n\n/**\n * Insert a `block` at the current selection.\n *\n * @param {Change} change\n * @param {String|Object|Block} block\n */\n\nChanges.insertBlock = function (change, block) {\n  block = _block2.default.create(block);\n  var value = change.value;\n  var selection = value.selection;\n\n  change.insertBlockAtRange(selection, block);\n\n  // If the node was successfully inserted, update the selection.\n  var node = change.value.document.getNode(block.key);\n  if (node) change.collapseToEndOf(node);\n};\n\n/**\n * Insert a `fragment` at the current selection.\n *\n * @param {Change} change\n * @param {Document} fragment\n */\n\nChanges.insertFragment = function (change, fragment) {\n  if (!fragment.nodes.size) return;\n\n  var value = change.value;\n  var _value = value,\n      document = _value.document,\n      selection = _value.selection;\n  var _value2 = value,\n      startText = _value2.startText,\n      endText = _value2.endText,\n      startInline = _value2.startInline;\n\n  var lastText = fragment.getLastText();\n  var lastInline = fragment.getClosestInline(lastText.key);\n  var keys = document.getTexts().map(function (text) {\n    return text.key;\n  });\n  var isAppending = !startInline || selection.hasEdgeAtStartOf(startText) || selection.hasEdgeAtEndOf(endText);\n\n  change.insertFragmentAtRange(selection, fragment);\n  value = change.value;\n  document = value.document;\n\n  var newTexts = document.getTexts().filter(function (n) {\n    return !keys.includes(n.key);\n  });\n  var newText = isAppending ? newTexts.last() : newTexts.takeLast(2).first();\n\n  if (newText && lastInline) {\n    change.select(selection.collapseToEndOf(newText));\n  } else if (newText) {\n    change.select(selection.collapseToStartOf(newText).move(lastText.text.length));\n  } else {\n    change.select(selection.collapseToStart().move(lastText.text.length));\n  }\n};\n\n/**\n * Insert an `inline` at the current selection.\n *\n * @param {Change} change\n * @param {String|Object|Inline} inline\n */\n\nChanges.insertInline = function (change, inline) {\n  inline = _inline2.default.create(inline);\n  var value = change.value;\n  var selection = value.selection;\n\n  change.insertInlineAtRange(selection, inline);\n\n  // If the node was successfully inserted, update the selection.\n  var node = change.value.document.getNode(inline.key);\n  if (node) change.collapseToEndOf(node);\n};\n\n/**\n * Insert a string of `text` with optional `marks` at the current selection.\n *\n * @param {Change} change\n * @param {String} text\n * @param {Set<Mark>} marks (optional)\n */\n\nChanges.insertText = function (change, text, marks) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  marks = marks || value.marks;\n  change.insertTextAtRange(selection, text, marks);\n\n  // If the text was successfully inserted, and the selection had marks on it,\n  // unset the selection's marks.\n  if (selection.marks && document != change.value.document) {\n    change.select({ marks: null });\n  }\n};\n\n/**\n * Split the block node at the current selection, to optional `depth`.\n *\n * @param {Change} change\n * @param {Number} depth (optional)\n */\n\nChanges.splitBlock = function (change) {\n  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var value = change.value;\n  var selection = value.selection;\n\n  change.splitBlockAtRange(selection, depth).collapseToEnd();\n};\n\n/**\n * Remove a `mark` from the characters in the current selection.\n *\n * @param {Change} change\n * @param {Mark} mark\n */\n\nChanges.removeMark = function (change, mark) {\n  mark = _mark2.default.create(mark);\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n\n  if (selection.isExpanded) {\n    change.removeMarkAtRange(selection, mark);\n  } else if (selection.marks) {\n    var marks = selection.marks.remove(mark);\n    var sel = selection.set('marks', marks);\n    change.select(sel);\n  } else {\n    var _marks2 = document.getActiveMarksAtRange(selection).remove(mark);\n    var _sel2 = selection.set('marks', _marks2);\n    change.select(_sel2);\n  }\n};\n\n/**\n * Add or remove a `mark` from the characters in the current selection,\n * depending on whether it's already there.\n *\n * @param {Change} change\n * @param {Mark} mark\n */\n\nChanges.toggleMark = function (change, mark) {\n  mark = _mark2.default.create(mark);\n  var value = change.value;\n\n  var exists = value.activeMarks.has(mark);\n\n  if (exists) {\n    change.removeMark(mark);\n  } else {\n    change.addMark(mark);\n  }\n};\n\n/**\n * Wrap the current selection with prefix/suffix.\n *\n * @param {Change} change\n * @param {String} prefix\n * @param {String} suffix\n */\n\nChanges.wrapText = function (change, prefix) {\n  var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : prefix;\n  var value = change.value;\n  var selection = value.selection;\n\n  change.wrapTextAtRange(selection, prefix, suffix);\n\n  // If the selection was collapsed, it will have moved the start offset too.\n  if (selection.isCollapsed) {\n    change.moveStart(0 - prefix.length);\n  }\n\n  // Adding the suffix will have pushed the end of the selection further on, so\n  // we need to move it back to account for this.\n  change.moveEnd(0 - suffix.length);\n\n  // There's a chance that the selection points moved \"through\" each other,\n  // resulting in a now-incorrect selection direction.\n  if (selection.isForward != change.value.selection.isForward) {\n    change.flip();\n  }\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n/***/ }),\n/* 405 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _immutable = __webpack_require__(261);\n\nvar _block = __webpack_require__(285);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _inline = __webpack_require__(286);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _mark = __webpack_require__(275);\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _node = __webpack_require__(282);\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _string = __webpack_require__(406);\n\nvar _string2 = _interopRequireDefault(_string);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Add a new `mark` to the characters at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Mixed} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.addMarkAtRange = function (change, range, mark) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (range.isCollapsed) return;\n\n  var _options$normalize = options.normalize,\n      normalize = _options$normalize === undefined ? true : _options$normalize;\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n\n  var texts = document.getTextsAtRange(range);\n\n  texts.forEach(function (node) {\n    var key = node.key;\n\n    var index = 0;\n    var length = node.text.length;\n\n    if (key == startKey) index = startOffset;\n    if (key == endKey) length = endOffset;\n    if (key == startKey && key == endKey) length = endOffset - startOffset;\n\n    change.addMarkByKey(key, index, length, mark, { normalize: normalize });\n  });\n};\n\n/**\n * Add a list of `marks` to the characters at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Array<Mixed>} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.addMarksAtRange = function (change, range, marks) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  marks.forEach(function (mark) {\n    return change.addMarkAtRange(range, mark, options);\n  });\n};\n\n/**\n * Delete everything in a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteAtRange = function (change, range) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (range.isCollapsed) return;\n\n  // Snapshot the selection, which creates an extra undo save point, so that\n  // when you undo a delete, the expanded selection will be retained.\n  change.snapshotSelection();\n\n  var _options$normalize2 = options.normalize,\n      normalize = _options$normalize2 === undefined ? true : _options$normalize2;\n  var value = change.value;\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n  var document = value.document;\n\n  var isStartVoid = document.hasVoidParent(startKey);\n  var isEndVoid = document.hasVoidParent(endKey);\n  var startBlock = document.getClosestBlock(startKey);\n  var endBlock = document.getClosestBlock(endKey);\n\n  // Check if we have a \"hanging\" selection case where the even though the\n  // selection extends into the start of the end node, we actually want to\n  // ignore that for UX reasons.\n  var isHanging = startOffset == 0 && endOffset == 0 && isStartVoid == false && startKey == startBlock.getFirstText().key && endKey == endBlock.getFirstText().key;\n\n  // If it's a hanging selection, nudge it back to end in the previous text.\n  if (isHanging && isEndVoid) {\n    var prevText = document.getPreviousText(endKey);\n    endKey = prevText.key;\n    endOffset = prevText.text.length;\n    isEndVoid = document.hasVoidParent(endKey);\n  }\n\n  // If the start node is inside a void node, remove the void node and update\n  // the starting point to be right after it, continuously until the start point\n  // is not a void, or until the entire range is handled.\n  while (isStartVoid) {\n    var startVoid = document.getClosestVoid(startKey);\n    var nextText = document.getNextText(startKey);\n    change.removeNodeByKey(startVoid.key, { normalize: false });\n\n    // If the start and end keys are the same, we're done.\n    if (startKey == endKey) return;\n\n    // If there is no next text node, we're done.\n    if (!nextText) return;\n\n    // Continue...\n    document = change.value.document;\n    startKey = nextText.key;\n    startOffset = 0;\n    isStartVoid = document.hasVoidParent(startKey);\n  }\n\n  // If the end node is inside a void node, do the same thing but backwards. But\n  // we don't need any aborting checks because if we've gotten this far there\n  // must be a non-void node that will exit the loop.\n  while (isEndVoid) {\n    var endVoid = document.getClosestVoid(endKey);\n    var _prevText = document.getPreviousText(endKey);\n    change.removeNodeByKey(endVoid.key, { normalize: false });\n\n    // Continue...\n    document = change.value.document;\n    endKey = _prevText.key;\n    endOffset = _prevText.text.length;\n    isEndVoid = document.hasVoidParent(endKey);\n  }\n\n  // If the start and end key are the same, and it was a hanging selection, we\n  // can just remove the entire block.\n  if (startKey == endKey && isHanging) {\n    change.removeNodeByKey(startBlock.key, { normalize: normalize });\n    return;\n  }\n\n  // Otherwise, if it wasn't hanging, we're inside a single text node, so we can\n  // simply remove the text in the range.\n  else if (startKey == endKey) {\n      var index = startOffset;\n      var length = endOffset - startOffset;\n      change.removeTextByKey(startKey, index, length, { normalize: normalize });\n      return;\n    }\n\n    // Otherwise, we need to recursively remove text and nodes inside the start\n    // block after the start offset and inside the end block before the end\n    // offset. Then remove any blocks that are in between the start and end\n    // blocks. Then finally merge the start and end nodes.\n    else {\n        startBlock = document.getClosestBlock(startKey);\n        endBlock = document.getClosestBlock(endKey);\n        var startText = document.getNode(startKey);\n        var endText = document.getNode(endKey);\n        var startLength = startText.text.length - startOffset;\n        var endLength = endOffset;\n\n        var ancestor = document.getCommonAncestor(startKey, endKey);\n        var startChild = ancestor.getFurthestAncestor(startKey);\n        var endChild = ancestor.getFurthestAncestor(endKey);\n\n        var startParent = document.getParent(startBlock.key);\n        var startParentIndex = startParent.nodes.indexOf(startBlock);\n        var endParentIndex = startParent.nodes.indexOf(endBlock);\n\n        var child = void 0;\n\n        // Iterate through all of the nodes in the tree after the start text node\n        // but inside the end child, and remove them.\n        child = startText;\n\n        while (child.key != startChild.key) {\n          var parent = document.getParent(child.key);\n          var _index = parent.nodes.indexOf(child);\n          var afters = parent.nodes.slice(_index + 1);\n\n          afters.reverse().forEach(function (node) {\n            change.removeNodeByKey(node.key, { normalize: false });\n          });\n\n          child = parent;\n        }\n\n        // Remove all of the middle children.\n        var startChildIndex = ancestor.nodes.indexOf(startChild);\n        var endChildIndex = ancestor.nodes.indexOf(endChild);\n        var middles = ancestor.nodes.slice(startChildIndex + 1, endChildIndex);\n\n        middles.reverse().forEach(function (node) {\n          change.removeNodeByKey(node.key, { normalize: false });\n        });\n\n        // Remove the nodes before the end text node in the tree.\n        child = endText;\n\n        while (child.key != endChild.key) {\n          var _parent = document.getParent(child.key);\n          var _index2 = _parent.nodes.indexOf(child);\n          var befores = _parent.nodes.slice(0, _index2);\n\n          befores.reverse().forEach(function (node) {\n            change.removeNodeByKey(node.key, { normalize: false });\n          });\n\n          child = _parent;\n        }\n\n        // Remove any overlapping text content from the leaf text nodes.\n        if (startLength != 0) {\n          change.removeTextByKey(startKey, startOffset, startLength, { normalize: false });\n        }\n\n        if (endLength != 0) {\n          change.removeTextByKey(endKey, 0, endOffset, { normalize: false });\n        }\n\n        // If the start and end blocks aren't the same, move and merge the end block\n        // into the start block.\n        if (startBlock.key != endBlock.key) {\n          document = change.value.document;\n          var lonely = document.getFurthestOnlyChildAncestor(endBlock.key);\n\n          // Move the end block to be right after the start block.\n          if (endParentIndex != startParentIndex + 1) {\n            change.moveNodeByKey(endBlock.key, startParent.key, startParentIndex + 1);\n          }\n\n          // If the selection is hanging, just remove the start block, otherwise\n          // merge the end block into it.\n          if (isHanging) {\n            change.removeNodeByKey(startBlock.key, { normalize: false });\n          } else {\n            change.mergeNodeByKey(endBlock.key, { normalize: false });\n          }\n\n          // If nested empty blocks are left over above the end block, remove them.\n          if (lonely) {\n            change.removeNodeByKey(lonely.key, { normalize: false });\n          }\n        }\n\n        // If we should normalize, do it now after everything.\n        if (normalize) {\n          change.normalizeNodeByKey(ancestor.key);\n        }\n      }\n};\n\n/**\n * Delete backward until the character boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteCharBackwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  var text = startBlock.text;\n\n  var n = _string2.default.getCharOffsetBackward(text, o);\n  change.deleteBackwardAtRange(range, n, options);\n};\n\n/**\n * Delete backward until the line boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteLineBackwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var startWithVoidInline = startBlock.nodes.size > 1 && startBlock.nodes.get(0).text == '' && startBlock.nodes.get(1).kind == 'inline';\n\n  var o = offset + startOffset;\n\n  // If line starts with an void inline node, the text node inside this inline\n  // node disturbs the offset. Ignore this inline node and delete it afterwards.\n  if (startWithVoidInline) {\n    o -= 1;\n  }\n\n  change.deleteBackwardAtRange(range, o, options);\n\n  // Delete the remaining first inline node if needed.\n  if (startWithVoidInline) {\n    change.deleteBackward();\n  }\n};\n\n/**\n * Delete backward until the word boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteWordBackwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  var text = startBlock.text;\n\n  var n = _string2.default.getWordOffsetBackward(text, o);\n  change.deleteBackwardAtRange(range, n, options);\n};\n\n/**\n * Delete backward `n` characters at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Number} n (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteBackwardAtRange = function (change, range) {\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize3 = options.normalize,\n      normalize = _options$normalize3 === undefined ? true : _options$normalize3;\n  var value = change.value;\n  var document = value.document;\n  var _range = range,\n      startKey = _range.startKey,\n      focusOffset = _range.focusOffset;\n\n  // If the range is expanded, perform a regular delete instead.\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: normalize });\n    return;\n  }\n\n  var block = document.getClosestBlock(startKey);\n\n  // If the closest block is void, delete it.\n  if (block && block.isVoid) {\n    change.removeNodeByKey(block.key, { normalize: normalize });\n    return;\n  }\n\n  // If the closest is not void, but empty, remove it\n  if (block && !block.isVoid && block.isEmpty && document.nodes.size !== 1) {\n    change.removeNodeByKey(block.key, { normalize: normalize });\n    return;\n  }\n\n  // If the closest inline is void, delete it.\n  var inline = document.getClosestInline(startKey);\n  if (inline && inline.isVoid) {\n    change.removeNodeByKey(inline.key, { normalize: normalize });\n    return;\n  }\n\n  // If the range is at the start of the document, abort.\n  if (range.isAtStartOf(document)) {\n    return;\n  }\n\n  // If the range is at the start of the text node, we need to figure out what\n  // is behind it to know how to delete...\n  var text = document.getDescendant(startKey);\n  if (range.isAtStartOf(text)) {\n    var prev = document.getPreviousText(text.key);\n    var prevBlock = document.getClosestBlock(prev.key);\n    var prevInline = document.getClosestInline(prev.key);\n\n    // If the previous block is void, remove it.\n    if (prevBlock && prevBlock.isVoid) {\n      change.removeNodeByKey(prevBlock.key, { normalize: normalize });\n      return;\n    }\n\n    // If the previous inline is void, remove it.\n    if (prevInline && prevInline.isVoid) {\n      change.removeNodeByKey(prevInline.key, { normalize: normalize });\n      return;\n    }\n\n    // If we're deleting by one character and the previous text node is not\n    // inside the current block, we need to merge the two blocks together.\n    if (n == 1 && prevBlock != block) {\n      range = range.merge({\n        anchorKey: prev.key,\n        anchorOffset: prev.text.length\n      });\n\n      change.deleteAtRange(range, { normalize: normalize });\n      return;\n    }\n  }\n\n  // If the focus offset is farther than the number of characters to delete,\n  // just remove the characters backwards inside the current node.\n  if (n < focusOffset) {\n    range = range.merge({\n      focusOffset: focusOffset - n,\n      isBackward: true\n    });\n\n    change.deleteAtRange(range, { normalize: normalize });\n    return;\n  }\n\n  // Otherwise, we need to see how many nodes backwards to go.\n  var node = text;\n  var offset = 0;\n  var traversed = focusOffset;\n\n  while (n > traversed) {\n    node = document.getPreviousText(node.key);\n    var next = traversed + node.text.length;\n    if (n <= next) {\n      offset = next - n;\n      break;\n    } else {\n      traversed = next;\n    }\n  }\n\n  // If the focus node is inside a void, go up until right after it.\n  if (document.hasVoidParent(node.key)) {\n    var parent = document.getClosestVoid(node.key);\n    node = document.getNextText(parent.key);\n    offset = 0;\n  }\n\n  range = range.merge({\n    focusKey: node.key,\n    focusOffset: offset,\n    isBackward: true\n  });\n\n  change.deleteAtRange(range, { normalize: normalize });\n};\n\n/**\n * Delete forward until the character boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteCharForwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  var text = startBlock.text;\n\n  var n = _string2.default.getCharOffsetForward(text, o);\n  change.deleteForwardAtRange(range, n, options);\n};\n\n/**\n * Delete forward until the line boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteLineForwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  change.deleteForwardAtRange(range, o, options);\n};\n\n/**\n * Delete forward until the word boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteWordForwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  var text = startBlock.text;\n\n  var n = _string2.default.getWordOffsetForward(text, o);\n  change.deleteForwardAtRange(range, n, options);\n};\n\n/**\n * Delete forward `n` characters at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Number} n (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteForwardAtRange = function (change, range) {\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize4 = options.normalize,\n      normalize = _options$normalize4 === undefined ? true : _options$normalize4;\n  var value = change.value;\n  var document = value.document;\n  var _range2 = range,\n      startKey = _range2.startKey,\n      focusOffset = _range2.focusOffset;\n\n  // If the range is expanded, perform a regular delete instead.\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: normalize });\n    return;\n  }\n\n  var block = document.getClosestBlock(startKey);\n\n  // If the closest block is void, delete it.\n  if (block && block.isVoid) {\n    change.removeNodeByKey(block.key, { normalize: normalize });\n    return;\n  }\n\n  // If the closest is not void, but empty, remove it\n  if (block && !block.isVoid && block.isEmpty && document.nodes.size !== 1) {\n    var nextBlock = document.getNextBlock(block.key);\n    change.removeNodeByKey(block.key, { normalize: normalize });\n    if (nextBlock && nextBlock.key) {\n      change.moveToStartOf(nextBlock);\n    }\n    return;\n  }\n\n  // If the closest inline is void, delete it.\n  var inline = document.getClosestInline(startKey);\n  if (inline && inline.isVoid) {\n    change.removeNodeByKey(inline.key, { normalize: normalize });\n    return;\n  }\n\n  // If the range is at the start of the document, abort.\n  if (range.isAtEndOf(document)) {\n    return;\n  }\n\n  // If the range is at the start of the text node, we need to figure out what\n  // is behind it to know how to delete...\n  var text = document.getDescendant(startKey);\n  if (range.isAtEndOf(text)) {\n    var next = document.getNextText(text.key);\n    var _nextBlock = document.getClosestBlock(next.key);\n    var nextInline = document.getClosestInline(next.key);\n\n    // If the previous block is void, remove it.\n    if (_nextBlock && _nextBlock.isVoid) {\n      change.removeNodeByKey(_nextBlock.key, { normalize: normalize });\n      return;\n    }\n\n    // If the previous inline is void, remove it.\n    if (nextInline && nextInline.isVoid) {\n      change.removeNodeByKey(nextInline.key, { normalize: normalize });\n      return;\n    }\n\n    // If we're deleting by one character and the previous text node is not\n    // inside the current block, we need to merge the two blocks together.\n    if (n == 1 && _nextBlock != block) {\n      range = range.merge({\n        focusKey: next.key,\n        focusOffset: 0\n      });\n\n      change.deleteAtRange(range, { normalize: normalize });\n      return;\n    }\n  }\n\n  // If the remaining characters to the end of the node is greater than or equal\n  // to the number of characters to delete, just remove the characters forwards\n  // inside the current node.\n  if (n <= text.text.length - focusOffset) {\n    range = range.merge({\n      focusOffset: focusOffset + n\n    });\n\n    change.deleteAtRange(range, { normalize: normalize });\n    return;\n  }\n\n  // Otherwise, we need to see how many nodes forwards to go.\n  var node = text;\n  var offset = focusOffset;\n  var traversed = text.text.length - focusOffset;\n\n  while (n > traversed) {\n    node = document.getNextText(node.key);\n    var _next = traversed + node.text.length;\n    if (n <= _next) {\n      offset = n - traversed;\n      break;\n    } else {\n      traversed = _next;\n    }\n  }\n\n  // If the focus node is inside a void, go up until right before it.\n  if (document.hasVoidParent(node.key)) {\n    var parent = document.getClosestVoid(node.key);\n    node = document.getPreviousText(parent.key);\n    offset = node.text.length;\n  }\n\n  range = range.merge({\n    focusKey: node.key,\n    focusOffset: offset\n  });\n\n  change.deleteAtRange(range, { normalize: normalize });\n};\n\n/**\n * Insert a `block` node at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Block|String|Object} block\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertBlockAtRange = function (change, range, block) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  block = _block2.default.create(block);\n  var _options$normalize5 = options.normalize,\n      normalize = _options$normalize5 === undefined ? true : _options$normalize5;\n\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range);\n    range = range.collapseToStart();\n  }\n\n  var value = change.value;\n  var document = value.document;\n  var _range3 = range,\n      startKey = _range3.startKey,\n      startOffset = _range3.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var parent = document.getParent(startBlock.key);\n  var index = parent.nodes.indexOf(startBlock);\n\n  if (startBlock.isVoid) {\n    var extra = range.isAtEndOf(startBlock) ? 1 : 0;\n    change.insertNodeByKey(parent.key, index + extra, block, { normalize: normalize });\n  } else if (startBlock.isEmpty) {\n    change.insertNodeByKey(parent.key, index + 1, block, { normalize: normalize });\n  } else if (range.isAtStartOf(startBlock)) {\n    change.insertNodeByKey(parent.key, index, block, { normalize: normalize });\n  } else if (range.isAtEndOf(startBlock)) {\n    change.insertNodeByKey(parent.key, index + 1, block, { normalize: normalize });\n  } else {\n    change.splitDescendantsByKey(startBlock.key, startKey, startOffset, { normalize: false });\n    change.insertNodeByKey(parent.key, index + 1, block, { normalize: normalize });\n  }\n\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Insert a `fragment` at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Document} fragment\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertFragmentAtRange = function (change, range, fragment) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize6 = options.normalize,\n      normalize = _options$normalize6 === undefined ? true : _options$normalize6;\n\n  // If the range is expanded, delete it first.\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: false });\n    range = range.collapseToStart();\n  }\n\n  // If the fragment is empty, there's nothing to do after deleting.\n  if (!fragment.nodes.size) return;\n\n  // Regenerate the keys for all of the fragments nodes, so that they're\n  // guaranteed not to collide with the existing keys in the document. Otherwise\n  // they will be rengerated automatically and we won't have an easy way to\n  // reference them.\n  fragment = fragment.mapDescendants(function (child) {\n    return child.regenerateKey();\n  });\n\n  // Calculate a few things...\n  var _range4 = range,\n      startKey = _range4.startKey,\n      startOffset = _range4.startOffset;\n  var value = change.value;\n  var document = value.document;\n\n  var startText = document.getDescendant(startKey);\n  var startBlock = document.getClosestBlock(startText.key);\n  var startChild = startBlock.getFurthestAncestor(startText.key);\n  var isAtStart = range.isAtStartOf(startBlock);\n  var parent = document.getParent(startBlock.key);\n  var index = parent.nodes.indexOf(startBlock);\n  var blocks = fragment.getBlocks();\n  var firstBlock = blocks.first();\n  var lastBlock = blocks.last();\n\n  // If the fragment only contains a void block, use `insertBlock` instead.\n  if (firstBlock == lastBlock && firstBlock.isVoid) {\n    change.insertBlockAtRange(range, firstBlock, options);\n    return;\n  }\n\n  // If the first and last block aren't the same, we need to insert all of the\n  // nodes after the fragment's first block at the index.\n  if (firstBlock != lastBlock) {\n    var lonelyParent = fragment.getFurthest(firstBlock.key, function (p) {\n      return p.nodes.size == 1;\n    });\n    var lonelyChild = lonelyParent || firstBlock;\n    var startIndex = parent.nodes.indexOf(startBlock);\n    fragment = fragment.removeDescendant(lonelyChild.key);\n\n    fragment.nodes.forEach(function (node, i) {\n      var newIndex = startIndex + i + 1;\n      change.insertNodeByKey(parent.key, newIndex, node, { normalize: false });\n    });\n  }\n\n  // Check if we need to split the node.\n  if (startOffset != 0) {\n    change.splitDescendantsByKey(startChild.key, startKey, startOffset, { normalize: false });\n  }\n\n  // Update our variables with the new value.\n  document = change.value.document;\n  startText = document.getDescendant(startKey);\n  startBlock = document.getClosestBlock(startKey);\n  startChild = startBlock.getFurthestAncestor(startText.key);\n\n  // If the first and last block aren't the same, we need to move any of the\n  // starting block's children after the split into the last block of the\n  // fragment, which has already been inserted.\n  if (firstBlock != lastBlock) {\n    var nextChild = isAtStart ? startChild : startBlock.getNextSibling(startChild.key);\n    var nextNodes = nextChild ? startBlock.nodes.skipUntil(function (n) {\n      return n.key == nextChild.key;\n    }) : (0, _immutable.List)();\n    var lastIndex = lastBlock.nodes.size;\n\n    nextNodes.forEach(function (node, i) {\n      var newIndex = lastIndex + i;\n      change.moveNodeByKey(node.key, lastBlock.key, newIndex, { normalize: false });\n    });\n  }\n\n  // If the starting block is empty, we replace it entirely with the first block\n  // of the fragment, since this leads to a more expected behavior for the user.\n  if (startBlock.isEmpty) {\n    change.removeNodeByKey(startBlock.key, { normalize: false });\n    change.insertNodeByKey(parent.key, index, firstBlock, { normalize: false });\n  }\n\n  // Otherwise, we maintain the starting block, and insert all of the first\n  // block's inline nodes into it at the split point.\n  else {\n      var inlineChild = startBlock.getFurthestAncestor(startText.key);\n      var inlineIndex = startBlock.nodes.indexOf(inlineChild);\n\n      firstBlock.nodes.forEach(function (inline, i) {\n        var o = startOffset == 0 ? 0 : 1;\n        var newIndex = inlineIndex + i + o;\n        change.insertNodeByKey(startBlock.key, newIndex, inline, { normalize: false });\n      });\n    }\n\n  // Normalize if requested.\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Insert an `inline` node at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Inline|String|Object} inline\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertInlineAtRange = function (change, range, inline) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize7 = options.normalize,\n      normalize = _options$normalize7 === undefined ? true : _options$normalize7;\n\n  inline = _inline2.default.create(inline);\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: false });\n    range = range.collapseToStart();\n  }\n\n  var value = change.value;\n  var document = value.document;\n  var _range5 = range,\n      startKey = _range5.startKey,\n      startOffset = _range5.startOffset;\n\n  var parent = document.getParent(startKey);\n  var startText = document.assertDescendant(startKey);\n  var index = parent.nodes.indexOf(startText);\n\n  if (parent.isVoid) return;\n\n  change.splitNodeByKey(startKey, startOffset, { normalize: false });\n  change.insertNodeByKey(parent.key, index + 1, inline, { normalize: false });\n\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Insert `text` at a `range`, with optional `marks`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {String} text\n * @param {Set<Mark>} marks (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertTextAtRange = function (change, range, text, marks) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var normalize = options.normalize;\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var key = startKey;\n  var offset = startOffset;\n  var parent = document.getParent(startKey);\n\n  if (parent.isVoid) return;\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: false });\n\n    // Update range start after delete\n    key = change.value.startKey;\n    offset = change.value.startOffset;\n  }\n\n  // PERF: Unless specified, don't normalize if only inserting text.\n  if (normalize !== undefined) {\n    normalize = range.isExpanded;\n  }\n\n  change.insertTextByKey(key, offset, text, marks, { normalize: normalize });\n};\n\n/**\n * Remove an existing `mark` to the characters at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Mark|String} mark (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeMarkAtRange = function (change, range, mark) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (range.isCollapsed) return;\n\n  var _options$normalize8 = options.normalize,\n      normalize = _options$normalize8 === undefined ? true : _options$normalize8;\n  var value = change.value;\n  var document = value.document;\n\n  var texts = document.getTextsAtRange(range);\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n\n\n  texts.forEach(function (node) {\n    var key = node.key;\n\n    var index = 0;\n    var length = node.text.length;\n\n    if (key == startKey) index = startOffset;\n    if (key == endKey) length = endOffset;\n    if (key == startKey && key == endKey) length = endOffset - startOffset;\n\n    change.removeMarkByKey(key, index, length, mark, { normalize: normalize });\n  });\n};\n\n/**\n * Set the `properties` of block nodes in a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.setBlockAtRange = function (change, range, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize9 = options.normalize,\n      normalize = _options$normalize9 === undefined ? true : _options$normalize9;\n  var value = change.value;\n  var document = value.document;\n\n  var blocks = document.getBlocksAtRange(range);\n\n  blocks.forEach(function (block) {\n    change.setNodeByKey(block.key, properties, { normalize: normalize });\n  });\n};\n\n/**\n * Set the `properties` of inline nodes in a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.setInlineAtRange = function (change, range, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize10 = options.normalize,\n      normalize = _options$normalize10 === undefined ? true : _options$normalize10;\n  var value = change.value;\n  var document = value.document;\n\n  var inlines = document.getInlinesAtRange(range);\n\n  inlines.forEach(function (inline) {\n    change.setNodeByKey(inline.key, properties, { normalize: normalize });\n  });\n};\n\n/**\n * Split the block nodes at a `range`, to optional `height`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Number} height (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.splitBlockAtRange = function (change, range) {\n  var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize11 = options.normalize,\n      normalize = _options$normalize11 === undefined ? true : _options$normalize11;\n\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: normalize });\n    range = range.collapseToStart();\n  }\n\n  var _range6 = range,\n      startKey = _range6.startKey,\n      startOffset = _range6.startOffset;\n  var value = change.value;\n  var document = value.document;\n\n  var node = document.assertDescendant(startKey);\n  var parent = document.getClosestBlock(node.key);\n  var h = 0;\n\n  while (parent && parent.kind == 'block' && h < height) {\n    node = parent;\n    parent = document.getClosestBlock(parent.key);\n    h++;\n  }\n\n  change.splitDescendantsByKey(node.key, startKey, startOffset, { normalize: normalize });\n};\n\n/**\n * Split the inline nodes at a `range`, to optional `height`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Number} height (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.splitInlineAtRange = function (change, range) {\n  var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize12 = options.normalize,\n      normalize = _options$normalize12 === undefined ? true : _options$normalize12;\n\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: normalize });\n    range = range.collapseToStart();\n  }\n\n  var _range7 = range,\n      startKey = _range7.startKey,\n      startOffset = _range7.startOffset;\n  var value = change.value;\n  var document = value.document;\n\n  var node = document.assertDescendant(startKey);\n  var parent = document.getClosestInline(node.key);\n  var h = 0;\n\n  while (parent && parent.kind == 'inline' && h < height) {\n    node = parent;\n    parent = document.getClosestInline(parent.key);\n    h++;\n  }\n\n  change.splitDescendantsByKey(node.key, startKey, startOffset, { normalize: normalize });\n};\n\n/**\n * Add or remove a `mark` from the characters at `range`, depending on whether\n * it's already there.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Mixed} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.toggleMarkAtRange = function (change, range, mark) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (range.isCollapsed) return;\n\n  mark = _mark2.default.create(mark);\n\n  var _options$normalize13 = options.normalize,\n      normalize = _options$normalize13 === undefined ? true : _options$normalize13;\n  var value = change.value;\n  var document = value.document;\n\n  var marks = document.getActiveMarksAtRange(range);\n  var exists = marks.some(function (m) {\n    return m.equals(mark);\n  });\n\n  if (exists) {\n    change.removeMarkAtRange(range, mark, { normalize: normalize });\n  } else {\n    change.addMarkAtRange(range, mark, { normalize: normalize });\n  }\n};\n\n/**\n * Unwrap all of the block nodes in a `range` from a block with `properties`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {String|Object} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapBlockAtRange = function (change, range, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  properties = _node2.default.createProperties(properties);\n\n  var _options$normalize14 = options.normalize,\n      normalize = _options$normalize14 === undefined ? true : _options$normalize14;\n  var value = change.value;\n  var document = value.document;\n\n  var blocks = document.getBlocksAtRange(range);\n  var wrappers = blocks.map(function (block) {\n    return document.getClosest(block.key, function (parent) {\n      if (parent.kind != 'block') return false;\n      if (properties.type != null && parent.type != properties.type) return false;\n      if (properties.isVoid != null && parent.isVoid != properties.isVoid) return false;\n      if (properties.data != null && !parent.data.isSuperset(properties.data)) return false;\n      return true;\n    });\n  }).filter(function (exists) {\n    return exists;\n  }).toOrderedSet().toList();\n\n  wrappers.forEach(function (block) {\n    var first = block.nodes.first();\n    var last = block.nodes.last();\n    var parent = document.getParent(block.key);\n    var index = parent.nodes.indexOf(block);\n\n    var children = block.nodes.filter(function (child) {\n      return blocks.some(function (b) {\n        return child == b || child.hasDescendant(b.key);\n      });\n    });\n\n    var firstMatch = children.first();\n    var lastMatch = children.last();\n\n    if (first == firstMatch && last == lastMatch) {\n      block.nodes.forEach(function (child, i) {\n        change.moveNodeByKey(child.key, parent.key, index + i, { normalize: false });\n      });\n\n      change.removeNodeByKey(block.key, { normalize: false });\n    } else if (last == lastMatch) {\n      block.nodes.skipUntil(function (n) {\n        return n == firstMatch;\n      }).forEach(function (child, i) {\n        change.moveNodeByKey(child.key, parent.key, index + 1 + i, { normalize: false });\n      });\n    } else if (first == firstMatch) {\n      block.nodes.takeUntil(function (n) {\n        return n == lastMatch;\n      }).push(lastMatch).forEach(function (child, i) {\n        change.moveNodeByKey(child.key, parent.key, index + i, { normalize: false });\n      });\n    } else {\n      var firstText = firstMatch.getFirstText();\n      change.splitDescendantsByKey(block.key, firstText.key, 0, { normalize: false });\n      document = change.value.document;\n\n      children.forEach(function (child, i) {\n        if (i == 0) {\n          var extra = child;\n          child = document.getNextBlock(child.key);\n          change.removeNodeByKey(extra.key, { normalize: false });\n        }\n\n        change.moveNodeByKey(child.key, parent.key, index + 1 + i, { normalize: false });\n      });\n    }\n  });\n\n  // TODO: optmize to only normalize the right block\n  if (normalize) {\n    change.normalizeDocument();\n  }\n};\n\n/**\n * Unwrap the inline nodes in a `range` from an inline with `properties`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {String|Object} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapInlineAtRange = function (change, range, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  properties = _node2.default.createProperties(properties);\n\n  var _options$normalize15 = options.normalize,\n      normalize = _options$normalize15 === undefined ? true : _options$normalize15;\n  var value = change.value;\n  var document = value.document;\n\n  var texts = document.getTextsAtRange(range);\n  var inlines = texts.map(function (text) {\n    return document.getClosest(text.key, function (parent) {\n      if (parent.kind != 'inline') return false;\n      if (properties.type != null && parent.type != properties.type) return false;\n      if (properties.isVoid != null && parent.isVoid != properties.isVoid) return false;\n      if (properties.data != null && !parent.data.isSuperset(properties.data)) return false;\n      return true;\n    });\n  }).filter(function (exists) {\n    return exists;\n  }).toOrderedSet().toList();\n\n  inlines.forEach(function (inline) {\n    var parent = change.value.document.getParent(inline.key);\n    var index = parent.nodes.indexOf(inline);\n\n    inline.nodes.forEach(function (child, i) {\n      change.moveNodeByKey(child.key, parent.key, index + i, { normalize: false });\n    });\n  });\n\n  // TODO: optmize to only normalize the right block\n  if (normalize) {\n    change.normalizeDocument();\n  }\n};\n\n/**\n * Wrap all of the blocks in a `range` in a new `block`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Block|Object|String} block\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapBlockAtRange = function (change, range, block) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  block = _block2.default.create(block);\n  block = block.set('nodes', block.nodes.clear());\n\n  var _options$normalize16 = options.normalize,\n      normalize = _options$normalize16 === undefined ? true : _options$normalize16;\n  var value = change.value;\n  var document = value.document;\n\n\n  var blocks = document.getBlocksAtRange(range);\n  var firstblock = blocks.first();\n  var lastblock = blocks.last();\n  var parent = void 0,\n      siblings = void 0,\n      index = void 0;\n\n  // If there is only one block in the selection then we know the parent and\n  // siblings.\n  if (blocks.length === 1) {\n    parent = document.getParent(firstblock.key);\n    siblings = blocks;\n  }\n\n  // Determine closest shared parent to all blocks in selection.\n  else {\n      parent = document.getClosest(firstblock.key, function (p1) {\n        return !!document.getClosest(lastblock.key, function (p2) {\n          return p1 == p2;\n        });\n      });\n    }\n\n  // If no shared parent could be found then the parent is the document.\n  if (parent == null) parent = document;\n\n  // Create a list of direct children siblings of parent that fall in the\n  // selection.\n  if (siblings == null) {\n    var indexes = parent.nodes.reduce(function (ind, node, i) {\n      if (node == firstblock || node.hasDescendant(firstblock.key)) ind[0] = i;\n      if (node == lastblock || node.hasDescendant(lastblock.key)) ind[1] = i;\n      return ind;\n    }, []);\n\n    index = indexes[0];\n    siblings = parent.nodes.slice(indexes[0], indexes[1] + 1);\n  }\n\n  // Get the index to place the new wrapped node at.\n  if (index == null) {\n    index = parent.nodes.indexOf(siblings.first());\n  }\n\n  // Inject the new block node into the parent.\n  change.insertNodeByKey(parent.key, index, block, { normalize: false });\n\n  // Move the sibling nodes into the new block node.\n  siblings.forEach(function (node, i) {\n    change.moveNodeByKey(node.key, block.key, i, { normalize: false });\n  });\n\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Wrap the text and inlines in a `range` in a new `inline`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Inline|Object|String} inline\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapInlineAtRange = function (change, range, inline) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var value = change.value;\n  var document = value.document;\n  var _options$normalize17 = options.normalize,\n      normalize = _options$normalize17 === undefined ? true : _options$normalize17;\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n\n\n  if (range.isCollapsed) {\n    // Wrapping an inline void\n    var inlineParent = document.getClosestInline(startKey);\n    if (!inlineParent.isVoid) {\n      return;\n    }\n\n    return change.wrapInlineByKey(inlineParent.key, inline, options);\n  }\n\n  inline = _inline2.default.create(inline);\n  inline = inline.set('nodes', inline.nodes.clear());\n\n  var blocks = document.getBlocksAtRange(range);\n  var startBlock = document.getClosestBlock(startKey);\n  var endBlock = document.getClosestBlock(endKey);\n  var startChild = startBlock.getFurthestAncestor(startKey);\n  var endChild = endBlock.getFurthestAncestor(endKey);\n\n  change.splitDescendantsByKey(endChild.key, endKey, endOffset, { normalize: false });\n  change.splitDescendantsByKey(startChild.key, startKey, startOffset, { normalize: false });\n\n  document = change.value.document;\n  startBlock = document.getDescendant(startBlock.key);\n  endBlock = document.getDescendant(endBlock.key);\n  startChild = startBlock.getFurthestAncestor(startKey);\n  endChild = endBlock.getFurthestAncestor(endKey);\n  var startIndex = startBlock.nodes.indexOf(startChild);\n  var endIndex = endBlock.nodes.indexOf(endChild);\n\n  if (startBlock == endBlock) {\n    document = change.value.document;\n    startBlock = document.getClosestBlock(startKey);\n    startChild = startBlock.getFurthestAncestor(startKey);\n\n    var startInner = document.getNextSibling(startChild.key);\n    var startInnerIndex = startBlock.nodes.indexOf(startInner);\n    var endInner = startKey == endKey ? startInner : startBlock.getFurthestAncestor(endKey);\n    var inlines = startBlock.nodes.skipUntil(function (n) {\n      return n == startInner;\n    }).takeUntil(function (n) {\n      return n == endInner;\n    }).push(endInner);\n\n    var node = inline.regenerateKey();\n\n    change.insertNodeByKey(startBlock.key, startInnerIndex, node, { normalize: false });\n\n    inlines.forEach(function (child, i) {\n      change.moveNodeByKey(child.key, node.key, i, { normalize: false });\n    });\n\n    if (normalize) {\n      change.normalizeNodeByKey(startBlock.key);\n    }\n  } else {\n    var startInlines = startBlock.nodes.slice(startIndex + 1);\n    var endInlines = endBlock.nodes.slice(0, endIndex + 1);\n    var startNode = inline.regenerateKey();\n    var endNode = inline.regenerateKey();\n\n    change.insertNodeByKey(startBlock.key, startIndex + 1, startNode, { normalize: false });\n    change.insertNodeByKey(endBlock.key, endIndex, endNode, { normalize: false });\n\n    startInlines.forEach(function (child, i) {\n      change.moveNodeByKey(child.key, startNode.key, i, { normalize: false });\n    });\n\n    endInlines.forEach(function (child, i) {\n      change.moveNodeByKey(child.key, endNode.key, i, { normalize: false });\n    });\n\n    if (normalize) {\n      change.normalizeNodeByKey(startBlock.key).normalizeNodeByKey(endBlock.key);\n    }\n\n    blocks.slice(1, -1).forEach(function (block) {\n      var node = inline.regenerateKey();\n      change.insertNodeByKey(block.key, 0, node, { normalize: false });\n\n      block.nodes.forEach(function (child, i) {\n        change.moveNodeByKey(child.key, node.key, i, { normalize: false });\n      });\n\n      if (normalize) {\n        change.normalizeNodeByKey(block.key);\n      }\n    });\n  }\n};\n\n/**\n * Wrap the text in a `range` in a prefix/suffix.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {String} prefix\n * @param {String} suffix (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapTextAtRange = function (change, range, prefix) {\n  var suffix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : prefix;\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize18 = options.normalize,\n      normalize = _options$normalize18 === undefined ? true : _options$normalize18;\n  var startKey = range.startKey,\n      endKey = range.endKey;\n\n  var start = range.collapseToStart();\n  var end = range.collapseToEnd();\n\n  if (startKey == endKey) {\n    end = end.move(prefix.length);\n  }\n\n  change.insertTextAtRange(start, prefix, [], { normalize: normalize });\n  change.insertTextAtRange(end, suffix, [], { normalize: normalize });\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n/***/ }),\n/* 406 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _esrever = __webpack_require__(407);\n\n/**\n * Surrogate pair start and end points.\n *\n * @type {Number}\n */\n\nvar SURROGATE_START = 0xD800;\nvar SURROGATE_END = 0xDFFF;\n\n/**\n * A regex to match space characters.\n *\n * @type {RegExp}\n */\n\nvar SPACE = /\\s/;\n\n/**\n * A regex to match chameleon characters, that count as word characters as long\n * as they are inside of a word.\n *\n * @type {RegExp}\n */\n\nvar CHAMELEON = /['\\u2018\\u2019]/;\n\n/**\n * A regex that matches punctuation.\n *\n * @type {RegExp}\n */\n\nvar PUNCTUATION = /[\\u0021-\\u0023\\u0025-\\u002A\\u002C-\\u002F\\u003A\\u003B\\u003F\\u0040\\u005B-\\u005D\\u005F\\u007B\\u007D\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E3B\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/;\n\n/**\n * Is a character `code` in a surrogate character.\n *\n * @param {Number} code\n * @return {Boolean}\n */\n\nfunction isSurrogate(code) {\n  return SURROGATE_START <= code && code <= SURROGATE_END;\n}\n\n/**\n * Is a character a word character? Needs the `remaining` characters too.\n *\n * @param {String} char\n * @param {String|Void} remaining\n * @return {Boolean}\n */\n\nfunction isWord(char, remaining) {\n  if (SPACE.test(char)) return false;\n\n  // If it's a chameleon character, recurse to see if the next one is or not.\n  if (CHAMELEON.test(char)) {\n    var next = remaining.charAt(0);\n    var length = getCharLength(next);\n    next = remaining.slice(0, length);\n    var rest = remaining.slice(length);\n    if (isWord(next, rest)) return true;\n  }\n\n  if (PUNCTUATION.test(char)) return false;\n  return true;\n}\n\n/**\n * Get the length of a `character`.\n *\n * @param {String} char\n * @return {Number}\n */\n\nfunction getCharLength(char) {\n  return isSurrogate(char.charCodeAt(0)) ? 2 : 1;\n}\n\n/**\n * Get the offset to the end of the first character in `text`.\n *\n * @param {String} text\n * @return {Number}\n */\n\nfunction getCharOffset(text) {\n  var char = text.charAt(0);\n  return getCharLength(char);\n}\n\n/**\n * Get the offset to the end of the character before an `offset` in `text`.\n *\n * @param {String} text\n * @param {Number} offset\n * @return {Number}\n */\n\nfunction getCharOffsetBackward(text, offset) {\n  text = text.slice(0, offset);\n  text = (0, _esrever.reverse)(text);\n  return getCharOffset(text);\n}\n\n/**\n * Get the offset to the end of the character after an `offset` in `text`.\n *\n * @param {String} text\n * @param {Number} offset\n * @return {Number}\n */\n\nfunction getCharOffsetForward(text, offset) {\n  text = text.slice(offset);\n  return getCharOffset(text);\n}\n\n/**\n * Get the offset to the end of the first word in `text`.\n *\n * @param {String} text\n * @return {Number}\n */\n\nfunction getWordOffset(text) {\n  var length = 0;\n  var i = 0;\n  var started = false;\n  var char = void 0;\n\n  while (char = text.charAt(i)) {\n    var l = getCharLength(char);\n    char = text.slice(i, i + l);\n    var rest = text.slice(i + l);\n\n    if (isWord(char, rest)) {\n      started = true;\n      length += l;\n    } else if (!started) {\n      length += l;\n    } else {\n      break;\n    }\n\n    i += l;\n  }\n\n  return length;\n}\n\n/**\n * Get the offset to the end of the word before an `offset` in `text`.\n *\n * @param {String} text\n * @param {Number} offset\n * @return {Number}\n */\n\nfunction getWordOffsetBackward(text, offset) {\n  text = text.slice(0, offset);\n  text = (0, _esrever.reverse)(text);\n  var o = getWordOffset(text);\n  return o;\n}\n\n/**\n * Get the offset to the end of the word after an `offset` in `text`.\n *\n * @param {String} text\n * @param {Number} offset\n * @return {Number}\n */\n\nfunction getWordOffsetForward(text, offset) {\n  text = text.slice(offset);\n  var o = getWordOffset(text);\n  return o;\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = {\n  getCharOffsetForward: getCharOffsetForward,\n  getCharOffsetBackward: getCharOffsetBackward,\n  getWordOffsetBackward: getWordOffsetBackward,\n  getWordOffsetForward: getWordOffsetForward\n};\n\n/***/ }),\n/* 407 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/esrever v0.2.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar regexSymbolWithCombiningMarks = /([\\0-\\u02FF\\u0370-\\u1AAF\\u1B00-\\u1DBF\\u1E00-\\u20CF\\u2100-\\uD7FF\\uE000-\\uFE1F\\uFE30-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])([\\u0300-\\u036F\\u1AB0-\\u1AFF\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]+)/g;\n\tvar regexSurrogatePair = /([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])/g;\n\n\tvar reverse = function(string) {\n\t\t// Step 1: deal with combining marks and astral symbols (surrogate pairs)\n\t\tstring = string\n\t\t\t// Swap symbols with their combining marks so the combining marks go first\n\t\t\t.replace(regexSymbolWithCombiningMarks, function($0, $1, $2) {\n\t\t\t\t// Reverse the combining marks so they will end up in the same order\n\t\t\t\t// later on (after another round of reversing)\n\t\t\t\treturn reverse($2) + $1;\n\t\t\t})\n\t\t\t// Swap high and low surrogates so the low surrogates go first\n\t\t\t.replace(regexSurrogatePair, '$2$1');\n\t\t// Step 2: reverse the code units in the string\n\t\tvar result = '';\n\t\tvar index = string.length;\n\t\twhile (index--) {\n\t\t\tresult += string.charAt(index);\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar esrever = {\n\t\t'version': '0.2.0',\n\t\t'reverse': reverse\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn esrever;\n\t\t}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = esrever;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in esrever) {\n\t\t\t\tesrever.hasOwnProperty(key) && (freeExports[key] = esrever[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.esrever = esrever;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(301)(module), __webpack_require__(25)))\n\n/***/ }),\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _block = __webpack_require__(285);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _inline = __webpack_require__(286);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _mark = __webpack_require__(275);\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _node = __webpack_require__(282);\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Add mark to text at `offset` and `length` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {Number} length\n * @param {Mixed} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.addMarkByKey = function (change, key, offset, length, mark) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n  mark = _mark2.default.create(mark);\n  var _options$normalize = options.normalize,\n      normalize = _options$normalize === undefined ? true : _options$normalize;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n  var leaves = node.getLeaves();\n\n  var operations = [];\n  var bx = offset;\n  var by = offset + length;\n  var o = 0;\n\n  leaves.forEach(function (leaf) {\n    var ax = o;\n    var ay = ax + leaf.text.length;\n\n    o += leaf.text.length;\n\n    // If the leaf doesn't overlap with the operation, continue on.\n    if (ay < bx || by < ax) return;\n\n    // If the leaf already has the mark, continue on.\n    if (leaf.marks.has(mark)) return;\n\n    // Otherwise, determine which offset and characters overlap.\n    var start = Math.max(ax, bx);\n    var end = Math.min(ay, by);\n\n    operations.push({\n      type: 'add_mark',\n      value: value,\n      path: path,\n      offset: start,\n      length: end - start,\n      mark: mark\n    });\n  });\n\n  change.applyOperations(operations);\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Insert a `fragment` at `index` in a node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} index\n * @param {Fragment} fragment\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertFragmentByKey = function (change, key, index, fragment) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize2 = options.normalize,\n      normalize = _options$normalize2 === undefined ? true : _options$normalize2;\n\n\n  fragment.nodes.forEach(function (node, i) {\n    change.insertNodeByKey(key, index + i, node);\n  });\n\n  if (normalize) {\n    change.normalizeNodeByKey(key);\n  }\n};\n\n/**\n * Insert a `node` at `index` in a node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} index\n * @param {Node} node\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertNodeByKey = function (change, key, index, node) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize3 = options.normalize,\n      normalize = _options$normalize3 === undefined ? true : _options$normalize3;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n\n  change.applyOperation({\n    type: 'insert_node',\n    value: value,\n    path: [].concat(_toConsumableArray(path), [index]),\n    node: node\n  });\n\n  if (normalize) {\n    change.normalizeNodeByKey(key);\n  }\n};\n\n/**\n * Insert `text` at `offset` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {String} text\n * @param {Set<Mark>} marks (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertTextByKey = function (change, key, offset, text, marks) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var _options$normalize4 = options.normalize,\n      normalize = _options$normalize4 === undefined ? true : _options$normalize4;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n  marks = marks || node.getMarksAtIndex(offset);\n\n  change.applyOperation({\n    type: 'insert_text',\n    value: value,\n    path: path,\n    offset: offset,\n    text: text,\n    marks: marks\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Merge a node by `key` with the previous node.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.mergeNodeByKey = function (change, key) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$normalize5 = options.normalize,\n      normalize = _options$normalize5 === undefined ? true : _options$normalize5;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var previous = document.getPreviousSibling(key);\n\n  if (!previous) {\n    throw new Error('Unable to merge node with key \"' + key + '\", no previous key.');\n  }\n\n  var position = previous.kind == 'text' ? previous.text.length : previous.nodes.size;\n\n  change.applyOperation({\n    type: 'merge_node',\n    value: value,\n    path: path,\n    position: position,\n    target: null\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Move a node by `key` to a new parent by `newKey` and `index`.\n * `newKey` is the key of the container (it can be the document itself)\n *\n * @param {Change} change\n * @param {String} key\n * @param {String} newKey\n * @param {Number} index\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.moveNodeByKey = function (change, key, newKey, newIndex) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize6 = options.normalize,\n      normalize = _options$normalize6 === undefined ? true : _options$normalize6;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var newPath = document.getPath(newKey);\n\n  change.applyOperation({\n    type: 'move_node',\n    value: value,\n    path: path,\n    newPath: [].concat(_toConsumableArray(newPath), [newIndex])\n  });\n\n  if (normalize) {\n    var parent = document.getCommonAncestor(key, newKey);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Remove mark from text at `offset` and `length` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {Number} length\n * @param {Mark} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeMarkByKey = function (change, key, offset, length, mark) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n  mark = _mark2.default.create(mark);\n  var _options$normalize7 = options.normalize,\n      normalize = _options$normalize7 === undefined ? true : _options$normalize7;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n  var leaves = node.getLeaves();\n\n  var operations = [];\n  var bx = offset;\n  var by = offset + length;\n  var o = 0;\n\n  leaves.forEach(function (leaf) {\n    var ax = o;\n    var ay = ax + leaf.text.length;\n\n    o += leaf.text.length;\n\n    // If the leaf doesn't overlap with the operation, continue on.\n    if (ay < bx || by < ax) return;\n\n    // If the leaf already has the mark, continue on.\n    if (!leaf.marks.has(mark)) return;\n\n    // Otherwise, determine which offset and characters overlap.\n    var start = Math.max(ax, bx);\n    var end = Math.min(ay, by);\n\n    operations.push({\n      type: 'remove_mark',\n      value: value,\n      path: path,\n      offset: start,\n      length: end - start,\n      mark: mark\n    });\n  });\n\n  change.applyOperations(operations);\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Remove all `marks` from node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeAllMarksByKey = function (change, key) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var state = change.state;\n  var document = state.document;\n\n  var node = document.getNode(key);\n  var texts = node.kind === 'text' ? [node] : node.getTextsAsArray();\n\n  texts.forEach(function (text) {\n    text.getMarksAsArray().forEach(function (mark) {\n      change.removeMarkByKey(text.key, 0, text.text.length, mark, options);\n    });\n  });\n};\n\n/**\n * Remove a node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeNodeByKey = function (change, key) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$normalize8 = options.normalize,\n      normalize = _options$normalize8 === undefined ? true : _options$normalize8;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n\n  change.applyOperation({\n    type: 'remove_node',\n    value: value,\n    path: path,\n    node: node\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Remove text at `offset` and `length` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {Number} length\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeTextByKey = function (change, key, offset, length) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize9 = options.normalize,\n      normalize = _options$normalize9 === undefined ? true : _options$normalize9;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n  var leaves = node.getLeaves();\n  var text = node.text;\n\n\n  var removals = [];\n  var bx = offset;\n  var by = offset + length;\n  var o = 0;\n\n  leaves.forEach(function (leaf) {\n    var ax = o;\n    var ay = ax + leaf.text.length;\n\n    o += leaf.text.length;\n\n    // If the leaf doesn't overlap with the removal, continue on.\n    if (ay < bx || by < ax) return;\n\n    // Otherwise, determine which offset and characters overlap.\n    var start = Math.max(ax, bx);\n    var end = Math.min(ay, by);\n    var string = text.slice(start, end);\n\n    removals.push({\n      type: 'remove_text',\n      value: value,\n      path: path,\n      offset: start,\n      text: string,\n      marks: leaf.marks\n    });\n  });\n\n  // Apply in reverse order, so subsequent removals don't impact previous ones.\n  change.applyOperations(removals.reverse());\n\n  if (normalize) {\n    var block = document.getClosestBlock(key);\n    change.normalizeNodeByKey(block.key);\n  }\n};\n\n/**\n`* Replace a `node` with another `node`\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object|Node} node\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.replaceNodeByKey = function (change, key, newNode) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  newNode = _node2.default.create(newNode);\n  var _options$normalize10 = options.normalize,\n      normalize = _options$normalize10 === undefined ? true : _options$normalize10;\n  var value = change.value;\n  var document = value.document;\n\n  var node = document.getNode(key);\n  var parent = document.getParent(key);\n  var index = parent.nodes.indexOf(node);\n  change.removeNodeByKey(key, { normalize: false });\n  change.insertNodeByKey(parent.key, index, newNode, options);\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Set `properties` on mark on text at `offset` and `length` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {Number} length\n * @param {Mark} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.setMarkByKey = function (change, key, offset, length, mark, properties) {\n  var options = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n\n  mark = _mark2.default.create(mark);\n  properties = _mark2.default.createProperties(properties);\n  var _options$normalize11 = options.normalize,\n      normalize = _options$normalize11 === undefined ? true : _options$normalize11;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n\n  change.applyOperation({\n    type: 'set_mark',\n    value: value,\n    path: path,\n    offset: offset,\n    length: length,\n    mark: mark,\n    properties: properties\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Set `properties` on a node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.setNodeByKey = function (change, key, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  properties = _node2.default.createProperties(properties);\n  var _options$normalize12 = options.normalize,\n      normalize = _options$normalize12 === undefined ? true : _options$normalize12;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n\n  change.applyOperation({\n    type: 'set_node',\n    value: value,\n    path: path,\n    node: node,\n    properties: properties\n  });\n\n  if (normalize) {\n    change.normalizeNodeByKey(node.key);\n  }\n};\n\n/**\n * Split a node by `key` at `position`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} position\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.splitNodeByKey = function (change, key, position) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize13 = options.normalize,\n      normalize = _options$normalize13 === undefined ? true : _options$normalize13,\n      _options$target = options.target,\n      target = _options$target === undefined ? null : _options$target;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n\n  change.applyOperation({\n    type: 'split_node',\n    value: value,\n    path: path,\n    position: position,\n    target: target\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Split a node deeply down the tree by `key`, `textKey` and `textOffset`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} position\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.splitDescendantsByKey = function (change, key, textKey, textOffset) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  if (key == textKey) {\n    change.splitNodeByKey(textKey, textOffset, options);\n    return;\n  }\n\n  var _options$normalize14 = options.normalize,\n      normalize = _options$normalize14 === undefined ? true : _options$normalize14;\n  var value = change.value;\n  var document = value.document;\n\n\n  var text = document.getNode(textKey);\n  var ancestors = document.getAncestors(textKey);\n  var nodes = ancestors.skipUntil(function (a) {\n    return a.key == key;\n  }).reverse().unshift(text);\n  var previous = void 0;\n  var index = void 0;\n\n  nodes.forEach(function (node) {\n    var prevIndex = index == null ? null : index;\n    index = previous ? node.nodes.indexOf(previous) + 1 : textOffset;\n    previous = node;\n    change.splitNodeByKey(node.key, index, { normalize: false, target: prevIndex });\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Unwrap content from an inline parent with `properties`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapInlineByKey = function (change, key, properties, options) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  var node = document.assertDescendant(key);\n  var first = node.getFirstText();\n  var last = node.getLastText();\n  var range = selection.moveToRangeOf(first, last);\n  change.unwrapInlineAtRange(range, properties, options);\n};\n\n/**\n * Unwrap content from a block parent with `properties`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapBlockByKey = function (change, key, properties, options) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  var node = document.assertDescendant(key);\n  var first = node.getFirstText();\n  var last = node.getLastText();\n  var range = selection.moveToRangeOf(first, last);\n  change.unwrapBlockAtRange(range, properties, options);\n};\n\n/**\n * Unwrap a single node from its parent.\n *\n * If the node is surrounded with siblings, its parent will be\n * split. If the node is the only child, the parent is removed, and\n * simply replaced by the node itself.  Cannot unwrap a root node.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapNodeByKey = function (change, key) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$normalize15 = options.normalize,\n      normalize = _options$normalize15 === undefined ? true : _options$normalize15;\n  var value = change.value;\n  var document = value.document;\n\n  var parent = document.getParent(key);\n  var node = parent.getChild(key);\n\n  var index = parent.nodes.indexOf(node);\n  var isFirst = index === 0;\n  var isLast = index === parent.nodes.size - 1;\n\n  var parentParent = document.getParent(parent.key);\n  var parentIndex = parentParent.nodes.indexOf(parent);\n\n  if (parent.nodes.size === 1) {\n    change.moveNodeByKey(key, parentParent.key, parentIndex, { normalize: false });\n    change.removeNodeByKey(parent.key, options);\n  } else if (isFirst) {\n    // Just move the node before its parent.\n    change.moveNodeByKey(key, parentParent.key, parentIndex, options);\n  } else if (isLast) {\n    // Just move the node after its parent.\n    change.moveNodeByKey(key, parentParent.key, parentIndex + 1, options);\n  } else {\n    // Split the parent.\n    change.splitNodeByKey(parent.key, index, { normalize: false });\n\n    // Extract the node in between the splitted parent.\n    change.moveNodeByKey(key, parentParent.key, parentIndex + 1, { normalize: false });\n\n    if (normalize) {\n      change.normalizeNodeByKey(parentParent.key);\n    }\n  }\n};\n\n/**\n * Wrap a node in a block with `properties`.\n *\n * @param {Change} change\n * @param {String} key The node to wrap\n * @param {Block|Object|String} block The wrapping block (its children are discarded)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapBlockByKey = function (change, key, block, options) {\n  block = _block2.default.create(block);\n  block = block.set('nodes', block.nodes.clear());\n\n  var document = change.value.document;\n\n  var node = document.assertDescendant(key);\n  var parent = document.getParent(node.key);\n  var index = parent.nodes.indexOf(node);\n\n  change.insertNodeByKey(parent.key, index, block, { normalize: false });\n  change.moveNodeByKey(node.key, block.key, 0, options);\n};\n\n/**\n * Wrap a node in an inline with `properties`.\n *\n * @param {Change} change\n * @param {String} key The node to wrap\n * @param {Block|Object|String} inline The wrapping inline (its children are discarded)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapInlineByKey = function (change, key, inline, options) {\n  inline = _inline2.default.create(inline);\n  inline = inline.set('nodes', inline.nodes.clear());\n\n  var document = change.value.document;\n\n  var node = document.assertDescendant(key);\n  var parent = document.getParent(node.key);\n  var index = parent.nodes.indexOf(node);\n\n  change.insertNodeByKey(parent.key, index, inline, { normalize: false });\n  change.moveNodeByKey(node.key, inline.key, 0, options);\n};\n\n/**\n * Wrap a node by `key` with `parent`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Node|Object} parent\n * @param {Object} options\n */\n\nChanges.wrapNodeByKey = function (change, key, parent) {\n  parent = _node2.default.create(parent);\n  parent = parent.set('nodes', parent.nodes.clear());\n\n  if (parent.kind == 'block') {\n    change.wrapBlockByKey(key, parent);\n    return;\n  }\n\n  if (parent.kind == 'inline') {\n    change.wrapInlineByKey(key, parent);\n    return;\n  }\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _invert = __webpack_require__(348);\n\nvar _invert2 = _interopRequireDefault(_invert);\n\nvar _omit = __webpack_require__(498);\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Redo to the next value in the history.\n *\n * @param {Change} change\n */\n\nChanges.redo = function (change) {\n  var value = change.value;\n  var _value = value,\n      history = _value.history;\n\n  if (!history) return;\n\n  var _history = history,\n      undos = _history.undos,\n      redos = _history.redos;\n\n  var next = redos.peek();\n  if (!next) return;\n\n  // Shift the next value into the undo stack.\n  redos = redos.pop();\n  undos = undos.push(next);\n\n  // Replay the next operations.\n  next.forEach(function (op) {\n    var _op = op,\n        type = _op.type,\n        properties = _op.properties;\n\n    // When the operation mutates the selection, omit its `isFocused` value to\n    // prevent the editor focus from changing during redoing.\n\n    if (type == 'set_selection') {\n      op = op.set('properties', (0, _omit2.default)(properties, 'isFocused'));\n    }\n\n    change.applyOperation(op, { save: false });\n  });\n\n  // Update the history.\n  value = change.value;\n  history = history.set('undos', undos).set('redos', redos);\n  value = value.set('history', history);\n  change.value = value;\n};\n\n/**\n * Undo the previous operations in the history.\n *\n * @param {Change} change\n */\n\nChanges.undo = function (change) {\n  var value = change.value;\n  var _value2 = value,\n      history = _value2.history;\n\n  if (!history) return;\n\n  var _history2 = history,\n      undos = _history2.undos,\n      redos = _history2.redos;\n\n  var previous = undos.peek();\n  if (!previous) return;\n\n  // Shift the previous operations into the redo stack.\n  undos = undos.pop();\n  redos = redos.push(previous);\n\n  // Replay the inverse of the previous operations.\n  previous.slice().reverse().map(_invert2.default).forEach(function (inverse) {\n    var _inverse = inverse,\n        type = _inverse.type,\n        properties = _inverse.properties;\n\n    // When the operation mutates the selection, omit its `isFocused` value to\n    // prevent the editor focus from changing during undoing.\n\n    if (type == 'set_selection') {\n      inverse = inverse.set('properties', (0, _omit2.default)(properties, 'isFocused'));\n    }\n\n    change.applyOperation(inverse, { save: false });\n  });\n\n  // Update the history.\n  value = change.value;\n  history = history.set('undos', undos).set('redos', redos);\n  value = value.set('history', history);\n  change.value = value;\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(411);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports) {\n\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar basePickBy = __webpack_require__(413),\n    hasIn = __webpack_require__(444);\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGet = __webpack_require__(349),\n    baseSet = __webpack_require__(443),\n    castPath = __webpack_require__(288);\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = __webpack_require__(271),\n    isSymbol = __webpack_require__(326);\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(290);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar memoizeCapped = __webpack_require__(418);\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar memoize = __webpack_require__(419);\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MapCache = __webpack_require__(327);\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Hash = __webpack_require__(421),\n    ListCache = __webpack_require__(303),\n    Map = __webpack_require__(329);\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar hashClear = __webpack_require__(422),\n    hashDelete = __webpack_require__(427),\n    hashGet = __webpack_require__(428),\n    hashHas = __webpack_require__(429),\n    hashSet = __webpack_require__(430);\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(302);\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isFunction = __webpack_require__(328),\n    isMasked = __webpack_require__(424),\n    isObject = __webpack_require__(274),\n    toSource = __webpack_require__(351);\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar coreJsData = __webpack_require__(425);\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar root = __webpack_require__(272);\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports) {\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports) {\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(302);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(302);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar nativeCreate = __webpack_require__(302);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports) {\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(304);\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(304);\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(304);\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assocIndexOf = __webpack_require__(304);\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getMapData = __webpack_require__(305);\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getMapData = __webpack_require__(305);\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getMapData = __webpack_require__(305);\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getMapData = __webpack_require__(305);\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseToString = __webpack_require__(442);\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(290),\n    arrayMap = __webpack_require__(352),\n    isArray = __webpack_require__(271),\n    isSymbol = __webpack_require__(326);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assignValue = __webpack_require__(330),\n    castPath = __webpack_require__(288),\n    isIndex = __webpack_require__(307),\n    isObject = __webpack_require__(274),\n    toKey = __webpack_require__(306);\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseHasIn = __webpack_require__(445),\n    hasPath = __webpack_require__(446);\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar castPath = __webpack_require__(288),\n    isArguments = __webpack_require__(308),\n    isArray = __webpack_require__(271),\n    isIndex = __webpack_require__(307),\n    isLength = __webpack_require__(332),\n    toKey = __webpack_require__(306);\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetTag = __webpack_require__(289),\n    isObjectLike = __webpack_require__(273);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseFlatten = __webpack_require__(449);\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayPush = __webpack_require__(333),\n    isFlattenable = __webpack_require__(450);\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(290),\n    isArguments = __webpack_require__(308),\n    isArray = __webpack_require__(271);\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports) {\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar constant = __webpack_require__(453),\n    defineProperty = __webpack_require__(353),\n    identity = __webpack_require__(357);\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports) {\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports) {\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Slate operation attributes.\n *\n * @type {Array}\n */\n\nvar OPERATION_ATTRIBUTES = {\n  add_mark: ['value', 'path', 'offset', 'length', 'mark'],\n  insert_node: ['value', 'path', 'node'],\n  insert_text: ['value', 'path', 'offset', 'text', 'marks'],\n  merge_node: ['value', 'path', 'position', 'target'],\n  move_node: ['value', 'path', 'newPath'],\n  remove_mark: ['value', 'path', 'offset', 'length', 'mark'],\n  remove_node: ['value', 'path', 'node'],\n  remove_text: ['value', 'path', 'offset', 'text', 'marks'],\n  set_mark: ['value', 'path', 'offset', 'length', 'mark', 'properties'],\n  set_node: ['value', 'path', 'node', 'properties'],\n  set_selection: ['value', 'selection', 'properties'],\n  set_value: ['value', 'properties'],\n  split_node: ['value', 'path', 'position', 'target']\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = OPERATION_ATTRIBUTES;\n\n/***/ }),\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsEqual = __webpack_require__(457);\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n\n\n/***/ }),\n/* 457 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsEqualDeep = __webpack_require__(458),\n    isObjectLike = __webpack_require__(273);\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Stack = __webpack_require__(335),\n    equalArrays = __webpack_require__(359),\n    equalByTag = __webpack_require__(469),\n    equalObjects = __webpack_require__(472),\n    getTag = __webpack_require__(312),\n    isArray = __webpack_require__(271),\n    isBuffer = __webpack_require__(310),\n    isTypedArray = __webpack_require__(338);\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ListCache = __webpack_require__(303);\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports) {\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports) {\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ListCache = __webpack_require__(303),\n    Map = __webpack_require__(329),\n    MapCache = __webpack_require__(327);\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MapCache = __webpack_require__(327),\n    setCacheAdd = __webpack_require__(465),\n    setCacheHas = __webpack_require__(466);\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports) {\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports) {\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(290),\n    Uint8Array = __webpack_require__(360),\n    eq = __webpack_require__(297),\n    equalArrays = __webpack_require__(359),\n    mapToArray = __webpack_require__(470),\n    setToArray = __webpack_require__(471);\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports) {\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports) {\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getAllKeys = __webpack_require__(361);\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports) {\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGetTag = __webpack_require__(289),\n    isLength = __webpack_require__(332),\n    isObjectLike = __webpack_require__(273);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isPrototype = __webpack_require__(341),\n    nativeKeys = __webpack_require__(478);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar overArg = __webpack_require__(365);\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(283),\n    root = __webpack_require__(272);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(283),\n    root = __webpack_require__(272);\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(283),\n    root = __webpack_require__(272);\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getNative = __webpack_require__(283),\n    root = __webpack_require__(272);\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseMerge = __webpack_require__(484),\n    createAssigner = __webpack_require__(493);\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nmodule.exports = mergeWith;\n\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Stack = __webpack_require__(335),\n    assignMergeValue = __webpack_require__(367),\n    baseFor = __webpack_require__(485),\n    baseMergeDeep = __webpack_require__(487),\n    isObject = __webpack_require__(274),\n    keysIn = __webpack_require__(313),\n    safeGet = __webpack_require__(373);\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createBaseFor = __webpack_require__(486);\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports) {\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar assignMergeValue = __webpack_require__(367),\n    cloneBuffer = __webpack_require__(368),\n    cloneTypedArray = __webpack_require__(369),\n    copyArray = __webpack_require__(370),\n    initCloneObject = __webpack_require__(371),\n    isArguments = __webpack_require__(308),\n    isArray = __webpack_require__(271),\n    isArrayLikeObject = __webpack_require__(489),\n    isBuffer = __webpack_require__(310),\n    isFunction = __webpack_require__(328),\n    isObject = __webpack_require__(274),\n    isPlainObject = __webpack_require__(372),\n    isTypedArray = __webpack_require__(338),\n    safeGet = __webpack_require__(373),\n    toPlainObject = __webpack_require__(490);\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(274);\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n\n\n/***/ }),\n/* 489 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(311),\n    isObjectLike = __webpack_require__(273);\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n/***/ }),\n/* 490 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar copyObject = __webpack_require__(291),\n    keysIn = __webpack_require__(313);\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n\n\n/***/ }),\n/* 491 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(274),\n    isPrototype = __webpack_require__(341),\n    nativeKeysIn = __webpack_require__(492);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n\n\n/***/ }),\n/* 492 */\n/***/ (function(module, exports) {\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n\n\n/***/ }),\n/* 493 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseRest = __webpack_require__(494),\n    isIterateeCall = __webpack_require__(495);\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n\n/***/ }),\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar identity = __webpack_require__(357),\n    overRest = __webpack_require__(355),\n    setToString = __webpack_require__(356);\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eq = __webpack_require__(297),\n    isArrayLike = __webpack_require__(311),\n    isIndex = __webpack_require__(307),\n    isObject = __webpack_require__(274);\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _immutable = __webpack_require__(261);\n\nvar _text = __webpack_require__(323);\n\nvar _text2 = _interopRequireDefault(_text);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Define the core schema rules, order-sensitive.\n *\n * @type {Array}\n */\n\nvar CORE_SCHEMA_RULES = [\n\n/**\n * Only allow block nodes in documents.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'document') return;\n    var invalids = node.nodes.filter(function (n) {\n      return n.kind != 'block';\n    });\n    if (!invalids.size) return;\n\n    return function (change) {\n      invalids.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Only allow block nodes or inline and text nodes in blocks.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block') return;\n    var first = node.nodes.first();\n    if (!first) return;\n    var kinds = first.kind == 'block' ? ['block'] : ['inline', 'text'];\n    var invalids = node.nodes.filter(function (n) {\n      return !kinds.includes(n.kind);\n    });\n    if (!invalids.size) return;\n\n    return function (change) {\n      invalids.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Only allow inline and text nodes in inlines.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'inline') return;\n    var invalids = node.nodes.filter(function (n) {\n      return n.kind != 'inline' && n.kind != 'text';\n    });\n    if (!invalids.size) return;\n\n    return function (change) {\n      invalids.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Ensure that block and inline nodes have at least one text child.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block' && node.kind != 'inline') return;\n    if (node.nodes.size > 0) return;\n\n    return function (change) {\n      var text = _text2.default.create();\n      change.insertNodeByKey(node.key, 0, text, { normalize: false });\n    };\n  }\n},\n\n/**\n * Ensure that void nodes contain a text node with a single space of text.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (!node.isVoid) return;\n    if (node.kind != 'block' && node.kind != 'inline') return;\n    if (node.text == ' ' && node.nodes.size == 1) return;\n\n    return function (change) {\n      var text = _text2.default.create(' ');\n      var index = node.nodes.size;\n\n      change.insertNodeByKey(node.key, index, text, { normalize: false });\n\n      node.nodes.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Ensure that inline nodes are never empty.\n *\n * This rule is applied to all blocks, because when they contain an empty\n * inline, we need to remove the inline from that parent block. If `validate`\n * was to be memoized, it should be against the parent node, not the inline\n * themselves.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block') return;\n    var invalids = node.nodes.filter(function (n) {\n      return n.kind == 'inline' && n.text == '';\n    });\n    if (!invalids.size) return;\n\n    return function (change) {\n      // If all of the block's nodes are invalid, insert an empty text node so\n      // that the selection will be preserved when they are all removed.\n      if (node.nodes.size == invalids.size) {\n        var text = _text2.default.create();\n        change.insertNodeByKey(node.key, 1, text, { normalize: false });\n      }\n\n      invalids.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Ensure that inline void nodes are surrounded by text nodes, by adding extra\n * blank text nodes if necessary.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block' && node.kind != 'inline') return;\n\n    var invalids = node.nodes.reduce(function (list, child, index) {\n      if (child.kind !== 'inline') return list;\n\n      var prev = index > 0 ? node.nodes.get(index - 1) : null;\n      var next = node.nodes.get(index + 1);\n      // We don't test if \"prev\" is inline, since it has already been processed in the loop\n      var insertBefore = !prev;\n      var insertAfter = !next || next.kind == 'inline';\n\n      if (insertAfter || insertBefore) {\n        list = list.push({ insertAfter: insertAfter, insertBefore: insertBefore, index: index });\n      }\n\n      return list;\n    }, new _immutable.List());\n\n    if (!invalids.size) return;\n\n    return function (change) {\n      // Shift for every text node inserted previously.\n      var shift = 0;\n\n      invalids.forEach(function (_ref) {\n        var index = _ref.index,\n            insertAfter = _ref.insertAfter,\n            insertBefore = _ref.insertBefore;\n\n        if (insertBefore) {\n          change.insertNodeByKey(node.key, shift + index, _text2.default.create(), { normalize: false });\n          shift++;\n        }\n\n        if (insertAfter) {\n          change.insertNodeByKey(node.key, shift + index + 1, _text2.default.create(), { normalize: false });\n          shift++;\n        }\n      });\n    };\n  }\n},\n\n/**\n * Merge adjacent text nodes.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block' && node.kind != 'inline') return;\n\n    var invalids = node.nodes.map(function (child, i) {\n      var next = node.nodes.get(i + 1);\n      if (child.kind != 'text') return;\n      if (!next || next.kind != 'text') return;\n      return next;\n    }).filter(Boolean);\n\n    if (!invalids.size) return;\n\n    return function (change) {\n      // Reverse the list to handle consecutive merges, since the earlier nodes\n      // will always exist after each merge.\n      invalids.reverse().forEach(function (n) {\n        change.mergeNodeByKey(n.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Prevent extra empty text nodes, except when adjacent to inline void nodes.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block' && node.kind != 'inline') return;\n    var nodes = node.nodes;\n\n    if (nodes.size <= 1) return;\n\n    var invalids = nodes.filter(function (desc, i) {\n      if (desc.kind != 'text') return;\n      if (desc.text.length > 0) return;\n\n      var prev = i > 0 ? nodes.get(i - 1) : null;\n      var next = nodes.get(i + 1);\n\n      // If it's the first node, and the next is a void, preserve it.\n      if (!prev && next.kind == 'inline') return;\n\n      // It it's the last node, and the previous is an inline, preserve it.\n      if (!next && prev.kind == 'inline') return;\n\n      // If it's surrounded by inlines, preserve it.\n      if (next && prev && next.kind == 'inline' && prev.kind == 'inline') return;\n\n      // Otherwise, remove it.\n      return true;\n    });\n\n    if (!invalids.size) return;\n\n    return function (change) {\n      invalids.forEach(function (text) {\n        change.removeNodeByKey(text.key, { normalize: false });\n      });\n    };\n  }\n}];\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexports.default = CORE_SCHEMA_RULES;\n\n/***/ }),\n/* 497 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _debug = __webpack_require__(296);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _isPlainObject = __webpack_require__(80);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _pick = __webpack_require__(325);\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _immutable = __webpack_require__(261);\n\nvar _modelTypes = __webpack_require__(268);\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _changes = __webpack_require__(347);\n\nvar _changes2 = _interopRequireDefault(_changes);\n\nvar _operation = __webpack_require__(309);\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _apply = __webpack_require__(375);\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:change');\n\n/**\n * Change.\n *\n * @type {Change}\n */\n\nvar Change = function () {\n  _createClass(Change, null, [{\n    key: 'isChange',\n\n\n    /**\n     * Check if `any` is a `Change`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isChange(any) {\n      return !!(any && any[_modelTypes2.default.CHANGE]);\n    }\n\n    /**\n     * Create a new `Change` with `attrs`.\n     *\n     * @param {Object} attrs\n     *   @property {Value} value\n     */\n\n  }]);\n\n  function Change(attrs) {\n    _classCallCheck(this, Change);\n\n    var value = attrs.value;\n\n    this.value = value;\n    this.operations = new _immutable.List();\n    this.flags = (0, _pick2.default)(attrs, ['merge', 'save']);\n  }\n\n  /**\n   * Get the kind.\n   *\n   * @return {String}\n   */\n\n  _createClass(Change, [{\n    key: 'applyOperation',\n\n\n    /**\n     * Apply an `operation` to the current value, saving the operation to the\n     * history if needed.\n     *\n     * @param {Operation|Object} operation\n     * @param {Object} options\n     * @return {Change}\n     */\n\n    value: function applyOperation(operation) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var operations = this.operations,\n          flags = this.flags;\n      var value = this.value;\n      var _value = value,\n          history = _value.history;\n\n      // Add in the current `value` in case the operation was serialized.\n\n      if ((0, _isPlainObject2.default)(operation)) {\n        operation = _extends({}, operation, { value: value });\n      }\n\n      operation = _operation2.default.create(operation);\n\n      // Default options to the change-level flags, this allows for setting\n      // specific options for all of the operations of a given change.\n      options = _extends({}, flags, options);\n\n      // Derive the default option values.\n      var _options = options,\n          _options$merge = _options.merge,\n          merge = _options$merge === undefined ? operations.size == 0 ? null : true : _options$merge,\n          _options$save = _options.save,\n          save = _options$save === undefined ? true : _options$save,\n          _options$skip = _options.skip,\n          skip = _options$skip === undefined ? null : _options$skip;\n\n      // Apply the operation to the value.\n\n      debug('apply', { operation: operation, save: save, merge: merge });\n      value = (0, _apply2.default)(value, operation);\n\n      // If needed, save the operation to the history.\n      if (history && save) {\n        history = history.save(operation, { merge: merge, skip: skip });\n        value = value.set('history', history);\n      }\n\n      // Update the mutable change object.\n      this.value = value;\n      this.operations = operations.push(operation);\n      return this;\n    }\n\n    /**\n     * Apply a series of `operations` to the current value.\n     *\n     * @param {Array|List} operations\n     * @param {Object} options\n     * @return {Change}\n     */\n\n  }, {\n    key: 'applyOperations',\n    value: function applyOperations(operations, options) {\n      var _this = this;\n\n      operations.forEach(function (op) {\n        return _this.applyOperation(op, options);\n      });\n      return this;\n    }\n\n    /**\n     * Call a change `fn` with arguments.\n     *\n     * @param {Function} fn\n     * @param {Mixed} ...args\n     * @return {Change}\n     */\n\n  }, {\n    key: 'call',\n    value: function call(fn) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      fn.apply(undefined, [this].concat(args));\n      return this;\n    }\n\n    /**\n     * Set an operation flag by `key` to `value`.\n     *\n     * @param {String} key\n     * @param {Any} value\n     * @return {Change}\n     */\n\n  }, {\n    key: 'setOperationFlag',\n    value: function setOperationFlag(key, value) {\n      this.flags[key] = value;\n      return this;\n    }\n\n    /**\n     * Unset an operation flag by `key`.\n     *\n     * @param {String} key\n     * @return {Change}\n     */\n\n  }, {\n    key: 'unsetOperationFlag',\n    value: function unsetOperationFlag(key) {\n      delete this.flags[key];\n      return this;\n    }\n  }, {\n    key: 'kind',\n    get: function get() {\n      return 'change';\n    }\n  }]);\n\n  return Change;\n}();\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nChange.prototype[_modelTypes2.default.CHANGE] = true;\n\n/**\n * Add a change method for each of the changes.\n */\n\nObject.keys(_changes2.default).forEach(function (type) {\n  Change.prototype[type] = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    debug(type, { args: args });\n    this.call.apply(this, [_changes2.default[type]].concat(args));\n    return this;\n  };\n});\n\n/**\n * Export.\n *\n * @type {Change}\n */\n\nexports.default = Change;\n\n/***/ }),\n/* 498 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayMap = __webpack_require__(352),\n    baseClone = __webpack_require__(499),\n    baseUnset = __webpack_require__(514),\n    castPath = __webpack_require__(288),\n    copyObject = __webpack_require__(291),\n    customOmitClone = __webpack_require__(518),\n    flatRest = __webpack_require__(354),\n    getAllKeysIn = __webpack_require__(377);\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Stack = __webpack_require__(335),\n    arrayEach = __webpack_require__(500),\n    assignValue = __webpack_require__(330),\n    baseAssign = __webpack_require__(501),\n    baseAssignIn = __webpack_require__(502),\n    cloneBuffer = __webpack_require__(368),\n    copyArray = __webpack_require__(370),\n    copySymbols = __webpack_require__(503),\n    copySymbolsIn = __webpack_require__(504),\n    getAllKeys = __webpack_require__(361),\n    getAllKeysIn = __webpack_require__(377),\n    getTag = __webpack_require__(312),\n    initCloneArray = __webpack_require__(505),\n    initCloneByTag = __webpack_require__(506),\n    initCloneObject = __webpack_require__(371),\n    isArray = __webpack_require__(271),\n    isBuffer = __webpack_require__(310),\n    isMap = __webpack_require__(510),\n    isObject = __webpack_require__(274),\n    isSet = __webpack_require__(512),\n    keys = __webpack_require__(337);\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n\n    return result;\n  }\n\n  if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n\n    return result;\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar copyObject = __webpack_require__(291),\n    keys = __webpack_require__(337);\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n\n/***/ }),\n/* 502 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar copyObject = __webpack_require__(291),\n    keysIn = __webpack_require__(313);\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n\n\n/***/ }),\n/* 503 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar copyObject = __webpack_require__(291),\n    getSymbols = __webpack_require__(336);\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n\n\n/***/ }),\n/* 504 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar copyObject = __webpack_require__(291),\n    getSymbolsIn = __webpack_require__(376);\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n\n\n/***/ }),\n/* 505 */\n/***/ (function(module, exports) {\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n\n\n/***/ }),\n/* 506 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar cloneArrayBuffer = __webpack_require__(342),\n    cloneDataView = __webpack_require__(507),\n    cloneRegExp = __webpack_require__(508),\n    cloneSymbol = __webpack_require__(509),\n    cloneTypedArray = __webpack_require__(369);\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n\n\n/***/ }),\n/* 507 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar cloneArrayBuffer = __webpack_require__(342);\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n\n/***/ }),\n/* 508 */\n/***/ (function(module, exports) {\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n\n\n/***/ }),\n/* 509 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Symbol = __webpack_require__(290);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n\n\n/***/ }),\n/* 510 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsMap = __webpack_require__(511),\n    baseUnary = __webpack_require__(339),\n    nodeUtil = __webpack_require__(340);\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n\n\n/***/ }),\n/* 511 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getTag = __webpack_require__(312),\n    isObjectLike = __webpack_require__(273);\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n\n\n/***/ }),\n/* 512 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsSet = __webpack_require__(513),\n    baseUnary = __webpack_require__(339),\n    nodeUtil = __webpack_require__(340);\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n\n\n/***/ }),\n/* 513 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getTag = __webpack_require__(312),\n    isObjectLike = __webpack_require__(273);\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n\n\n/***/ }),\n/* 514 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar castPath = __webpack_require__(288),\n    last = __webpack_require__(515),\n    parent = __webpack_require__(516),\n    toKey = __webpack_require__(306);\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n\n\n/***/ }),\n/* 515 */\n/***/ (function(module, exports) {\n\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n/***/ }),\n/* 516 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseGet = __webpack_require__(349),\n    baseSlice = __webpack_require__(517);\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n\n/***/ }),\n/* 517 */\n/***/ (function(module, exports) {\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n/***/ }),\n/* 518 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isPlainObject = __webpack_require__(372);\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n\n\n/***/ }),\n/* 519 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _isEmpty = __webpack_require__(520);\n\nvar _isEmpty2 = _interopRequireDefault(_isEmpty);\n\nvar _pick = __webpack_require__(325);\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _range = __webpack_require__(294);\n\nvar _range2 = _interopRequireDefault(_range);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Set `properties` on the selection.\n *\n * @param {Change} change\n * @param {Object} properties\n */\n\nChanges.select = function (change, properties) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  properties = _range2.default.createProperties(properties);\n\n  var _options$snapshot = options.snapshot,\n      snapshot = _options$snapshot === undefined ? false : _options$snapshot;\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  var props = {};\n  var sel = selection.toJSON();\n  var next = selection.merge(properties).normalize(document);\n  properties = (0, _pick2.default)(next, Object.keys(properties));\n\n  // Remove any properties that are already equal to the current selection. And\n  // create a dictionary of the previous values for all of the properties that\n  // are being changed, for the inverse operation.\n  for (var k in properties) {\n    if (snapshot == false && properties[k] == sel[k]) continue;\n    props[k] = properties[k];\n  }\n\n  // If the selection moves, clear any marks, unless the new selection\n  // properties change the marks in some way.\n  var moved = ['anchorKey', 'anchorOffset', 'focusKey', 'focusOffset'].some(function (p) {\n    return props.hasOwnProperty(p);\n  });\n\n  if (sel.marks && properties.marks == sel.marks && moved) {\n    props.marks = null;\n  }\n\n  // If there are no new properties to set, abort.\n  if ((0, _isEmpty2.default)(props)) {\n    return;\n  }\n\n  // Apply the operation.\n  change.applyOperation({\n    type: 'set_selection',\n    value: value,\n    properties: props,\n    selection: sel\n  }, snapshot ? { skip: false, merge: false } : {});\n};\n\n/**\n * Select the whole document.\n *\n * @param {Change} change\n */\n\nChanges.selectAll = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  var next = selection.moveToRangeOf(document);\n  change.select(next);\n};\n\n/**\n * Snapshot the current selection.\n *\n * @param {Change} change\n */\n\nChanges.snapshotSelection = function (change) {\n  var value = change.value;\n  var selection = value.selection;\n\n  change.select(selection, { snapshot: true });\n};\n\n/**\n * Move the anchor point backward, accounting for being at the start of a block.\n *\n * @param {Change} change\n */\n\nChanges.moveAnchorCharBackward = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection,\n      anchorText = value.anchorText,\n      anchorBlock = value.anchorBlock;\n  var anchorOffset = selection.anchorOffset;\n\n  var previousText = document.getPreviousText(anchorText.key);\n  var isInVoid = document.hasVoidParent(anchorText.key);\n  var isPreviousInVoid = previousText && document.hasVoidParent(previousText.key);\n\n  if (!isInVoid && anchorOffset > 0) {\n    change.moveAnchor(-1);\n    return;\n  }\n\n  if (!previousText) {\n    return;\n  }\n\n  change.moveAnchorToEndOf(previousText);\n\n  if (!isInVoid && !isPreviousInVoid && anchorBlock.hasNode(previousText.key)) {\n    change.moveAnchor(-1);\n  }\n};\n\n/**\n * Move the anchor point forward, accounting for being at the end of a block.\n *\n * @param {Change} change\n */\n\nChanges.moveAnchorCharForward = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection,\n      anchorText = value.anchorText,\n      anchorBlock = value.anchorBlock;\n  var anchorOffset = selection.anchorOffset;\n\n  var nextText = document.getNextText(anchorText.key);\n  var isInVoid = document.hasVoidParent(anchorText.key);\n  var isNextInVoid = nextText && document.hasVoidParent(nextText.key);\n\n  if (!isInVoid && anchorOffset < anchorText.text.length) {\n    change.moveAnchor(1);\n    return;\n  }\n\n  if (!nextText) {\n    return;\n  }\n\n  change.moveAnchorToStartOf(nextText);\n\n  if (!isInVoid && !isNextInVoid && anchorBlock.hasNode(nextText.key)) {\n    change.moveAnchor(1);\n  }\n};\n\n/**\n * Move the focus point backward, accounting for being at the start of a block.\n *\n * @param {Change} change\n */\n\nChanges.moveFocusCharBackward = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection,\n      focusText = value.focusText,\n      focusBlock = value.focusBlock;\n  var focusOffset = selection.focusOffset;\n\n  var previousText = document.getPreviousText(focusText.key);\n  var isInVoid = document.hasVoidParent(focusText.key);\n  var isPreviousInVoid = previousText && document.hasVoidParent(previousText.key);\n\n  if (!isInVoid && focusOffset > 0) {\n    change.moveFocus(-1);\n    return;\n  }\n\n  if (!previousText) {\n    return;\n  }\n\n  change.moveFocusToEndOf(previousText);\n\n  if (!isInVoid && !isPreviousInVoid && focusBlock.hasNode(previousText.key)) {\n    change.moveFocus(-1);\n  }\n};\n\n/**\n * Move the focus point forward, accounting for being at the end of a block.\n *\n * @param {Change} change\n */\n\nChanges.moveFocusCharForward = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection,\n      focusText = value.focusText,\n      focusBlock = value.focusBlock;\n  var focusOffset = selection.focusOffset;\n\n  var nextText = document.getNextText(focusText.key);\n  var isInVoid = document.hasVoidParent(focusText.key);\n  var isNextInVoid = nextText && document.hasVoidParent(nextText.key);\n\n  if (!isInVoid && focusOffset < focusText.text.length) {\n    change.moveFocus(1);\n    return;\n  }\n\n  if (!nextText) {\n    return;\n  }\n\n  change.moveFocusToStartOf(nextText);\n\n  if (!isInVoid && !isNextInVoid && focusBlock.hasNode(nextText.key)) {\n    change.moveFocus(1);\n  }\n};\n\n/**\n * Mix in move methods.\n */\n\nvar MOVE_DIRECTIONS = ['Forward', 'Backward'];\n\nMOVE_DIRECTIONS.forEach(function (direction) {\n  var anchor = 'moveAnchorChar' + direction;\n  var focus = 'moveFocusChar' + direction;\n\n  Changes['moveChar' + direction] = function (change) {\n    change[anchor]()[focus]();\n  };\n\n  Changes['moveStartChar' + direction] = function (change) {\n    if (change.value.isBackward) {\n      change[focus]();\n    } else {\n      change[anchor]();\n    }\n  };\n\n  Changes['moveEndChar' + direction] = function (change) {\n    if (change.value.isBackward) {\n      change[anchor]();\n    } else {\n      change[focus]();\n    }\n  };\n\n  Changes['extendChar' + direction] = function (change) {\n    change['moveFocusChar' + direction]();\n  };\n\n  Changes['collapseChar' + direction] = function (change) {\n    var collapse = direction == 'Forward' ? 'collapseToEnd' : 'collapseToStart';\n    change[collapse]()['moveChar' + direction]();\n  };\n});\n\n/**\n * Mix in alias methods.\n */\n\nvar ALIAS_METHODS = [['collapseLineBackward', 'collapseToStartOfBlock'], ['collapseLineForward', 'collapseToEndOfBlock'], ['extendLineBackward', 'extendToStartOfBlock'], ['extendLineForward', 'extendToEndOfBlock']];\n\nALIAS_METHODS.forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      alias = _ref2[0],\n      method = _ref2[1];\n\n  Changes[alias] = function (change) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    change[method].apply(change, [change].concat(args));\n  };\n});\n\n/**\n * Mix in selection changes that are just a proxy for the selection method.\n */\n\nvar PROXY_TRANSFORMS = ['blur', 'collapseTo', 'collapseToAnchor', 'collapseToEnd', 'collapseToEndOf', 'collapseToFocus', 'collapseToStart', 'collapseToStartOf', 'extend', 'extendTo', 'extendToEndOf', 'extendToStartOf', 'flip', 'focus', 'move', 'moveAnchor', 'moveAnchorOffsetTo', 'moveAnchorTo', 'moveAnchorToEndOf', 'moveAnchorToStartOf', 'moveEnd', 'moveEndOffsetTo', 'moveEndTo', 'moveFocus', 'moveFocusOffsetTo', 'moveFocusTo', 'moveFocusToEndOf', 'moveFocusToStartOf', 'moveOffsetsTo', 'moveStart', 'moveStartOffsetTo', 'moveStartTo', 'moveTo', 'moveToEnd', 'moveToEndOf', 'moveToRangeOf', 'moveToStart', 'moveToStartOf', 'deselect'];\n\nPROXY_TRANSFORMS.forEach(function (method) {\n  Changes[method] = function (change) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var normalize = method != 'deselect';\n    var value = change.value;\n    var document = value.document,\n        selection = value.selection;\n\n    var next = selection[method].apply(selection, args);\n    if (normalize) next = next.normalize(document);\n    change.select(next);\n  };\n});\n\n/**\n * Mix in node-related changes.\n */\n\nvar PREFIXES = ['moveTo', 'moveAnchorTo', 'moveFocusTo', 'moveStartTo', 'moveEndTo', 'collapseTo', 'extendTo'];\n\nvar DIRECTIONS = ['Next', 'Previous'];\n\nvar KINDS = ['Block', 'Inline', 'Text'];\n\nPREFIXES.forEach(function (prefix) {\n  var edges = ['Start', 'End'];\n\n  if (prefix == 'moveTo') {\n    edges.push('Range');\n  }\n\n  edges.forEach(function (edge) {\n    var method = '' + prefix + edge + 'Of';\n\n    KINDS.forEach(function (kind) {\n      var getNode = kind == 'Text' ? 'getNode' : 'getClosest' + kind;\n\n      Changes['' + method + kind] = function (change) {\n        var value = change.value;\n        var document = value.document,\n            selection = value.selection;\n\n        var node = document[getNode](selection.startKey);\n        if (!node) return;\n        change[method](node);\n      };\n\n      DIRECTIONS.forEach(function (direction) {\n        var getDirectionNode = 'get' + direction + kind;\n        var directionKey = direction == 'Next' ? 'startKey' : 'endKey';\n\n        Changes['' + method + direction + kind] = function (change) {\n          var value = change.value;\n          var document = value.document,\n              selection = value.selection;\n\n          var node = document[getNode](selection[directionKey]);\n          if (!node) return;\n          var target = document[getDirectionNode](node.key);\n          if (!target) return;\n          change[method](target);\n        };\n      });\n    });\n  });\n});\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n/***/ }),\n/* 520 */\n/***/ (function(module, exports) {\n\n\n/**\n * Has own property.\n *\n * @type {Function}\n */\n\nvar has = Object.prototype.hasOwnProperty\n\n/**\n * To string.\n *\n * @type {Function}\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Test whether a value is \"empty\".\n *\n * @param {Mixed} val\n * @return {Boolean}\n */\n\nfunction isEmpty(val) {\n  // Null and Undefined...\n  if (val == null) return true\n\n  // Booleans...\n  if ('boolean' == typeof val) return false\n\n  // Numbers...\n  if ('number' == typeof val) return val === 0\n\n  // Strings...\n  if ('string' == typeof val) return val.length === 0\n\n  // Functions...\n  if ('function' == typeof val) return val.length === 0\n\n  // Arrays...\n  if (Array.isArray(val)) return val.length === 0\n\n  // Errors...\n  if (val instanceof Error) return val.message === ''\n\n  // Objects...\n  if (val.toString == toString) {\n    switch (val.toString()) {\n\n      // Maps, Sets, Files and Errors...\n      case '[object File]':\n      case '[object Map]':\n      case '[object Set]': {\n        return val.size === 0\n      }\n\n      // Plain objects...\n      case '[object Object]': {\n        for (var key in val) {\n          if (has.call(val, key)) return false\n        }\n\n        return true\n      }\n    }\n  }\n\n  // Anything else...\n  return false\n}\n\n/**\n * Export `isEmpty`.\n *\n * @type {Function}\n */\n\nmodule.exports = isEmpty\n\n\n/***/ }),\n/* 521 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _value = __webpack_require__(334);\n\nvar _value2 = _interopRequireDefault(_value);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Set `properties` on the value.\n *\n * @param {Change} change\n * @param {Object|Value} properties\n * @param {Object} options\n */\n\nChanges.setValue = function (change, properties) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  properties = _value2.default.createProperties(properties);\n  var value = change.value;\n\n\n  change.applyOperation({\n    type: 'set_value',\n    properties: properties,\n    value: value\n  }, options);\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n/***/ }),\n/* 522 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _immutable = __webpack_require__(261);\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Normalize the value with its schema.\n *\n * @param {Change} change\n */\n\nChanges.normalize = function (change) {\n  change.normalizeDocument();\n};\n\n/**\n * Normalize the document with the value's schema.\n *\n * @param {Change} change\n */\n\nChanges.normalizeDocument = function (change) {\n  var value = change.value;\n  var document = value.document;\n\n  change.normalizeNodeByKey(document.key);\n};\n\n/**\n * Normalize a `node` and its children with the value's schema.\n *\n * @param {Change} change\n * @param {Node|String} key\n */\n\nChanges.normalizeNodeByKey = function (change, key) {\n  var value = change.value;\n  var document = value.document,\n      schema = value.schema;\n\n  var node = document.assertNode(key);\n\n  normalizeNodeAndChildren(change, node, schema);\n\n  document = change.value.document;\n  var ancestors = document.getAncestors(key);\n  if (!ancestors) return;\n\n  ancestors.forEach(function (ancestor) {\n    normalizeNode(change, ancestor, schema);\n  });\n};\n\n/**\n * Normalize a `node` and its children with a `schema`.\n *\n * @param {Change} change\n * @param {Node} node\n * @param {Schema} schema\n */\n\nfunction normalizeNodeAndChildren(change, node, schema) {\n  if (node.kind == 'text') {\n    normalizeNode(change, node, schema);\n    return;\n  }\n\n  // We can't just loop the children and normalize them, because in the process\n  // of normalizing one child, we might end up creating another. Instead, we\n  // have to normalize one at a time, and check for new children along the way.\n  // PERF: use a mutable array here instead of an immutable stack.\n  var keys = node.nodes.toArray().map(function (n) {\n    return n.key;\n  });\n\n  // While there is still a child key that hasn't been normalized yet...\n\n  var _loop = function _loop() {\n    var size = change.operations.size;\n\n    var key = void 0;\n\n    // PERF: use a mutable set here since we'll be add to it a lot.\n    var set = new _immutable.Set().asMutable();\n\n    // Unwind the stack, normalizing every child and adding it to the set.\n    while (key = keys[0]) {\n      var child = node.getChild(key);\n      normalizeNodeAndChildren(change, child, schema);\n      set.add(key);\n      keys.shift();\n    }\n\n    // Turn the set immutable to be able to compare against it.\n    set = set.asImmutable();\n\n    // PERF: Only re-find the node and re-normalize any new children if\n    // operations occured that might have changed it.\n    if (change.operations.size > size) {\n      node = refindNode(change, node);\n\n      // Add any new children back onto the stack.\n      node.nodes.forEach(function (n) {\n        if (set.has(n.key)) return;\n        keys.unshift(n.key);\n      });\n    }\n  };\n\n  while (keys.length) {\n    _loop();\n  }\n\n  // Normalize the node itself if it still exists.\n  if (node) {\n    normalizeNode(change, node, schema);\n  }\n}\n\n/**\n * Re-find a reference to a node that may have been modified or removed\n * entirely by a change.\n *\n * @param {Change} change\n * @param {Node} node\n * @return {Node}\n */\n\nfunction refindNode(change, node) {\n  var value = change.value;\n  var document = value.document;\n\n  return node.kind == 'document' ? document : document.getDescendant(node.key);\n}\n\n/**\n * Normalize a `node` with a `schema`, but not its children.\n *\n * @param {Change} change\n * @param {Node} node\n * @param {Schema} schema\n */\n\nfunction normalizeNode(change, node, schema) {\n  var max = schema.stack.plugins.length + 1;\n  var iterations = 0;\n\n  function iterate(c, n) {\n    var normalize = n.validate(schema);\n    if (!normalize) return;\n\n    // Run the `normalize` function to fix the node.\n    normalize(c);\n\n    // Re-find the node reference, in case it was updated. If the node no longer\n    // exists, we're done for this branch.\n    n = refindNode(c, n);\n    if (!n) return;\n\n    // Increment the iterations counter, and check to make sure that we haven't\n    // exceeded the max. Without this check, it's easy for the `validate` or\n    // `normalize` function of a schema rule to be written incorrectly and for\n    // an infinite invalid loop to occur.\n    iterations++;\n\n    if (iterations > max) {\n      throw new Error('A schema rule could not be validated after sufficient iterations. This is usually due to a `rule.validate` or `rule.normalize` function of a schema being incorrectly written, causing an infinite loop.');\n    }\n\n    // Otherwise, iterate again.\n    iterate(c, n);\n  }\n\n  iterate(change, node);\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n/***/ }),\n/* 523 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apply = __webpack_require__(375);\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nvar _invert = __webpack_require__(348);\n\nvar _invert2 = _interopRequireDefault(_invert);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = {\n  apply: _apply2.default,\n  invert: _invert2.default\n};\n\n/***/ }),\n/* 524 */\n/***/ (function(module, exports) {\n\n\n/**\n * Expose `isUrl`.\n */\n\nmodule.exports = isUrl;\n\n/**\n * Matcher.\n */\n\nvar matcher = /^(?:\\w+:)?\\/\\/([^\\s\\.]+\\.\\S{2}|localhost[\\:?\\d]*)\\S*$/;\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string){\n  return matcher.test(string);\n}\n\n\n/***/ }),\n/* 525 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var MainImg=function MainImg(props){return _react2.default.createElement(\"div\",_extends({className:props.className},props.attributes),_react2.default.createElement(\"div\",{className:\"main-image-wrapper\"},_react2.default.createElement(\"div\",{className:\"overlay\"}),_react2.default.createElement(\"div\",{className:\"main-image\"},_react2.default.createElement(\"img\",{src:props.src,alt:props.alt,className:\"main \"+props.className})),_react2.default.createElement(\"button\",{className:\"secondary\",type:\"button\",disabled:true},\"Make a Donation\")),_react2.default.createElement(\"button\",{className:\"primary mobile\",type:\"button\",disabled:true},\"Make a Donation\"));};var LeftImg=function LeftImg(props){return _react2.default.createElement(\"img\",_extends({src:props.src,alt:props.alt,className:\"left \"+props.className},props.attributes));};var RightImg=function RightImg(props){return _react2.default.createElement(\"img\",_extends({src:props.src,alt:props.alt,className:\"right \"+props.className},props.attributes));};var Images=function Images(props){var src=props.src,className=props.className,imageType=props.imageType,attributes=props.attributes,alt=props.alt;if(imageType==='main'){return _react2.default.createElement(MainImg,{src:src,alt:alt,className:className,attributes:attributes});}else if(imageType==='left'){return _react2.default.createElement(LeftImg,{src:src,alt:alt,className:className,attributes:attributes});}else if(imageType==='right'){return _react2.default.createElement(RightImg,{src:src,alt:alt,className:className,attributes:attributes});}return null;};exports.default=Images;\n\n/***/ }),\n/* 526 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var Toolbar=function Toolbar(props){var selectValue=void 0;if('type'in props.selectValue){selectValue=props.selectValue.type;}var inlineType=void 0;if(props.inlineType){if('type'in props.inlineType){inlineType=props.inlineType.type;}}return _react2.default.createElement('div',{className:'toolbar'},_react2.default.createElement('div',{className:'row align-justify'},_react2.default.createElement('select',{className:'small-12 medium-5 columns',onChange:props.onChangeFormat,value:selectValue},_react2.default.createElement('option',{value:'paragraph'},'Normal'),_react2.default.createElement('option',{value:'header'},'Header')),_react2.default.createElement('div',{className:'inline shrink columns'},_react2.default.createElement('button',{'data-active':true,className:'bold',type:'button',onMouseDown:function onMouseDown(e){return props.onClickInline(e,'bold');}},_react2.default.createElement('span',{className:'icon'},'\\uF032')),_react2.default.createElement('button',{className:'italic',type:'button',onMouseDown:function onMouseDown(e){return props.onClickInline(e,'italic');}},_react2.default.createElement('span',{className:'icon'},'\\uF033')),_react2.default.createElement('button',{className:'underlined',type:'button',onMouseDown:function onMouseDown(e){return props.onClickInline(e,'underlined');}},_react2.default.createElement('span',{className:'icon'},'\\uF0CD'))),_react2.default.createElement('div',{className:'list-types shrink columns'},_react2.default.createElement('button',{className:'numbered',type:'button',onMouseDown:function onMouseDown(e){return props.onClickList(e,'numberedList');}},_react2.default.createElement('span',{className:'icon'},'\\uF0CB')),_react2.default.createElement('button',{className:'bullet',type:'button',onMouseDown:function onMouseDown(e){return props.onClickList(e,'bulletedList');}},_react2.default.createElement('span',{className:'icon'},'\\uF0CA'))),_react2.default.createElement('div',{className:'content-types shrink columns'},_react2.default.createElement('button',{className:'link'+(inlineType==='link'?' active':''),onMouseDown:props.onNewLink,type:'button'},_react2.default.createElement('span',{className:'icon'},'\\uF0C1')),_react2.default.createElement('button',{className:'image',onMouseDown:props.onAddImage,type:'button'},_react2.default.createElement('span',{className:'icon'},'\\uF03E')))));};/* eslint-env browser */exports.default=Toolbar;\n\n/***/ }),\n/* 527 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var CreateLink=function CreateLink(props){return _react2.default.createElement(\"section\",{id:\"createLink\"},props.editorState.isExpanded?null:_react2.default.createElement(\"div\",{className:\"row align-middle\"},_react2.default.createElement(\"div\",{className:\"columns small-12 medium-2 large-3\"},_react2.default.createElement(\"label\",{htmlFor:\"newUrlText\"},\"Link Text:\")),_react2.default.createElement(\"div\",{className:\"columns expand\"},_react2.default.createElement(\"input\",{type:\"text\",value:props.newUrlText,name:\"newUrlText\",id:\"newUrlText\",onChange:props.onChange}))),_react2.default.createElement(\"div\",{className:\"row align-middle\"},_react2.default.createElement(\"div\",{className:\"columns small-12 medium-2 large-3\"},_react2.default.createElement(\"label\",{htmlFor:\"newUrl\"},\"Link Url:\")),_react2.default.createElement(\"div\",{className:\"columns expand\"},_react2.default.createElement(\"input\",{type:\"text\",value:props.newUrl,name:\"newUrl\",id:\"newUrl\",onChange:props.onChange}))),_react2.default.createElement(\"div\",{className:\"row align-middle\"},_react2.default.createElement(\"div\",{className:\"small-12 columns\"},_react2.default.createElement(\"div\",{className:\"row align-center\"},_react2.default.createElement(\"button\",{className:\"small-11 medium-6 large-8 secondary\",onClick:props.onCreateLink,disabled:!props.validate(props.newUrl),type:\"button\"},props.editorState.isExpanded?'Create Link':'Insert Link'),_react2.default.createElement(\"div\",{className:\"small-12 columns\"},_react2.default.createElement(\"button\",{className:\"cancel\",onClick:props.cancelCreateLink,type:\"button\"},\"Cancel\"))))));};/* eslint-env browser */exports.default=CreateLink;\n\n/***/ }),\n/* 528 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var CreateImage=function CreateImage(props){return _react2.default.createElement(\"section\",{id:\"createImage\"},_react2.default.createElement(\"div\",{className:\"row align-middle img-src\"},_react2.default.createElement(\"div\",{className:\"columns small-12 medium-3 large-3\"},_react2.default.createElement(\"label\",{htmlFor:\"newSrc\"},\"Image Src:\")),_react2.default.createElement(\"div\",{className:\"columns small-12 medium-9 large-9\"},_react2.default.createElement(\"input\",{type:\"file\",name:\"newSrc\",id:\"newSrc\",onChange:props.onChange}))),_react2.default.createElement(\"div\",{className:\"row align-middle img-description\"},_react2.default.createElement(\"div\",{className:\"columns small-12 medium-3 large-3\"},_react2.default.createElement(\"label\",{htmlFor:\"newAlt\"},\"Description:\")),_react2.default.createElement(\"div\",{className:\"columns small-12 medium-9 large-9\"},_react2.default.createElement(\"input\",{type:\"text\",value:props.newAlt,name:\"newAlt\",id:\"newAlt\",onChange:props.onChange}))),_react2.default.createElement(\"div\",{className:\"row align-middle img-type\"},_react2.default.createElement(\"div\",{className:\"columns small-12 medium-3 large-3\"},_react2.default.createElement(\"legend\",null,\"Image Type:\")),_react2.default.createElement(\"div\",{className:\"columns small-12 medium-9 large-9\"},_react2.default.createElement(\"label\",{htmlFor:\"imageType1\"},_react2.default.createElement(\"input\",{type:\"radio\",id:\"imageType1\",name:\"newImageType\",onChange:props.onChange,checked:props.newImageType==='main',value:\"main\"}),_react2.default.createElement(\"span\",null),\"Main Image\"),_react2.default.createElement(\"label\",{htmlFor:\"imageType2\"},_react2.default.createElement(\"input\",{type:\"radio\",id:\"imageType2\",name:\"newImageType\",onChange:props.onChange,checked:props.newImageType==='left',value:\"left\"}),_react2.default.createElement(\"span\",null),\"Left Image\"),_react2.default.createElement(\"label\",{htmlFor:\"imageType3\"},_react2.default.createElement(\"input\",{type:\"radio\",id:\"imageType3\",name:\"newImageType\",onChange:props.onChange,checked:props.newImageType==='right',value:\"right\"}),_react2.default.createElement(\"span\",null),\"Right Image\"))),_react2.default.createElement(\"div\",{className:\"row align-middle\"},_react2.default.createElement(\"div\",{className:\"small-12 columns\"},_react2.default.createElement(\"div\",{className:\"row align-center\"},_react2.default.createElement(\"button\",{className:\"small-11 medium-6 large-8 secondary\",onClick:props.onCreateImage,disabled:!props.validate(props.newSrc!==''?props.newSrc.name:''),type:\"button\"},\"Add Image\"),_react2.default.createElement(\"div\",{className:\"small-12 columns\"},_react2.default.createElement(\"button\",{className:\"cancel\",onClick:props.cancelCreateImage,type:\"button\"},\"Cancel\"))))));};/* eslint-env browser */exports.default=CreateImage;\n\n/***/ }),\n/* 529 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(530);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(22)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 530 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(21)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".no-touch #campaignEditor .main-image-wrapper:hover div.overlay, .no-touch #campaignEditor .main-image-wrapper:hover button.secondary {\\n  display: initial; }\\n\\n.no-touch #campaignEditor button.primary.mobile {\\n  display: none; }\\n\\n#campaignEditor {\\n  border-radius: 0.1875rem;\\n  overflow: hidden;\\n  border: 0.0625rem solid #808080; }\\n  #campaignEditor .toolbar {\\n    background-image: url(\" + __webpack_require__(284) + \");\\n    padding: 0.5rem;\\n    background-size: 120% 140%;\\n    background-position: 50%;\\n    color: #333333;\\n    padding: 0.375rem; }\\n    #campaignEditor .toolbar > div.row {\\n      margin: 0; }\\n    #campaignEditor .toolbar span.icon {\\n      font-family: 'font-awesome-light';\\n      display: inline-block;\\n      color: #333333;\\n      font-size: 1rem;\\n      padding: 0.5rem;\\n      line-height: initial;\\n      border-radius: 0.0675rem;\\n      text-shadow: 0 0 0.125rem #fffbef;\\n      min-width: 2rem; }\\n    #campaignEditor .toolbar button.active span.icon {\\n      color: #3694ff; }\\n    #campaignEditor .toolbar select {\\n      display: inline-block;\\n      width: 40%;\\n      margin: 0;\\n      background-color: transparent;\\n      border: none;\\n      padding: 0.3125rem 0.5rem 0.4375rem 0.5rem;\\n      line-height: initial;\\n      color: #333333;\\n      font-family: 'Lato', sans-serif;\\n      font-weight: 300;\\n      font-size: 1.25rem;\\n      height: auto;\\n      background-image: url(\\\"/assets/img/sort-drk.svg\\\");\\n      background-position: right 58%;\\n      background-size: auto 1rem;\\n      cursor: pointer;\\n      transition: none; }\\n      #campaignEditor .toolbar select:focus {\\n        outline: none;\\n        box-shadow: none; }\\n    #campaignEditor .toolbar div.shrink.columns {\\n      padding: 0; }\\n    #campaignEditor .toolbar button {\\n      display: inline-block;\\n      width: auto;\\n      margin: 0;\\n      padding: 0; }\\n    #campaignEditor .toolbar button:hover, #campaignEditor .toolbar select:hover {\\n      background-color: rgba(255, 255, 255, 0.2);\\n      box-shadow: 0.0625rem 0.0625rem 0.0625rem rgba(0, 0, 0, 0.2);\\n      border-radius: 0.375rem;\\n      transition: none; }\\n    #campaignEditor .toolbar button:hover:active, #campaignEditor .toolbar select:hover:active {\\n      background-color: rgba(255, 255, 255, 0.1);\\n      box-shadow: -0.0625rem -0.0625rem 0.0625rem rgba(0, 0, 0, 0.2); }\\n  #campaignEditor .grey-line {\\n    background-image: url(/assets/img/grey-line.svg);\\n    background-position-x: 50%;\\n    height: 1.125rem;\\n    position: relative;\\n    width: 100%;\\n    top: -0.5625rem;\\n    background-repeat: no-repeat;\\n    background-size: cover; }\\n  #campaignEditor #createLink, #campaignEditor #createImage {\\n    padding: 1rem 0;\\n    margin: 0;\\n    background-image: url(\\\"/assets/img/paper.png\\\");\\n    background-repeat: no-repeat;\\n    background-size: 110% 120%;\\n    background-position-x: 50%;\\n    background-position-y: 80%; }\\n    #campaignEditor #createLink .row, #campaignEditor #createImage .row {\\n      margin: 0; }\\n      #campaignEditor #createLink .row > div, #campaignEditor #createImage .row > div {\\n        margin-bottom: 0.375rem; }\\n        #campaignEditor #createLink .row > div:not(:first-child), #campaignEditor #createImage .row > div:not(:first-child) {\\n          margin-bottom: 0.75rem; }\\n        @media screen and (min-width: 40em) {\\n          #campaignEditor #createLink .row > div, #campaignEditor #createImage .row > div {\\n            margin-bottom: 1rem; } }\\n      #campaignEditor #createLink .row:nth-last-child(2) > div:last-child, #campaignEditor #createImage .row:nth-last-child(2) > div:last-child {\\n        margin-bottom: 0; }\\n      @media screen and (min-width: 40em) {\\n        #campaignEditor #createLink .row:nth-last-child(2) > div, #campaignEditor #createImage .row:nth-last-child(2) > div {\\n          margin-bottom: 0; } }\\n      #campaignEditor #createLink .row:last-child > div, #campaignEditor #createImage .row:last-child > div {\\n        margin-bottom: 0rem;\\n        text-align: center; }\\n    #campaignEditor #createLink legend, #campaignEditor #createImage legend {\\n      width: 100%; }\\n    #campaignEditor #createLink label, #campaignEditor #createLink legend, #campaignEditor #createImage label, #campaignEditor #createImage legend {\\n      text-align: left;\\n      margin: 0;\\n      font-size: 1rem; }\\n      @media screen and (min-width: 40em) {\\n        #campaignEditor #createLink label, #campaignEditor #createLink legend, #campaignEditor #createImage label, #campaignEditor #createImage legend {\\n          text-align: right; } }\\n    #campaignEditor #createLink .img-type label span, #campaignEditor #createImage .img-type label span {\\n      top: 0.25rem; }\\n    @media screen and (max-width: 40em) {\\n      #campaignEditor #createLink .img-type label:not(:last-child), #campaignEditor #createImage .img-type label:not(:last-child) {\\n        margin: 0 0 0.5rem 0; } }\\n    @media screen and (min-width: 40em) {\\n      #campaignEditor #createLink .img-type label, #campaignEditor #createImage .img-type label {\\n        display: inline-block;\\n        margin: 0 1.5rem 0 0; } }\\n    #campaignEditor #createLink input, #campaignEditor #createImage input {\\n      margin: 0;\\n      font-size: 1rem;\\n      height: auto;\\n      padding: 0.375rem; }\\n    #campaignEditor #createLink button, #campaignEditor #createImage button {\\n      margin: 1.5rem 0 0 0;\\n      padding: 0.75rem 0.75rem 1rem 0.75rem; }\\n  #campaignEditor .editor {\\n    margin-top: -1.125rem; }\\n    #campaignEditor .editor h2 {\\n      clear: both; }\\n    #campaignEditor .editor > div {\\n      padding: 0 1rem 0.5rem 1rem;\\n      overflow: auto; }\\n      #campaignEditor .editor > div p, #campaignEditor .editor > div ol, #campaignEditor .editor > div ul {\\n        margin-top: 0.75rem; }\\n        @media screen and (min-width: 40em) {\\n          #campaignEditor .editor > div p, #campaignEditor .editor > div ol, #campaignEditor .editor > div ul {\\n            font-size: 1.125rem;\\n            margin-top: 1rem;\\n            line-height: 1.375rem; } }\\n      #campaignEditor .editor > div li:not(:last-of-type) {\\n        padding-bottom: 0.25rem; }\\n      #campaignEditor .editor > div ol {\\n        margin: 1rem 0;\\n        padding-left: 1.625rem; }\\n        #campaignEditor .editor > div ol li {\\n          padding-left: 0.125rem; }\\n      #campaignEditor .editor > div ul {\\n        margin: 1rem 0;\\n        padding-left: 1.75rem; }\\n      #campaignEditor .editor > div .main-image-wrapper {\\n        position: relative;\\n        display: flex;\\n        margin-top: 0.75rem;\\n        align-items: center;\\n        justify-content: center; }\\n        @media screen and (min-width: 40em) {\\n          #campaignEditor .editor > div .main-image-wrapper {\\n            margin-top: 1rem; } }\\n        #campaignEditor .editor > div .main-image-wrapper div.main-image img {\\n          float: none;\\n          width: 100%;\\n          max-width: none;\\n          margin: 0; }\\n        #campaignEditor .editor > div .main-image-wrapper div.overlay {\\n          pointer-events: none;\\n          position: absolute;\\n          width: 100%;\\n          height: 100%;\\n          background-color: rgba(128, 128, 128, 0.5);\\n          display: none;\\n          border-radius: 0.25rem; }\\n      #campaignEditor .editor > div button.primary.mobile, #campaignEditor .editor > div button[type='submit'].primary.mobile {\\n        margin: 1rem 0; }\\n      #campaignEditor .editor > div button.secondary, #campaignEditor .editor > div button[type='submit'].secondary {\\n        pointer-events: none;\\n        position: absolute;\\n        margin: 0;\\n        width: 80%;\\n        z-index: 100;\\n        display: none; }\\n      #campaignEditor .editor > div img {\\n        width: 50%;\\n        max-width: 300px;\\n        border-radius: 0.25rem;\\n        border: 0.0625rem solid #808080; }\\n        #campaignEditor .editor > div img.active {\\n          box-shadow: 0 0 0.375rem #0061cf; }\\n        #campaignEditor .editor > div img.left {\\n          float: left;\\n          margin: 0.75rem 1rem 0.625rem 0; }\\n          @media screen and (min-width: 40em) {\\n            #campaignEditor .editor > div img.left {\\n              margin: 1rem 1.125rem 0.75rem 0; } }\\n        #campaignEditor .editor > div img.right {\\n          float: right;\\n          margin: 0.75rem 0 0.625rem 1rem; }\\n          @media screen and (min-width: 40em) {\\n            #campaignEditor .editor > div img.right {\\n              margin: 1rem 0 0.75rem 1.125rem; } }\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"lightGraphite\": \"#808080\",\n\t\"mauiOrange\": \"#ffab20\",\n\t\"graphite\": \"#404040\",\n\t\"darkGraphite\": \"#101010\",\n\t\"brightGraphite\": \"#999999\",\n\t\"errorRed\": \"#ff5800\",\n\t\"darkErrorRed\": \"#cc4600\",\n\t\"blueHydrangea\": \"#3694ff\",\n\t\"darkBlueHydrangea\": \"#0063db\",\n\t\"lightHydrangea\": \"#57a8ff\",\n\t\"small\": \"26em\",\n\t\"medium\": \"40em\",\n\t\"large\": \"64em\",\n\t\"xlarge\": \"90em\",\n\t\"xxlarge\": \"120em\"\n};\n\n/***/ }),\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(532);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(22)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 532 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(21)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \"#editCampaigns .header {\\n  margin-bottom: 1.125rem; }\\n  #editCampaigns .header h1 {\\n    margin-bottom: 0.5rem; }\\n  #editCampaigns .header p.message {\\n    margin: 0;\\n    color: #ffab20; }\\n\\n#editCampaigns p.info {\\n  font-size: 1.25rem;\\n  color: #404040;\\n  margin: 0.125rem 0 1rem 0;\\n  line-height: initial; }\\n  @media screen and (min-width: 40em) {\\n    #editCampaigns p.info {\\n      font-size: 1.375rem; } }\\n\\n#editCampaigns p.title {\\n  font-size: 1.125rem;\\n  color: #808080;\\n  margin: 0.125rem 0;\\n  line-height: initial; }\\n  @media screen and (min-width: 40em) {\\n    #editCampaigns p.title {\\n      font-size: 1.25rem; } }\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"lightGraphite\": \"#808080\",\n\t\"mauiOrange\": \"#ffab20\",\n\t\"graphite\": \"#404040\",\n\t\"darkGraphite\": \"#101010\",\n\t\"brightGraphite\": \"#999999\",\n\t\"errorRed\": \"#ff5800\",\n\t\"darkErrorRed\": \"#cc4600\",\n\t\"blueHydrangea\": \"#3694ff\",\n\t\"darkBlueHydrangea\": \"#0063db\",\n\t\"lightHydrangea\": \"#57a8ff\",\n\t\"small\": \"26em\",\n\t\"medium\": \"40em\",\n\t\"large\": \"64em\",\n\t\"xlarge\": \"90em\",\n\t\"xxlarge\": \"120em\"\n};\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/0.81e4e44c.chunk.js","import { connect } from 'react-redux';\n\nimport { requireAuth } from '../../store/actions';\nimport EditCampaign from './components';\n\nconst mapStateToProps = state => ({\n  userAuth: state.userAuth,\n  userInfo: state.userInfo,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRequireAuth() {\n    return dispatch(requireAuth());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCampaign);\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/editCampaign/index.js","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/immutable/dist/immutable.js\n// module id = 261\n// module chunks = 0","/* eslint-env browser */\n// IMPORT DEPENDENCIES\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport screenBreaks from '../../consts/screen-breaks.scss';\n\nimport redBrush from '../../assets/img/red-brush.png';\nimport blueBrush from '../../assets/img/blue-brush.png';\n\nimport { CloseIcon } from '../../components/svgs/icons';\n\n// MESSAGE COMPONENT\n// This displays errors and messages on the page. It accepts an error object,\n// message object, clear error and clear message function.\n// Errors are prioritized over messages.\nconst Message = styled(({\n  error,\n  message,\n  onClearError,\n  onClearMessage,\n  className,\n}) => {\n  if (error.message !== '' || message.message !== '') {\n    return (\n      <section id=\"message\" className={`${className}${error.message !== '' ? ' error' : null}`}>\n      <CloseIcon onClick={error.message !== '' ? onClearError : onClearMessage}/>\n        <p>\n          {error.message !== '' ? error.message : message.message}</p>\n      </section>\n    );\n  }\n  return null;\n})`\n  position: absolute;\n  background-image: url(${blueBrush});\n  background-position-x: 50%;\n  background-position-y: 60%;\n  background-size: 140% 110%;\n  width: 100%;\n  text-align: center;\n  z-index: 100;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.75rem 0 1rem 0;\n\n  &.error {\n    background-image: url(${redBrush});\n    background-position-x: 50%;\n    background-position-y: 60%;\n    background-size: 140% 110%;\n  }\n\n  p {\n    color: white;\n    font-weight: normal;\n    font-size: 1.125rem;\n    text-shadow: 0 0 2rem rgba(0, 0, 0, 0.5);\n    margin: 0;\n\n    @media screen and (min-width: ${screenBreaks.medium}) {\n      font-size: 1.25rem;\n      margin: 0;\n    }\n  }\n\n  svg {\n    width: 1.75rem;\n    height: 1.75rem;\n    padding-right: 0.375rem;\n    cursor: pointer;\n\n    > * {\n      fill: white;\n    }\n  }\n`;\n\nexport default Message;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/message/index.js","module.exports = __webpack_public_path__ + \"static/media/red-brush.f8ffb539.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/red-brush.png\n// module id = 264\n// module chunks = 0 1 3 4 5 6 7 8 9","module.exports = __webpack_public_path__ + \"static/media/blue-brush.02499a4f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/blue-brush.png\n// module id = 265\n// module chunks = 0 1 3 4 5 6 7 8 9","'use strict';\n\nexports.__esModule = true;\n\nvar _Redirect = require('react-router/Redirect');\n\nvar _Redirect2 = _interopRequireDefault(_Redirect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Redirect2.default; // Written in this round about way for babel-transform-imports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router-dom/Redirect.js\n// module id = 266\n// module chunks = 0 1 2 3 4 5 6 8","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _history = require('history');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    (0, _invariant2.default)(this.context.router, 'You should not use <Redirect> outside a <Router>');\n\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = (0, _history.createLocation)(prevProps.to);\n    var nextTo = (0, _history.createLocation)(this.props.to);\n\n    if ((0, _history.locationsAreEqual)(prevTo, nextTo)) {\n      (0, _warning2.default)(false, 'You tried to redirect to the same route you\\'re currently on: ' + ('\"' + nextTo.pathname + nextTo.search + '\"'));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var _props = this.props,\n        push = _props.push,\n        to = _props.to;\n\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(_react2.default.Component);\n\nRedirect.propTypes = {\n  push: _propTypes2.default.bool,\n  from: _propTypes2.default.string,\n  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: _propTypes2.default.shape({\n    history: _propTypes2.default.shape({\n      push: _propTypes2.default.func.isRequired,\n      replace: _propTypes2.default.func.isRequired\n    }).isRequired,\n    staticContext: _propTypes2.default.object\n  }).isRequired\n};\nexports.default = Redirect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-router/Redirect.js\n// module id = 267\n// module chunks = 0 1 2 3 4 5 6 8","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Slate-specific model types.\n *\n * @type {Object}\n */\n\nvar MODEL_TYPES = {\n  BLOCK: '@@__SLATE_BLOCK__@@',\n  CHANGE: '@@__SLATE_CHANGE__@@',\n  CHARACTER: '@@__SLATE_CHARACTER__@@',\n  DOCUMENT: '@@__SLATE_DOCUMENT__@@',\n  HISTORY: '@@__SLATE_HISTORY__@@',\n  INLINE: '@@__SLATE_INLINE__@@',\n  LEAF: '@@__SLATE_LEAF__@@',\n  MARK: '@@__SLATE_MARK__@@',\n  OPERATION: '@@__SLATE_OPERATION__@@',\n  RANGE: '@@__SLATE_RANGE__@@',\n  SCHEMA: '@@__SLATE_SCHEMA__@@',\n  STACK: '@@__SLATE_STACK__@@',\n  TEXT: '@@__SLATE_TEXT__@@',\n  VALUE: '@@__SLATE_VALUE__@@'\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = MODEL_TYPES;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/constants/model-types.js\n// module id = 268\n// module chunks = 0","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isArray.js\n// module id = 271\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_root.js\n// module id = 272\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isObjectLike.js\n// module id = 273\n// module chunks = 0","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isObject.js\n// module id = 274\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _data = require('./data');\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _memoize = require('../utils/memoize');\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  type: undefined\n};\n\n/**\n * Mark.\n *\n * @type {Mark}\n */\n\nvar Mark = function (_Record) {\n  _inherits(Mark, _Record);\n\n  function Mark() {\n    _classCallCheck(this, Mark);\n\n    return _possibleConstructorReturn(this, (Mark.__proto__ || Object.getPrototypeOf(Mark)).apply(this, arguments));\n  }\n\n  _createClass(Mark, [{\n    key: 'getComponent',\n\n\n    /**\n     * Get the component for the node from a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Component|Void}\n     */\n\n    value: function getComponent(schema) {\n      return schema.__getComponent(this);\n    }\n\n    /**\n     * Return a JSON representation of the mark.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        type: this.type,\n        data: this.data.toJSON()\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     */\n\n    get: function get() {\n      return 'mark';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Mark` with `attrs`.\n     *\n     * @param {Object|Mark} attrs\n     * @return {Mark}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Mark.isMark(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Mark.fromJSON(attrs);\n      }\n\n      throw new Error('`Mark.create` only accepts objects, strings or marks, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a set of marks.\n     *\n     * @param {Array<Object|Mark>} elements\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'createSet',\n    value: function createSet(elements) {\n      if (_immutable.Set.isSet(elements) || Array.isArray(elements)) {\n        var marks = new _immutable.Set(elements.map(Mark.create));\n        return marks;\n      }\n\n      if (elements == null) {\n        return new _immutable.Set();\n      }\n\n      throw new Error('`Mark.createSet` only accepts sets, arrays or null, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a dictionary of settable mark properties from `attrs`.\n     *\n     * @param {Object|String|Mark} attrs\n     * @return {Object}\n     */\n\n  }, {\n    key: 'createProperties',\n    value: function createProperties() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Mark.isMark(attrs)) {\n        return {\n          data: attrs.data,\n          type: attrs.type\n        };\n      }\n\n      if (typeof attrs == 'string') {\n        return { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        var props = {};\n        if ('type' in attrs) props.type = attrs.type;\n        if ('data' in attrs) props.data = _data2.default.create(attrs.data);\n        return props;\n      }\n\n      throw new Error('`Mark.createProperties` only accepts objects, strings or marks, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Mark` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Mark}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var _object$data = object.data,\n          data = _object$data === undefined ? {} : _object$data,\n          type = object.type;\n\n\n      if (typeof type != 'string') {\n        throw new Error('`Mark.fromJS` requires a `type` string.');\n      }\n\n      var mark = new Mark({\n        type: type,\n        data: new _immutable.Map(data)\n      });\n\n      return mark;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isMark',\n\n\n    /**\n     * Check if `any` is a `Mark`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isMark(any) {\n      return !!(any && any[_modelTypes2.default.MARK]);\n    }\n\n    /**\n     * Check if `any` is a set of marks.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isMarkSet',\n    value: function isMarkSet(any) {\n      return _immutable.Set.isSet(any) && any.every(function (item) {\n        return Mark.isMark(item);\n      });\n    }\n  }]);\n\n  return Mark;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nMark.fromJS = Mark.fromJSON;\nMark.prototype[_modelTypes2.default.MARK] = true;\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Mark.prototype, ['getComponent'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Mark}\n */\n\nexports.default = Mark;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/mark.js\n// module id = 275\n// module chunks = 0","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\tvar queryStart = str.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn str.slice(queryStart + 1);\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^[?#&]/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeComponent(val);\n\n\t\tformatter(decodeComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tif (opts.sort === false) {\n\t\topts.sort = function () {};\n\t}\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort(opts.sort).map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\nexports.parseUrl = function (str, opts) {\n\treturn {\n\t\turl: str.split('?')[0] || '',\n\t\tquery: this.parse(this.extract(str), opts)\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/query-string/index.js\n// module id = 279\n// module chunks = 0 2 4 6","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/strict-uri-encode/index.js\n// module id = 280\n// module chunks = 0 2 4 6","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/decode-uri-component/index.js\n// module id = 281\n// module chunks = 0 2 4 6","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _direction = require('direction');\n\nvar _direction2 = _interopRequireDefault(_direction);\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _block = require('./block');\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _data = require('./data');\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _document = require('./document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _inline = require('./inline');\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _range8 = require('./range');\n\nvar _range9 = _interopRequireDefault(_range8);\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _generateKey = require('../utils/generate-key');\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nvar _isIndexInRange = require('../utils/is-index-in-range');\n\nvar _isIndexInRange2 = _interopRequireDefault(_isIndexInRange);\n\nvar _memoize = require('../utils/memoize');\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Node.\n *\n * And interface that `Document`, `Block` and `Inline` all implement, to make\n * working with the recursive node tree easier.\n *\n * @type {Node}\n */\n\nvar Node = function () {\n  function Node() {\n    _classCallCheck(this, Node);\n  }\n\n  _createClass(Node, [{\n    key: 'areDescendantsSorted',\n\n\n    /**\n     * True if the node has both descendants in that order, false otherwise. The\n     * order is depth-first, post-order.\n     *\n     * @param {String} first\n     * @param {String} second\n     * @return {Boolean}\n     */\n\n    value: function areDescendantsSorted(first, second) {\n      first = assertKey(first);\n      second = assertKey(second);\n\n      var keys = this.getKeysAsArray();\n      var firstIndex = keys.indexOf(first);\n      var secondIndex = keys.indexOf(second);\n      if (firstIndex == -1 || secondIndex == -1) return null;\n\n      return firstIndex < secondIndex;\n    }\n\n    /**\n     * Assert that a node has a child by `key` and return it.\n     *\n     * @param {String} key\n     * @return {Node}\n     */\n\n  }, {\n    key: 'assertChild',\n    value: function assertChild(key) {\n      var child = this.getChild(key);\n\n      if (!child) {\n        key = assertKey(key);\n        throw new Error('Could not find a child node with key \"' + key + '\".');\n      }\n\n      return child;\n    }\n\n    /**\n     * Assert that a node has a descendant by `key` and return it.\n     *\n     * @param {String} key\n     * @return {Node}\n     */\n\n  }, {\n    key: 'assertDescendant',\n    value: function assertDescendant(key) {\n      var descendant = this.getDescendant(key);\n\n      if (!descendant) {\n        key = assertKey(key);\n        throw new Error('Could not find a descendant node with key \"' + key + '\".');\n      }\n\n      return descendant;\n    }\n\n    /**\n     * Assert that a node's tree has a node by `key` and return it.\n     *\n     * @param {String} key\n     * @return {Node}\n     */\n\n  }, {\n    key: 'assertNode',\n    value: function assertNode(key) {\n      var node = this.getNode(key);\n\n      if (!node) {\n        key = assertKey(key);\n        throw new Error('Could not find a node with key \"' + key + '\".');\n      }\n\n      return node;\n    }\n\n    /**\n     * Assert that a node exists at `path` and return it.\n     *\n     * @param {Array} path\n     * @return {Node}\n     */\n\n  }, {\n    key: 'assertPath',\n    value: function assertPath(path) {\n      var descendant = this.getDescendantAtPath(path);\n\n      if (!descendant) {\n        throw new Error('Could not find a descendant at path \"' + path + '\".');\n      }\n\n      return descendant;\n    }\n\n    /**\n     * Recursively filter all descendant nodes with `iterator`.\n     *\n     * @param {Function} iterator\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'filterDescendants',\n    value: function filterDescendants(iterator) {\n      var matches = [];\n\n      this.forEachDescendant(function (node, i, nodes) {\n        if (iterator(node, i, nodes)) matches.push(node);\n      });\n\n      return (0, _immutable.List)(matches);\n    }\n\n    /**\n     * Recursively find all descendant nodes by `iterator`.\n     *\n     * @param {Function} iterator\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'findDescendant',\n    value: function findDescendant(iterator) {\n      var found = null;\n\n      this.forEachDescendant(function (node, i, nodes) {\n        if (iterator(node, i, nodes)) {\n          found = node;\n          return false;\n        }\n      });\n\n      return found;\n    }\n\n    /**\n     * Recursively iterate over all descendant nodes with `iterator`. If the\n     * iterator returns false it will break the loop.\n     *\n     * @param {Function} iterator\n     */\n\n  }, {\n    key: 'forEachDescendant',\n    value: function forEachDescendant(iterator) {\n      var ret = void 0;\n\n      this.nodes.forEach(function (child, i, nodes) {\n        if (iterator(child, i, nodes) === false) {\n          ret = false;\n          return false;\n        }\n\n        if (child.kind != 'text') {\n          ret = child.forEachDescendant(iterator);\n          return ret;\n        }\n      });\n\n      return ret;\n    }\n\n    /**\n     * Get the path of ancestors of a descendant node by `key`.\n     *\n     * @param {String|Node} key\n     * @return {List<Node>|Null}\n     */\n\n  }, {\n    key: 'getAncestors',\n    value: function getAncestors(key) {\n      key = assertKey(key);\n\n      if (key == this.key) return (0, _immutable.List)();\n      if (this.hasChild(key)) return (0, _immutable.List)([this]);\n\n      var ancestors = void 0;\n      this.nodes.find(function (node) {\n        if (node.kind == 'text') return false;\n        ancestors = node.getAncestors(key);\n        return ancestors;\n      });\n\n      if (ancestors) {\n        return ancestors.unshift(this);\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     * Get the leaf block descendants of the node.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getBlocks',\n    value: function getBlocks() {\n      var array = this.getBlocksAsArray();\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get the leaf block descendants of the node.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getBlocksAsArray',\n    value: function getBlocksAsArray() {\n      return this.nodes.reduce(function (array, child) {\n        if (child.kind != 'block') return array;\n        if (!child.isLeafBlock()) return array.concat(child.getBlocksAsArray());\n        array.push(child);\n        return array;\n      }, []);\n    }\n\n    /**\n     * Get the leaf block descendants in a `range`.\n     *\n     * @param {Range} range\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getBlocksAtRange',\n    value: function getBlocksAtRange(range) {\n      var array = this.getBlocksAtRangeAsArray(range);\n      // Eliminate duplicates by converting to an `OrderedSet` first.\n      return new _immutable.List(new _immutable.OrderedSet(array));\n    }\n\n    /**\n     * Get the leaf block descendants in a `range` as an array\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getBlocksAtRangeAsArray',\n    value: function getBlocksAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      var _range = range,\n          startKey = _range.startKey,\n          endKey = _range.endKey;\n\n      var startBlock = this.getClosestBlock(startKey);\n\n      // PERF: the most common case is when the range is in a single block node,\n      // where we can avoid a lot of iterating of the tree.\n      if (startKey == endKey) return [startBlock];\n\n      var endBlock = this.getClosestBlock(endKey);\n      var blocks = this.getBlocksAsArray();\n      var start = blocks.indexOf(startBlock);\n      var end = blocks.indexOf(endBlock);\n      return blocks.slice(start, end + 1);\n    }\n\n    /**\n     * Get all of the leaf blocks that match a `type`.\n     *\n     * @param {String} type\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getBlocksByType',\n    value: function getBlocksByType(type) {\n      var array = this.getBlocksByTypeAsArray(type);\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get all of the leaf blocks that match a `type` as an array\n     *\n     * @param {String} type\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getBlocksByTypeAsArray',\n    value: function getBlocksByTypeAsArray(type) {\n      return this.nodes.reduce(function (array, node) {\n        if (node.kind != 'block') {\n          return array;\n        } else if (node.isLeafBlock() && node.type == type) {\n          array.push(node);\n          return array;\n        } else {\n          return array.concat(node.getBlocksByTypeAsArray(type));\n        }\n      }, []);\n    }\n\n    /**\n     * Get all of the characters for every text node.\n     *\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'getCharacters',\n    value: function getCharacters() {\n      var array = this.getCharactersAsArray();\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get all of the characters for every text node as an array\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getCharactersAsArray',\n    value: function getCharactersAsArray() {\n      return this.nodes.reduce(function (arr, node) {\n        return node.kind == 'text' ? arr.concat(node.characters.toArray()) : arr.concat(node.getCharactersAsArray());\n      }, []);\n    }\n\n    /**\n     * Get a list of the characters in a `range`.\n     *\n     * @param {Range} range\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'getCharactersAtRange',\n    value: function getCharactersAtRange(range) {\n      var array = this.getCharactersAtRangeAsArray(range);\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get a list of the characters in a `range` as an array.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getCharactersAtRangeAsArray',\n    value: function getCharactersAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      return this.getTextsAtRange(range).reduce(function (arr, text) {\n        var chars = text.characters.filter(function (char, i) {\n          return (0, _isIndexInRange2.default)(i, text, range);\n        }).toArray();\n\n        return arr.concat(chars);\n      }, []);\n    }\n\n    /**\n     * Get a child node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getChild',\n    value: function getChild(key) {\n      key = assertKey(key);\n      return this.nodes.find(function (node) {\n        return node.key == key;\n      });\n    }\n\n    /**\n     * Get closest parent of node by `key` that matches `iterator`.\n     *\n     * @param {String} key\n     * @param {Function} iterator\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getClosest',\n    value: function getClosest(key, iterator) {\n      key = assertKey(key);\n      var ancestors = this.getAncestors(key);\n      if (!ancestors) {\n        throw new Error('Could not find a descendant node with key \"' + key + '\".');\n      }\n\n      // Exclude this node itself.\n      return ancestors.rest().findLast(iterator);\n    }\n\n    /**\n     * Get the closest block parent of a `node`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getClosestBlock',\n    value: function getClosestBlock(key) {\n      return this.getClosest(key, function (parent) {\n        return parent.kind == 'block';\n      });\n    }\n\n    /**\n     * Get the closest inline parent of a `node`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getClosestInline',\n    value: function getClosestInline(key) {\n      return this.getClosest(key, function (parent) {\n        return parent.kind == 'inline';\n      });\n    }\n\n    /**\n     * Get the closest void parent of a `node`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getClosestVoid',\n    value: function getClosestVoid(key) {\n      return this.getClosest(key, function (parent) {\n        return parent.isVoid;\n      });\n    }\n\n    /**\n     * Get the common ancestor of nodes `one` and `two` by keys.\n     *\n     * @param {String} one\n     * @param {String} two\n     * @return {Node}\n     */\n\n  }, {\n    key: 'getCommonAncestor',\n    value: function getCommonAncestor(one, two) {\n      one = assertKey(one);\n      two = assertKey(two);\n\n      if (one == this.key) return this;\n      if (two == this.key) return this;\n\n      this.assertDescendant(one);\n      this.assertDescendant(two);\n      var ancestors = new _immutable.List();\n      var oneParent = this.getParent(one);\n      var twoParent = this.getParent(two);\n\n      while (oneParent) {\n        ancestors = ancestors.push(oneParent);\n        oneParent = this.getParent(oneParent.key);\n      }\n\n      while (twoParent) {\n        if (ancestors.includes(twoParent)) return twoParent;\n        twoParent = this.getParent(twoParent.key);\n      }\n    }\n\n    /**\n     * Get the decorations for the node from a `stack`.\n     *\n     * @param {Stack} stack\n     * @return {List}\n     */\n\n  }, {\n    key: 'getDecorations',\n    value: function getDecorations(stack) {\n      var decorations = stack.find('decorateNode', this);\n      var list = _range9.default.createList(decorations || []);\n      return list;\n    }\n\n    /**\n     * Get the depth of a child node by `key`, with optional `startAt`.\n     *\n     * @param {String} key\n     * @param {Number} startAt (optional)\n     * @return {Number} depth\n     */\n\n  }, {\n    key: 'getDepth',\n    value: function getDepth(key) {\n      var startAt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      this.assertDescendant(key);\n      if (this.hasChild(key)) return startAt;\n      return this.getFurthestAncestor(key).getDepth(key, startAt + 1);\n    }\n\n    /**\n     * Get a descendant node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getDescendant',\n    value: function getDescendant(key) {\n      key = assertKey(key);\n      var descendantFound = null;\n\n      var found = this.nodes.find(function (node) {\n        if (node.key === key) {\n          return node;\n        } else if (node.kind !== 'text') {\n          descendantFound = node.getDescendant(key);\n          return descendantFound;\n        } else {\n          return false;\n        }\n      });\n\n      return descendantFound || found;\n    }\n\n    /**\n     * Get a descendant by `path`.\n     *\n     * @param {Array} path\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getDescendantAtPath',\n    value: function getDescendantAtPath(path) {\n      var descendant = this;\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = path[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var index = _step.value;\n\n          if (!descendant) return;\n          if (!descendant.nodes) return;\n          descendant = descendant.nodes.get(index);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return descendant;\n    }\n\n    /**\n     * Get the first child text node.\n     *\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFirstText',\n    value: function getFirstText() {\n      var descendantFound = null;\n\n      var found = this.nodes.find(function (node) {\n        if (node.kind == 'text') return true;\n        descendantFound = node.getFirstText();\n        return descendantFound;\n      });\n\n      return descendantFound || found;\n    }\n\n    /**\n     * Get a fragment of the node at a `range`.\n     *\n     * @param {Range} range\n     * @return {Document}\n     */\n\n  }, {\n    key: 'getFragmentAtRange',\n    value: function getFragmentAtRange(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return _document2.default.create();\n\n      var node = this;\n\n      // Make sure the children exist.\n      var _range2 = range,\n          startKey = _range2.startKey,\n          startOffset = _range2.startOffset,\n          endKey = _range2.endKey,\n          endOffset = _range2.endOffset;\n\n      var startText = node.assertDescendant(startKey);\n      var endText = node.assertDescendant(endKey);\n\n      // Split at the start and end.\n      var child = startText;\n      var previous = void 0;\n      var parent = void 0;\n\n      while (parent = node.getParent(child.key)) {\n        var index = parent.nodes.indexOf(child);\n        var position = child.kind == 'text' ? startOffset : child.nodes.indexOf(previous);\n\n        parent = parent.splitNode(index, position);\n        node = node.updateNode(parent);\n        previous = parent.nodes.get(index + 1);\n        child = parent;\n      }\n\n      child = startKey == endKey ? node.getNextText(startKey) : endText;\n\n      while (parent = node.getParent(child.key)) {\n        var _index = parent.nodes.indexOf(child);\n        var _position = child.kind == 'text' ? startKey == endKey ? endOffset - startOffset : endOffset : child.nodes.indexOf(previous);\n\n        parent = parent.splitNode(_index, _position);\n        node = node.updateNode(parent);\n        previous = parent.nodes.get(_index + 1);\n        child = parent;\n      }\n\n      // Get the start and end nodes.\n      var startNode = node.getNextSibling(node.getFurthestAncestor(startKey).key);\n      var endNode = startKey == endKey ? node.getNextSibling(node.getNextSibling(node.getFurthestAncestor(endKey).key).key) : node.getNextSibling(node.getFurthestAncestor(endKey).key);\n\n      // Get children range of nodes from start to end nodes\n      var startIndex = node.nodes.indexOf(startNode);\n      var endIndex = node.nodes.indexOf(endNode);\n      var nodes = node.nodes.slice(startIndex, endIndex);\n\n      // Return a new document fragment.\n      return _document2.default.create({ nodes: nodes });\n    }\n\n    /**\n     * Get the furthest parent of a node by `key` that matches an `iterator`.\n     *\n     * @param {String} key\n     * @param {Function} iterator\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthest',\n    value: function getFurthest(key, iterator) {\n      var ancestors = this.getAncestors(key);\n      if (!ancestors) {\n        key = assertKey(key);\n        throw new Error('Could not find a descendant node with key \"' + key + '\".');\n      }\n\n      // Exclude this node itself\n      return ancestors.rest().find(iterator);\n    }\n\n    /**\n     * Get the furthest block parent of a node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthestBlock',\n    value: function getFurthestBlock(key) {\n      return this.getFurthest(key, function (node) {\n        return node.kind == 'block';\n      });\n    }\n\n    /**\n     * Get the furthest inline parent of a node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthestInline',\n    value: function getFurthestInline(key) {\n      return this.getFurthest(key, function (node) {\n        return node.kind == 'inline';\n      });\n    }\n\n    /**\n     * Get the furthest ancestor of a node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthestAncestor',\n    value: function getFurthestAncestor(key) {\n      key = assertKey(key);\n      return this.nodes.find(function (node) {\n        if (node.key == key) return true;\n        if (node.kind == 'text') return false;\n        return node.hasDescendant(key);\n      });\n    }\n\n    /**\n     * Get the furthest ancestor of a node by `key` that has only one child.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getFurthestOnlyChildAncestor',\n    value: function getFurthestOnlyChildAncestor(key) {\n      var ancestors = this.getAncestors(key);\n\n      if (!ancestors) {\n        key = assertKey(key);\n        throw new Error('Could not find a descendant node with key \"' + key + '\".');\n      }\n\n      return ancestors\n      // Skip this node...\n      .skipLast()\n      // Take parents until there are more than one child...\n      .reverse().takeUntil(function (p) {\n        return p.nodes.size > 1;\n      })\n      // And pick the highest.\n      .last();\n    }\n\n    /**\n     * Get the closest inline nodes for each text node in the node.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getInlines',\n    value: function getInlines() {\n      var array = this.getInlinesAsArray();\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get the closest inline nodes for each text node in the node, as an array.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getInlinesAsArray',\n    value: function getInlinesAsArray() {\n      var array = [];\n\n      this.nodes.forEach(function (child) {\n        if (child.kind == 'text') return;\n        if (child.isLeafInline()) {\n          array.push(child);\n        } else {\n          array = array.concat(child.getInlinesAsArray());\n        }\n      });\n\n      return array;\n    }\n\n    /**\n     * Get the closest inline nodes for each text node in a `range`.\n     *\n     * @param {Range} range\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getInlinesAtRange',\n    value: function getInlinesAtRange(range) {\n      var array = this.getInlinesAtRangeAsArray(range);\n      // Remove duplicates by converting it to an `OrderedSet` first.\n      return new _immutable.List(new _immutable.OrderedSet(array));\n    }\n\n    /**\n     * Get the closest inline nodes for each text node in a `range` as an array.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getInlinesAtRangeAsArray',\n    value: function getInlinesAtRangeAsArray(range) {\n      var _this = this;\n\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      return this.getTextsAtRangeAsArray(range).map(function (text) {\n        return _this.getClosestInline(text.key);\n      }).filter(function (exists) {\n        return exists;\n      });\n    }\n\n    /**\n     * Get all of the leaf inline nodes that match a `type`.\n     *\n     * @param {String} type\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getInlinesByType',\n    value: function getInlinesByType(type) {\n      var array = this.getInlinesByTypeAsArray(type);\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get all of the leaf inline nodes that match a `type` as an array.\n     *\n     * @param {String} type\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getInlinesByTypeAsArray',\n    value: function getInlinesByTypeAsArray(type) {\n      return this.nodes.reduce(function (inlines, node) {\n        if (node.kind == 'text') {\n          return inlines;\n        } else if (node.isLeafInline() && node.type == type) {\n          inlines.push(node);\n          return inlines;\n        } else {\n          return inlines.concat(node.getInlinesByTypeAsArray(type));\n        }\n      }, []);\n    }\n\n    /**\n     * Return a set of all keys in the node as an array.\n     *\n     * @return {Array<String>}\n     */\n\n  }, {\n    key: 'getKeysAsArray',\n    value: function getKeysAsArray() {\n      var keys = [];\n\n      this.forEachDescendant(function (desc) {\n        keys.push(desc.key);\n      });\n\n      return keys;\n    }\n\n    /**\n     * Return a set of all keys in the node.\n     *\n     * @return {Set<String>}\n     */\n\n  }, {\n    key: 'getKeys',\n    value: function getKeys() {\n      var keys = this.getKeysAsArray();\n      return new _immutable.Set(keys);\n    }\n\n    /**\n     * Get the last child text node.\n     *\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getLastText',\n    value: function getLastText() {\n      var descendantFound = null;\n\n      var found = this.nodes.findLast(function (node) {\n        if (node.kind == 'text') return true;\n        descendantFound = node.getLastText();\n        return descendantFound;\n      });\n\n      return descendantFound || found;\n    }\n\n    /**\n     * Get all of the marks for all of the characters of every text node.\n     *\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getMarks',\n    value: function getMarks() {\n      var array = this.getMarksAsArray();\n      return new _immutable.Set(array);\n    }\n\n    /**\n     * Get all of the marks for all of the characters of every text node.\n     *\n     * @return {OrderedSet<Mark>}\n     */\n\n  }, {\n    key: 'getOrderedMarks',\n    value: function getOrderedMarks() {\n      var array = this.getMarksAsArray();\n      return new _immutable.OrderedSet(array);\n    }\n\n    /**\n     * Get all of the marks as an array.\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getMarksAsArray',\n    value: function getMarksAsArray() {\n      return this.nodes.reduce(function (marks, node) {\n        return marks.concat(node.getMarksAsArray());\n      }, []);\n    }\n\n    /**\n     * Get a set of the marks in a `range`.\n     *\n     * @param {Range} range\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getMarksAtRange',\n    value: function getMarksAtRange(range) {\n      var array = this.getMarksAtRangeAsArray(range);\n      return new _immutable.Set(array);\n    }\n\n    /**\n     * Get a set of the marks in a `range`.\n     *\n     * @param {Range} range\n     * @return {OrderedSet<Mark>}\n     */\n\n  }, {\n    key: 'getOrderedMarksAtRange',\n    value: function getOrderedMarksAtRange(range) {\n      var array = this.getMarksAtRangeAsArray(range);\n      return new _immutable.OrderedSet(array);\n    }\n\n    /**\n     * Get a set of the active marks in a `range`.\n     *\n     * @param {Range} range\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getActiveMarksAtRange',\n    value: function getActiveMarksAtRange(range) {\n      var array = this.getActiveMarksAtRangeAsArray(range);\n      return new _immutable.Set(array);\n    }\n\n    /**\n     * Get a set of the marks in a `range`, by unioning.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getMarksAtRangeAsArray',\n    value: function getMarksAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      var _range3 = range,\n          startKey = _range3.startKey,\n          startOffset = _range3.startOffset;\n\n      // If the range is collapsed at the start of the node, check the previous.\n\n      if (range.isCollapsed && startOffset == 0) {\n        var previous = this.getPreviousText(startKey);\n        if (!previous || previous.text.length == 0) return [];\n        var char = previous.characters.get(previous.text.length - 1);\n        return char.marks.toArray();\n      }\n\n      // If the range is collapsed, check the character before the start.\n      if (range.isCollapsed) {\n        var text = this.getDescendant(startKey);\n        var _char = text.characters.get(range.startOffset - 1);\n        return _char.marks.toArray();\n      }\n\n      // Otherwise, get a set of the marks for each character in the range.\n      return this.getCharactersAtRange(range).reduce(function (memo, char) {\n        char.marks.toArray().forEach(function (c) {\n          return memo.push(c);\n        });\n        return memo;\n      }, []);\n    }\n\n    /**\n     * Get a set of marks in a `range`, by intersecting.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getActiveMarksAtRangeAsArray',\n    value: function getActiveMarksAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      var _range4 = range,\n          startKey = _range4.startKey,\n          startOffset = _range4.startOffset;\n\n      // If the range is collapsed at the start of the node, check the previous.\n\n      if (range.isCollapsed && startOffset == 0) {\n        var previous = this.getPreviousText(startKey);\n        if (!previous || previous.text.length == 0) return [];\n        var char = previous.characters.get(previous.text.length - 1);\n        return char.marks.toArray();\n      }\n\n      // If the range is collapsed, check the character before the start.\n      if (range.isCollapsed) {\n        var text = this.getDescendant(startKey);\n        var _char2 = text.characters.get(range.startOffset - 1);\n        return _char2.marks.toArray();\n      }\n\n      // Otherwise, get a set of the marks for each character in the range.\n      var chars = this.getCharactersAtRange(range);\n      var first = chars.first();\n      if (!first) return [];\n\n      var memo = first.marks;\n\n      chars.slice(1).forEach(function (char) {\n        memo = memo.intersect(char.marks);\n        return memo.size != 0;\n      });\n\n      return memo.toArray();\n    }\n\n    /**\n     * Get all of the marks that match a `type`.\n     *\n     * @param {String} type\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getMarksByType',\n    value: function getMarksByType(type) {\n      var array = this.getMarksByTypeAsArray(type);\n      return new _immutable.Set(array);\n    }\n\n    /**\n     * Get all of the marks that match a `type`.\n     *\n     * @param {String} type\n     * @return {OrderedSet<Mark>}\n     */\n\n  }, {\n    key: 'getOrderedMarksByType',\n    value: function getOrderedMarksByType(type) {\n      var array = this.getMarksByTypeAsArray(type);\n      return new _immutable.OrderedSet(array);\n    }\n\n    /**\n     * Get all of the marks that match a `type` as an array.\n     *\n     * @param {String} type\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getMarksByTypeAsArray',\n    value: function getMarksByTypeAsArray(type) {\n      return this.nodes.reduce(function (array, node) {\n        return node.kind == 'text' ? array.concat(node.getMarksAsArray().filter(function (m) {\n          return m.type == type;\n        })) : array.concat(node.getMarksByTypeAsArray(type));\n      }, []);\n    }\n\n    /**\n     * Get the block node before a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNextBlock',\n    value: function getNextBlock(key) {\n      var child = this.assertDescendant(key);\n      var last = void 0;\n\n      if (child.kind == 'block') {\n        last = child.getLastText();\n      } else {\n        var block = this.getClosestBlock(key);\n        last = block.getLastText();\n      }\n\n      var next = this.getNextText(last.key);\n      if (!next) return null;\n\n      return this.getClosestBlock(next.key);\n    }\n\n    /**\n     * Get the node after a descendant by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNextSibling',\n    value: function getNextSibling(key) {\n      key = assertKey(key);\n\n      var parent = this.getParent(key);\n      var after = parent.nodes.skipUntil(function (child) {\n        return child.key == key;\n      });\n\n      if (after.size == 0) {\n        throw new Error('Could not find a child node with key \"' + key + '\".');\n      }\n      return after.get(1);\n    }\n\n    /**\n     * Get the text node after a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNextText',\n    value: function getNextText(key) {\n      key = assertKey(key);\n      return this.getTexts().skipUntil(function (text) {\n        return text.key == key;\n      }).get(1);\n    }\n\n    /**\n     * Get a node in the tree by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNode',\n    value: function getNode(key) {\n      key = assertKey(key);\n      return this.key == key ? this : this.getDescendant(key);\n    }\n\n    /**\n     * Get a node in the tree by `path`.\n     *\n     * @param {Array} path\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNodeAtPath',\n    value: function getNodeAtPath(path) {\n      return path.length ? this.getDescendantAtPath(path) : this;\n    }\n\n    /**\n     * Get the offset for a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Number}\n     */\n\n  }, {\n    key: 'getOffset',\n    value: function getOffset(key) {\n      this.assertDescendant(key);\n\n      // Calculate the offset of the nodes before the highest child.\n      var child = this.getFurthestAncestor(key);\n      var offset = this.nodes.takeUntil(function (n) {\n        return n == child;\n      }).reduce(function (memo, n) {\n        return memo + n.text.length;\n      }, 0);\n\n      // Recurse if need be.\n      return this.hasChild(key) ? offset : offset + child.getOffset(key);\n    }\n\n    /**\n     * Get the offset from a `range`.\n     *\n     * @param {Range} range\n     * @return {Number}\n     */\n\n  }, {\n    key: 'getOffsetAtRange',\n    value: function getOffsetAtRange(range) {\n      range = range.normalize(this);\n\n      if (range.isUnset) {\n        throw new Error('The range cannot be unset to calculcate its offset.');\n      }\n\n      if (range.isExpanded) {\n        throw new Error('The range must be collapsed to calculcate its offset.');\n      }\n\n      var _range5 = range,\n          startKey = _range5.startKey,\n          startOffset = _range5.startOffset;\n\n      return this.getOffset(startKey) + startOffset;\n    }\n\n    /**\n     * Get the parent of a child node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getParent',\n    value: function getParent(key) {\n      if (this.hasChild(key)) return this;\n\n      var node = null;\n\n      this.nodes.find(function (child) {\n        if (child.kind == 'text') {\n          return false;\n        } else {\n          node = child.getParent(key);\n          return node;\n        }\n      });\n\n      return node;\n    }\n\n    /**\n     * Get the path of a descendant node by `key`.\n     *\n     * @param {String|Node} key\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getPath',\n    value: function getPath(key) {\n      var child = this.assertNode(key);\n      var ancestors = this.getAncestors(key);\n      var path = [];\n\n      ancestors.reverse().forEach(function (ancestor) {\n        var index = ancestor.nodes.indexOf(child);\n        path.unshift(index);\n        child = ancestor;\n      });\n\n      return path;\n    }\n\n    /**\n     * Get the placeholder for the node from a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Component|Void}\n     */\n\n  }, {\n    key: 'getPlaceholder',\n    value: function getPlaceholder(schema) {\n      return schema.__getPlaceholder(this);\n    }\n\n    /**\n     * Get the block node before a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getPreviousBlock',\n    value: function getPreviousBlock(key) {\n      var child = this.assertDescendant(key);\n      var first = void 0;\n\n      if (child.kind == 'block') {\n        first = child.getFirstText();\n      } else {\n        var block = this.getClosestBlock(key);\n        first = block.getFirstText();\n      }\n\n      var previous = this.getPreviousText(first.key);\n      if (!previous) return null;\n\n      return this.getClosestBlock(previous.key);\n    }\n\n    /**\n     * Get the node before a descendant node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getPreviousSibling',\n    value: function getPreviousSibling(key) {\n      key = assertKey(key);\n      var parent = this.getParent(key);\n      var before = parent.nodes.takeUntil(function (child) {\n        return child.key == key;\n      });\n\n      if (before.size == parent.nodes.size) {\n        throw new Error('Could not find a child node with key \"' + key + '\".');\n      }\n\n      return before.last();\n    }\n\n    /**\n     * Get the text node before a descendant text node by `key`.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getPreviousText',\n    value: function getPreviousText(key) {\n      key = assertKey(key);\n      return this.getTexts().takeUntil(function (text) {\n        return text.key == key;\n      }).last();\n    }\n\n    /**\n     * Get the indexes of the selection for a `range`, given an extra flag for\n     * whether the node `isSelected`, to determine whether not finding matches\n     * means everything is selected or nothing is.\n     *\n     * @param {Range} range\n     * @param {Boolean} isSelected\n     * @return {Object|Null}\n     */\n\n  }, {\n    key: 'getSelectionIndexes',\n    value: function getSelectionIndexes(range) {\n      var isSelected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var startKey = range.startKey,\n          endKey = range.endKey;\n\n      // PERF: if we're not selected, or the range is blurred, we can exit early.\n\n      if (!isSelected || range.isBlurred) {\n        return null;\n      }\n\n      // if we've been given an invalid selection we can exit early.\n      if (range.isUnset) {\n        return null;\n      }\n\n      // PERF: if the start and end keys are the same, just check for the child\n      // that contains that single key.\n      if (startKey == endKey) {\n        var child = this.getFurthestAncestor(startKey);\n        var index = child ? this.nodes.indexOf(child) : null;\n        return { start: index, end: index + 1 };\n      }\n\n      // Otherwise, check all of the children...\n      var start = null;\n      var end = null;\n\n      this.nodes.forEach(function (child, i) {\n        if (child.kind == 'text') {\n          if (start == null && child.key == startKey) start = i;\n          if (end == null && child.key == endKey) end = i + 1;\n        } else {\n          if (start == null && child.hasDescendant(startKey)) start = i;\n          if (end == null && child.hasDescendant(endKey)) end = i + 1;\n        }\n\n        // PERF: exit early if both start and end have been found.\n        return start == null || end == null;\n      });\n\n      if (isSelected && start == null) start = 0;\n      if (isSelected && end == null) end = this.nodes.size;\n      return start == null ? null : { start: start, end: end };\n    }\n\n    /**\n     * Get the concatenated text string of all child nodes.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'getText',\n    value: function getText() {\n      return this.nodes.reduce(function (string, node) {\n        return string + node.text;\n      }, '');\n    }\n\n    /**\n     * Get the descendent text node at an `offset`.\n     *\n     * @param {String} offset\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getTextAtOffset',\n    value: function getTextAtOffset(offset) {\n      // PERF: Add a few shortcuts for the obvious cases.\n      if (offset == 0) return this.getFirstText();\n      if (offset == this.text.length) return this.getLastText();\n      if (offset < 0 || offset > this.text.length) return null;\n\n      var length = 0;\n\n      return this.getTexts().find(function (node, i, nodes) {\n        length += node.text.length;\n        return length > offset;\n      });\n    }\n\n    /**\n     * Get the direction of the node's text.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'getTextDirection',\n    value: function getTextDirection() {\n      var dir = (0, _direction2.default)(this.text);\n      return dir == 'neutral' ? undefined : dir;\n    }\n\n    /**\n     * Recursively get all of the child text nodes in order of appearance.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getTexts',\n    value: function getTexts() {\n      var array = this.getTextsAsArray();\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Recursively get all the leaf text nodes in order of appearance, as array.\n     *\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getTextsAsArray',\n    value: function getTextsAsArray() {\n      var array = [];\n\n      this.nodes.forEach(function (node) {\n        if (node.kind == 'text') {\n          array.push(node);\n        } else {\n          array = array.concat(node.getTextsAsArray());\n        }\n      });\n\n      return array;\n    }\n\n    /**\n     * Get all of the text nodes in a `range`.\n     *\n     * @param {Range} range\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'getTextsAtRange',\n    value: function getTextsAtRange(range) {\n      var array = this.getTextsAtRangeAsArray(range);\n      return new _immutable.List(array);\n    }\n\n    /**\n     * Get all of the text nodes in a `range` as an array.\n     *\n     * @param {Range} range\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getTextsAtRangeAsArray',\n    value: function getTextsAtRangeAsArray(range) {\n      range = range.normalize(this);\n      if (range.isUnset) return [];\n\n      var _range6 = range,\n          startKey = _range6.startKey,\n          endKey = _range6.endKey;\n\n      var startText = this.getDescendant(startKey);\n\n      // PERF: the most common case is when the range is in a single text node,\n      // where we can avoid a lot of iterating of the tree.\n      if (startKey == endKey) return [startText];\n\n      var endText = this.getDescendant(endKey);\n      var texts = this.getTextsAsArray();\n      var start = texts.indexOf(startText);\n      var end = texts.indexOf(endText);\n      return texts.slice(start, end + 1);\n    }\n\n    /**\n     * Check if a child node exists by `key`.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasChild',\n    value: function hasChild(key) {\n      return !!this.getChild(key);\n    }\n\n    /**\n     * Recursively check if a child node exists by `key`.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasDescendant',\n    value: function hasDescendant(key) {\n      return !!this.getDescendant(key);\n    }\n\n    /**\n     * Recursively check if a node exists by `key`.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasNode',\n    value: function hasNode(key) {\n      return !!this.getNode(key);\n    }\n\n    /**\n     * Check if a node has a void parent by `key`.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasVoidParent',\n    value: function hasVoidParent(key) {\n      return !!this.getClosest(key, function (parent) {\n        return parent.isVoid;\n      });\n    }\n\n    /**\n     * Insert a `node` at `index`.\n     *\n     * @param {Number} index\n     * @param {Node} node\n     * @return {Node}\n     */\n\n  }, {\n    key: 'insertNode',\n    value: function insertNode(index, node) {\n      var keys = this.getKeys();\n\n      if (keys.contains(node.key)) {\n        node = node.regenerateKey();\n      }\n\n      if (node.kind != 'text') {\n        node = node.mapDescendants(function (desc) {\n          return keys.contains(desc.key) ? desc.regenerateKey() : desc;\n        });\n      }\n\n      var nodes = this.nodes.insert(index, node);\n      return this.set('nodes', nodes);\n    }\n\n    /**\n     * Check whether the node is in a `range`.\n     *\n     * @param {Range} range\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isInRange',\n    value: function isInRange(range) {\n      range = range.normalize(this);\n\n      var node = this;\n      var _range7 = range,\n          startKey = _range7.startKey,\n          endKey = _range7.endKey,\n          isCollapsed = _range7.isCollapsed;\n\n      // PERF: solve the most common cast where the start or end key are inside\n      // the node, for collapsed selections.\n\n      if (node.key == startKey || node.key == endKey || node.hasDescendant(startKey) || node.hasDescendant(endKey)) {\n        return true;\n      }\n\n      // PERF: if the selection is collapsed and the previous check didn't return\n      // true, then it must be false.\n      if (isCollapsed) {\n        return false;\n      }\n\n      // Otherwise, look through all of the leaf text nodes in the range, to see\n      // if any of them are inside the node.\n      var texts = node.getTextsAtRange(range);\n      var memo = false;\n\n      texts.forEach(function (text) {\n        if (node.hasDescendant(text.key)) memo = true;\n        return memo;\n      });\n\n      return memo;\n    }\n\n    /**\n     * Check whether the node is a leaf block.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isLeafBlock',\n    value: function isLeafBlock() {\n      return this.kind == 'block' && this.nodes.every(function (n) {\n        return n.kind != 'block';\n      });\n    }\n\n    /**\n     * Check whether the node is a leaf inline.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isLeafInline',\n    value: function isLeafInline() {\n      return this.kind == 'inline' && this.nodes.every(function (n) {\n        return n.kind != 'inline';\n      });\n    }\n\n    /**\n     * Merge a children node `first` with another children node `second`.\n     * `first` and `second` will be concatenated in that order.\n     * `first` and `second` must be two Nodes or two Text.\n     *\n     * @param {Node} first\n     * @param {Node} second\n     * @return {Node}\n     */\n\n  }, {\n    key: 'mergeNode',\n    value: function mergeNode(withIndex, index) {\n      var node = this;\n      var one = node.nodes.get(withIndex);\n      var two = node.nodes.get(index);\n\n      if (one.kind != two.kind) {\n        throw new Error('Tried to merge two nodes of different kinds: \"' + one.kind + '\" and \"' + two.kind + '\".');\n      }\n\n      // If the nodes are text nodes, concatenate their characters together.\n      if (one.kind == 'text') {\n        var characters = one.characters.concat(two.characters);\n        one = one.set('characters', characters);\n      }\n\n      // Otherwise, concatenate their child nodes together.\n      else {\n          var nodes = one.nodes.concat(two.nodes);\n          one = one.set('nodes', nodes);\n        }\n\n      node = node.removeNode(index);\n      node = node.removeNode(withIndex);\n      node = node.insertNode(withIndex, one);\n      return node;\n    }\n\n    /**\n     * Map all child nodes, updating them in their parents. This method is\n     * optimized to not return a new node if no changes are made.\n     *\n     * @param {Function} iterator\n     * @return {Node}\n     */\n\n  }, {\n    key: 'mapChildren',\n    value: function mapChildren(iterator) {\n      var _this2 = this;\n\n      var nodes = this.nodes;\n\n\n      nodes.forEach(function (node, i) {\n        var ret = iterator(node, i, _this2.nodes);\n        if (ret != node) nodes = nodes.set(ret.key, ret);\n      });\n\n      return this.set('nodes', nodes);\n    }\n\n    /**\n     * Map all descendant nodes, updating them in their parents. This method is\n     * optimized to not return a new node if no changes are made.\n     *\n     * @param {Function} iterator\n     * @return {Node}\n     */\n\n  }, {\n    key: 'mapDescendants',\n    value: function mapDescendants(iterator) {\n      var _this3 = this;\n\n      var nodes = this.nodes;\n\n\n      nodes.forEach(function (node, i) {\n        var ret = node;\n        if (ret.kind != 'text') ret = ret.mapDescendants(iterator);\n        ret = iterator(ret, i, _this3.nodes);\n        if (ret == node) return;\n\n        var index = nodes.indexOf(node);\n        nodes = nodes.set(index, ret);\n      });\n\n      return this.set('nodes', nodes);\n    }\n\n    /**\n     * Regenerate the node's key.\n     *\n     * @return {Node}\n     */\n\n  }, {\n    key: 'regenerateKey',\n    value: function regenerateKey() {\n      var key = (0, _generateKey2.default)();\n      return this.set('key', key);\n    }\n\n    /**\n     * Remove a `node` from the children node map.\n     *\n     * @param {String} key\n     * @return {Node}\n     */\n\n  }, {\n    key: 'removeDescendant',\n    value: function removeDescendant(key) {\n      key = assertKey(key);\n\n      var node = this;\n      var parent = node.getParent(key);\n      if (!parent) throw new Error('Could not find a descendant node with key \"' + key + '\".');\n\n      var index = parent.nodes.findIndex(function (n) {\n        return n.key === key;\n      });\n      var nodes = parent.nodes.splice(index, 1);\n\n      parent = parent.set('nodes', nodes);\n      node = node.updateNode(parent);\n      return node;\n    }\n\n    /**\n     * Remove a node at `index`.\n     *\n     * @param {Number} index\n     * @return {Node}\n     */\n\n  }, {\n    key: 'removeNode',\n    value: function removeNode(index) {\n      var nodes = this.nodes.splice(index, 1);\n      return this.set('nodes', nodes);\n    }\n\n    /**\n     * Split a child node by `index` at `position`.\n     *\n     * @param {Number} index\n     * @param {Number} position\n     * @return {Node}\n     */\n\n  }, {\n    key: 'splitNode',\n    value: function splitNode(index, position) {\n      var node = this;\n      var child = node.nodes.get(index);\n      var one = void 0;\n      var two = void 0;\n\n      // If the child is a text node, the `position` refers to the text offset at\n      // which to split it.\n      if (child.kind == 'text') {\n        var befores = child.characters.take(position);\n        var afters = child.characters.skip(position);\n        one = child.set('characters', befores);\n        two = child.set('characters', afters).regenerateKey();\n      }\n\n      // Otherwise, if the child is not a text node, the `position` refers to the\n      // index at which to split its children.\n      else {\n          var _befores = child.nodes.take(position);\n          var _afters = child.nodes.skip(position);\n          one = child.set('nodes', _befores);\n          two = child.set('nodes', _afters).regenerateKey();\n        }\n\n      // Remove the old node and insert the newly split children.\n      node = node.removeNode(index);\n      node = node.insertNode(index, two);\n      node = node.insertNode(index, one);\n      return node;\n    }\n\n    /**\n     * Set a new value for a child node by `key`.\n     *\n     * @param {Node} node\n     * @return {Node}\n     */\n\n  }, {\n    key: 'updateNode',\n    value: function updateNode(node) {\n      if (node.key == this.key) {\n        return node;\n      }\n\n      var child = this.assertDescendant(node.key);\n      var ancestors = this.getAncestors(node.key);\n\n      ancestors.reverse().forEach(function (parent) {\n        var _parent = parent,\n            nodes = _parent.nodes;\n\n        var index = nodes.indexOf(child);\n        child = parent;\n        nodes = nodes.set(index, node);\n        parent = parent.set('nodes', nodes);\n        node = parent;\n      });\n\n      return node;\n    }\n\n    /**\n     * Validate the node against a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Function|Null}\n     */\n\n  }, {\n    key: 'validate',\n    value: function validate(schema) {\n      return schema.validateNode(this);\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Node` with `attrs`.\n     *\n     * @param {Object|Node} attrs\n     * @return {Node}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Node.isNode(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        switch (attrs.kind) {\n          case 'block':\n            return _block2.default.create(attrs);\n          case 'document':\n            return _document2.default.create(attrs);\n          case 'inline':\n            return _inline2.default.create(attrs);\n          case 'text':\n            return _text2.default.create(attrs);\n          default:\n            {\n              throw new Error('`Node.create` requires a `kind` string.');\n            }\n        }\n      }\n\n      throw new Error('`Node.create` only accepts objects or nodes but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Nodes` from an array.\n     *\n     * @param {Array<Object|Node>} elements\n     * @return {List<Node>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Node.create));\n        return list;\n      }\n\n      throw new Error('`Node.createList` only accepts lists or arrays, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a dictionary of settable node properties from `attrs`.\n     *\n     * @param {Object|String|Node} attrs\n     * @return {Object}\n     */\n\n  }, {\n    key: 'createProperties',\n    value: function createProperties() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (_block2.default.isBlock(attrs) || _inline2.default.isInline(attrs)) {\n        return {\n          data: attrs.data,\n          isVoid: attrs.isVoid,\n          type: attrs.type\n        };\n      }\n\n      if (typeof attrs == 'string') {\n        return { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        var props = {};\n        if ('type' in attrs) props.type = attrs.type;\n        if ('data' in attrs) props.data = _data2.default.create(attrs.data);\n        if ('isVoid' in attrs) props.isVoid = attrs.isVoid;\n        return props;\n      }\n\n      throw new Error('`Node.createProperties` only accepts objects, strings, blocks or inlines, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Node` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Node}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var kind = object.kind;\n\n\n      switch (kind) {\n        case 'block':\n          return _block2.default.fromJSON(object);\n        case 'document':\n          return _document2.default.fromJSON(object);\n        case 'inline':\n          return _inline2.default.fromJSON(object);\n        case 'text':\n          return _text2.default.fromJSON(object);\n        default:\n          {\n            throw new Error('`Node.fromJSON` requires a `kind` of either \\'block\\', \\'document\\', \\'inline\\' or \\'text\\', but you passed: ' + kind);\n          }\n      }\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isNode',\n\n\n    /**\n     * Check if `any` is a `Node`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isNode(any) {\n      return _block2.default.isBlock(any) || _document2.default.isDocument(any) || _inline2.default.isInline(any) || _text2.default.isText(any);\n    }\n\n    /**\n     * Check if `any` is a list of nodes.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isNodeList',\n    value: function isNodeList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Node.isNode(item);\n      });\n    }\n  }]);\n\n  return Node;\n}();\n\n/**\n * Assert a key `arg`.\n *\n * @param {String} arg\n * @return {String}\n */\n\nNode.fromJS = Node.fromJSON;\nfunction assertKey(arg) {\n  if (typeof arg == 'string') return arg;\n  throw new Error('Invalid `key` argument! It must be a key string, but you passed: ' + arg);\n}\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Node.prototype, ['getBlocks', 'getBlocksAsArray', 'getCharacters', 'getCharactersAsArray', 'getFirstText', 'getInlines', 'getInlinesAsArray', 'getKeys', 'getKeysAsArray', 'getLastText', 'getMarks', 'getOrderedMarks', 'getMarksAsArray', 'getText', 'getTextDirection', 'getTexts', 'getTextsAsArray', 'isLeafBlock', 'isLeafInline'], {\n  takesArguments: false\n});\n\n(0, _memoize2.default)(Node.prototype, ['areDescendantsSorted', 'getActiveMarksAtRange', 'getActiveMarksAtRangeAsArray', 'getAncestors', 'getBlocksAtRange', 'getBlocksAtRangeAsArray', 'getBlocksByType', 'getBlocksByTypeAsArray', 'getCharactersAtRange', 'getCharactersAtRangeAsArray', 'getChild', 'getClosestBlock', 'getClosestInline', 'getClosestVoid', 'getCommonAncestor', 'getDecorations', 'getDepth', 'getDescendant', 'getDescendantAtPath', 'getFragmentAtRange', 'getFurthestBlock', 'getFurthestInline', 'getFurthestAncestor', 'getFurthestOnlyChildAncestor', 'getInlinesAtRange', 'getInlinesAtRangeAsArray', 'getInlinesByType', 'getInlinesByTypeAsArray', 'getMarksAtRange', 'getOrderedMarksAtRange', 'getMarksAtRangeAsArray', 'getMarksByType', 'getOrderedMarksByType', 'getMarksByTypeAsArray', 'getNextBlock', 'getNextSibling', 'getNextText', 'getNode', 'getNodeAtPath', 'getOffset', 'getOffsetAtRange', 'getParent', 'getPath', 'getPlaceholder', 'getPreviousBlock', 'getPreviousSibling', 'getPreviousText', 'getTextAtOffset', 'getTextsAtRange', 'getTextsAtRangeAsArray', 'hasChild', 'hasDescendant', 'hasNode', 'hasVoidParent', 'validate'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Node;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/node.js\n// module id = 282\n// module chunks = 0","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getNative.js\n// module id = 283\n// module chunks = 0","module.exports = __webpack_public_path__ + \"static/media/orange-brush1.8b2abd28.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/orange-brush1.png\n// module id = 284\n// module chunks = 0 1 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nrequire('./document');\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _generateKey = require('../utils/generate-key');\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/**\n * Prevent circular dependencies.\n */\n\n/**\n * Dependencies.\n */\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  isVoid: false,\n  key: undefined,\n  nodes: new _immutable.List(),\n  type: undefined\n};\n\n/**\n * Block.\n *\n * @type {Block}\n */\n\nvar Block = function (_Record) {\n  _inherits(Block, _Record);\n\n  function Block() {\n    _classCallCheck(this, Block);\n\n    return _possibleConstructorReturn(this, (Block.__proto__ || Object.getPrototypeOf(Block)).apply(this, arguments));\n  }\n\n  _createClass(Block, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the block.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        type: this.type,\n        isVoid: this.isVoid,\n        data: this.data.toJSON(),\n        nodes: this.nodes.toArray().map(function (n) {\n          return n.toJSON(options);\n        })\n      };\n\n      if (options.preserveKeys) {\n        object.key = this.key;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'block';\n    }\n\n    /**\n     * Check if the block is empty.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      return this.text == '';\n    }\n\n    /**\n     * Get the concatenated text of all the block's children.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'text',\n    get: function get() {\n      return this.getText();\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Block` from `attrs`.\n     *\n     * @param {Object|String|Block} attrs\n     * @return {Block}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Block.isBlock(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Block.fromJSON(attrs);\n      }\n\n      throw new Error('`Block.create` only accepts objects, strings or blocks, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Blocks` from `attrs`.\n     *\n     * @param {Array<Block|Object>|List<Block|Object>} attrs\n     * @return {List<Block>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(attrs) || Array.isArray(attrs)) {\n        var list = new _immutable.List(attrs.map(Block.create));\n        return list;\n      }\n\n      throw new Error('`Block.createList` only accepts arrays or lists, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Block` from a JSON `object`.\n     *\n     * @param {Object|Block} object\n     * @return {Block}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Block.isBlock(object)) {\n        return object;\n      }\n\n      var _object$data = object.data,\n          data = _object$data === undefined ? {} : _object$data,\n          _object$isVoid = object.isVoid,\n          isVoid = _object$isVoid === undefined ? false : _object$isVoid,\n          _object$key = object.key,\n          key = _object$key === undefined ? (0, _generateKey2.default)() : _object$key,\n          _object$nodes = object.nodes,\n          nodes = _object$nodes === undefined ? [] : _object$nodes,\n          type = object.type;\n\n\n      if (typeof type != 'string') {\n        throw new Error('`Block.fromJSON` requires a `type` string.');\n      }\n\n      var block = new Block({\n        key: key,\n        type: type,\n        isVoid: !!isVoid,\n        data: new _immutable.Map(data),\n        nodes: new _immutable.List(nodes.map(_node2.default.fromJSON))\n      });\n\n      return block;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isBlock',\n\n\n    /**\n     * Check if `any` is a `Block`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isBlock(any) {\n      return !!(any && any[_modelTypes2.default.BLOCK]);\n    }\n\n    /**\n     * Check if `any` is a block list.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isBlockList',\n    value: function isBlockList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Block.isBlock(item);\n      });\n    }\n  }]);\n\n  return Block;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nBlock.fromJS = Block.fromJSON;\nBlock.prototype[_modelTypes2.default.BLOCK] = true;\n\n/**\n * Mix in `Node` methods.\n */\n\nObject.getOwnPropertyNames(_node2.default.prototype).forEach(function (method) {\n  if (method == 'constructor') return;\n  Block.prototype[method] = _node2.default.prototype[method];\n});\n\n/**\n * Export.\n *\n * @type {Block}\n */\n\nexports.default = Block;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/block.js\n// module id = 285\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nrequire('./document');\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _generateKey = require('../utils/generate-key');\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/**\n * Prevent circular dependencies.\n */\n\n/**\n * Dependencies.\n */\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  isVoid: false,\n  key: undefined,\n  nodes: new _immutable.List(),\n  type: undefined\n};\n\n/**\n * Inline.\n *\n * @type {Inline}\n */\n\nvar Inline = function (_Record) {\n  _inherits(Inline, _Record);\n\n  function Inline() {\n    _classCallCheck(this, Inline);\n\n    return _possibleConstructorReturn(this, (Inline.__proto__ || Object.getPrototypeOf(Inline)).apply(this, arguments));\n  }\n\n  _createClass(Inline, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the inline.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        type: this.type,\n        isVoid: this.isVoid,\n        data: this.data.toJSON(),\n        nodes: this.nodes.toArray().map(function (n) {\n          return n.toJSON(options);\n        })\n      };\n\n      if (options.preserveKeys) {\n        object.key = this.key;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'inline';\n    }\n\n    /**\n     * Check if the inline is empty.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      return this.text == '';\n    }\n\n    /**\n     * Get the concatenated text of all the inline's children.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'text',\n    get: function get() {\n      return this.getText();\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Inline` with `attrs`.\n     *\n     * @param {Object|String|Inline} attrs\n     * @return {Inline}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Inline.isInline(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { type: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Inline.fromJSON(attrs);\n      }\n\n      throw new Error('`Inline.create` only accepts objects, strings or inlines, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Inlines` from an array.\n     *\n     * @param {Array<Inline|Object>|List<Inline|Object>} elements\n     * @return {List<Inline>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Inline.create));\n        return list;\n      }\n\n      throw new Error('`Inline.createList` only accepts arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a `Inline` from a JSON `object`.\n     *\n     * @param {Object|Inline} object\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Inline.isInline(object)) {\n        return object;\n      }\n\n      var _object$data = object.data,\n          data = _object$data === undefined ? {} : _object$data,\n          _object$isVoid = object.isVoid,\n          isVoid = _object$isVoid === undefined ? false : _object$isVoid,\n          _object$key = object.key,\n          key = _object$key === undefined ? (0, _generateKey2.default)() : _object$key,\n          _object$nodes = object.nodes,\n          nodes = _object$nodes === undefined ? [] : _object$nodes,\n          type = object.type;\n\n\n      if (typeof type != 'string') {\n        throw new Error('`Inline.fromJS` requires a `type` string.');\n      }\n\n      var inline = new Inline({\n        key: key,\n        type: type,\n        isVoid: !!isVoid,\n        data: new _immutable.Map(data),\n        nodes: new _immutable.List(nodes.map(_node2.default.fromJSON))\n      });\n\n      return inline;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isInline',\n\n\n    /**\n     * Check if `any` is a `Inline`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isInline(any) {\n      return !!(any && any[_modelTypes2.default.INLINE]);\n    }\n\n    /**\n     * Check if `any` is a list of inlines.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isInlineList',\n    value: function isInlineList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Inline.isInline(item);\n      });\n    }\n  }]);\n\n  return Inline;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nInline.fromJS = Inline.fromJSON;\nInline.prototype[_modelTypes2.default.INLINE] = true;\n\n/**\n * Mix in `Node` methods.\n */\n\nObject.getOwnPropertyNames(_node2.default.prototype).forEach(function (method) {\n  if (method == 'constructor') return;\n  Inline.prototype[method] = _node2.default.prototype[method];\n});\n\n/**\n * Export.\n *\n * @type {Inline}\n */\n\nexports.default = Inline;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/inline.js\n// module id = 286\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * An auto-incrementing index for generating keys.\n *\n * @type {Number}\n */\n\nvar n = void 0;\n\n/**\n * The global key generating function.\n *\n * @type {Function}\n */\n\nvar generate = void 0;\n\n/**\n * Generate a key.\n *\n * @return {String}\n */\n\nfunction generateKey() {\n  return generate();\n}\n\n/**\n * Set a different unique ID generating `function`.\n *\n * @param {Function} func\n */\n\nfunction setKeyGenerator(func) {\n  generate = func;\n}\n\n/**\n * Reset the key generating function to its initial state.\n */\n\nfunction resetKeyGenerator() {\n  n = 0;\n  generate = function generate() {\n    return \"\" + n++;\n  };\n}\n\n/**\n * Set the initial state.\n */\n\nresetKeyGenerator();\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = generateKey;\nexports.setKeyGenerator = setKeyGenerator;\nexports.resetKeyGenerator = resetKeyGenerator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/utils/generate-key.js\n// module id = 287\n// module chunks = 0","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_castPath.js\n// module id = 288\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseGetTag.js\n// module id = 289\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Symbol.js\n// module id = 290\n// module chunks = 0","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_copyObject.js\n// module id = 291\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nrequire('./block');\n\nrequire('./inline');\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _generateKey = require('../utils/generate-key');\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/**\n * Prevent circular dependencies.\n */\n\n/**\n * Dependencies.\n */\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  key: undefined,\n  nodes: new _immutable.List()\n};\n\n/**\n * Document.\n *\n * @type {Document}\n */\n\nvar Document = function (_Record) {\n  _inherits(Document, _Record);\n\n  function Document() {\n    _classCallCheck(this, Document);\n\n    return _possibleConstructorReturn(this, (Document.__proto__ || Object.getPrototypeOf(Document)).apply(this, arguments));\n  }\n\n  _createClass(Document, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the document.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        data: this.data.toJSON(),\n        nodes: this.nodes.toArray().map(function (n) {\n          return n.toJSON(options);\n        })\n      };\n\n      if (options.preserveKeys) {\n        object.key = this.key;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'document';\n    }\n\n    /**\n     * Check if the document is empty.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      return this.text == '';\n    }\n\n    /**\n     * Get the concatenated text of all the document's children.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'text',\n    get: function get() {\n      return this.getText();\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Document` with `attrs`.\n     *\n     * @param {Object|Array|List|Text} attrs\n     * @return {Document}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Document.isDocument(attrs)) {\n        return attrs;\n      }\n\n      if (_immutable.List.isList(attrs) || Array.isArray(attrs)) {\n        attrs = { nodes: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Document.fromJSON(attrs);\n      }\n\n      throw new Error('`Document.create` only accepts objects, arrays, lists or documents, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Document` from a JSON `object`.\n     *\n     * @param {Object|Document} object\n     * @return {Document}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Document.isDocument(object)) {\n        return object;\n      }\n\n      var _object$data = object.data,\n          data = _object$data === undefined ? {} : _object$data,\n          _object$key = object.key,\n          key = _object$key === undefined ? (0, _generateKey2.default)() : _object$key,\n          _object$nodes = object.nodes,\n          nodes = _object$nodes === undefined ? [] : _object$nodes;\n\n\n      var document = new Document({\n        key: key,\n        data: new _immutable.Map(data),\n        nodes: new _immutable.List(nodes.map(_node2.default.fromJSON))\n      });\n\n      return document;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isDocument',\n\n\n    /**\n     * Check if `any` is a `Document`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isDocument(any) {\n      return !!(any && any[_modelTypes2.default.DOCUMENT]);\n    }\n  }]);\n\n  return Document;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nDocument.fromJS = Document.fromJSON;\nDocument.prototype[_modelTypes2.default.DOCUMENT] = true;\n\n/**\n * Mix in `Node` methods.\n */\n\nObject.getOwnPropertyNames(_node2.default.prototype).forEach(function (method) {\n  if (method == 'constructor') return;\n  Document.prototype[method] = _node2.default.prototype[method];\n});\n\n/**\n * Export.\n *\n * @type {Document}\n */\n\nexports.default = Document;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/document.js\n// module id = 293\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _slateDevLogger = require('slate-dev-logger');\n\nvar _slateDevLogger2 = _interopRequireDefault(_slateDevLogger);\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _mark = require('./mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  anchorKey: null,\n  anchorOffset: 0,\n  focusKey: null,\n  focusOffset: 0,\n  isBackward: null,\n  isFocused: false,\n  marks: null\n};\n\n/**\n * Range.\n *\n * @type {Range}\n */\n\nvar Range = function (_Record) {\n  _inherits(Range, _Record);\n\n  function Range() {\n    _classCallCheck(this, Range);\n\n    return _possibleConstructorReturn(this, (Range.__proto__ || Object.getPrototypeOf(Range)).apply(this, arguments));\n  }\n\n  _createClass(Range, [{\n    key: 'hasAnchorAtStartOf',\n\n\n    /**\n     * Check whether anchor point of the range is at the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n    value: function hasAnchorAtStartOf(node) {\n      // PERF: Do a check for a `0` offset first since it's quickest.\n      if (this.anchorOffset != 0) return false;\n      var first = getFirst(node);\n      return this.anchorKey == first.key;\n    }\n\n    /**\n     * Check whether anchor point of the range is at the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasAnchorAtEndOf',\n    value: function hasAnchorAtEndOf(node) {\n      var last = getLast(node);\n      return this.anchorKey == last.key && this.anchorOffset == last.text.length;\n    }\n\n    /**\n     * Check whether the anchor edge of a range is in a `node` and at an\n     * offset between `start` and `end`.\n     *\n     * @param {Node} node\n     * @param {Number} start\n     * @param {Number} end\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasAnchorBetween',\n    value: function hasAnchorBetween(node, start, end) {\n      return this.anchorOffset <= end && start <= this.anchorOffset && this.hasAnchorIn(node);\n    }\n\n    /**\n     * Check whether the anchor edge of a range is in a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasAnchorIn',\n    value: function hasAnchorIn(node) {\n      return node.kind == 'text' ? node.key == this.anchorKey : this.anchorKey != null && node.hasDescendant(this.anchorKey);\n    }\n\n    /**\n     * Check whether focus point of the range is at the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasFocusAtEndOf',\n    value: function hasFocusAtEndOf(node) {\n      var last = getLast(node);\n      return this.focusKey == last.key && this.focusOffset == last.text.length;\n    }\n\n    /**\n     * Check whether focus point of the range is at the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasFocusAtStartOf',\n    value: function hasFocusAtStartOf(node) {\n      if (this.focusOffset != 0) return false;\n      var first = getFirst(node);\n      return this.focusKey == first.key;\n    }\n\n    /**\n     * Check whether the focus edge of a range is in a `node` and at an\n     * offset between `start` and `end`.\n     *\n     * @param {Node} node\n     * @param {Number} start\n     * @param {Number} end\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasFocusBetween',\n    value: function hasFocusBetween(node, start, end) {\n      return start <= this.focusOffset && this.focusOffset <= end && this.hasFocusIn(node);\n    }\n\n    /**\n     * Check whether the focus edge of a range is in a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasFocusIn',\n    value: function hasFocusIn(node) {\n      return node.kind == 'text' ? node.key == this.focusKey : this.focusKey != null && node.hasDescendant(this.focusKey);\n    }\n\n    /**\n     * Check whether the range is at the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isAtStartOf',\n    value: function isAtStartOf(node) {\n      return this.isCollapsed && this.hasAnchorAtStartOf(node);\n    }\n\n    /**\n     * Check whether the range is at the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isAtEndOf',\n    value: function isAtEndOf(node) {\n      return this.isCollapsed && this.hasAnchorAtEndOf(node);\n    }\n\n    /**\n     * Focus the range.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'focus',\n    value: function focus() {\n      return this.merge({\n        isFocused: true\n      });\n    }\n\n    /**\n     * Blur the range.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'blur',\n    value: function blur() {\n      return this.merge({\n        isFocused: false\n      });\n    }\n\n    /**\n     * Unset the range.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'deselect',\n    value: function deselect() {\n      return this.merge({\n        anchorKey: null,\n        anchorOffset: 0,\n        focusKey: null,\n        focusOffset: 0,\n        isFocused: false,\n        isBackward: false\n      });\n    }\n\n    /**\n     * Flip the range.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'flip',\n    value: function flip() {\n      return this.merge({\n        anchorKey: this.focusKey,\n        anchorOffset: this.focusOffset,\n        focusKey: this.anchorKey,\n        focusOffset: this.anchorOffset,\n        isBackward: this.isBackward == null ? null : !this.isBackward\n      });\n    }\n\n    /**\n     * Move the anchor offset `n` characters.\n     *\n     * @param {Number} n (optional)\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchor',\n    value: function moveAnchor() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var anchorKey = this.anchorKey,\n          focusKey = this.focusKey,\n          focusOffset = this.focusOffset,\n          isBackward = this.isBackward;\n\n      var anchorOffset = this.anchorOffset + n;\n      return this.merge({\n        anchorOffset: anchorOffset,\n        isBackward: anchorKey == focusKey ? anchorOffset > focusOffset : isBackward\n      });\n    }\n\n    /**\n     * Move the anchor offset `n` characters.\n     *\n     * @param {Number} n (optional)\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocus',\n    value: function moveFocus() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var anchorKey = this.anchorKey,\n          anchorOffset = this.anchorOffset,\n          focusKey = this.focusKey,\n          isBackward = this.isBackward;\n\n      var focusOffset = this.focusOffset + n;\n      return this.merge({\n        focusOffset: focusOffset,\n        isBackward: focusKey == anchorKey ? anchorOffset > focusOffset : isBackward\n      });\n    }\n\n    /**\n     * Move the range's anchor point to a `key` and `offset`.\n     *\n     * @param {String} key\n     * @param {Number} offset\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchorTo',\n    value: function moveAnchorTo(key, offset) {\n      var anchorKey = this.anchorKey,\n          focusKey = this.focusKey,\n          focusOffset = this.focusOffset,\n          isBackward = this.isBackward;\n\n      return this.merge({\n        anchorKey: key,\n        anchorOffset: offset,\n        isBackward: key == focusKey ? offset > focusOffset : key == anchorKey ? isBackward : null\n      });\n    }\n\n    /**\n     * Move the range's focus point to a `key` and `offset`.\n     *\n     * @param {String} key\n     * @param {Number} offset\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocusTo',\n    value: function moveFocusTo(key, offset) {\n      var focusKey = this.focusKey,\n          anchorKey = this.anchorKey,\n          anchorOffset = this.anchorOffset,\n          isBackward = this.isBackward;\n\n      return this.merge({\n        focusKey: key,\n        focusOffset: offset,\n        isBackward: key == anchorKey ? anchorOffset > offset : key == focusKey ? isBackward : null\n      });\n    }\n\n    /**\n     * Move the range to `anchorOffset`.\n     *\n     * @param {Number} anchorOffset\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchorOffsetTo',\n    value: function moveAnchorOffsetTo(anchorOffset) {\n      return this.merge({\n        anchorOffset: anchorOffset,\n        isBackward: this.anchorKey == this.focusKey ? anchorOffset > this.focusOffset : this.isBackward\n      });\n    }\n\n    /**\n     * Move the range to `focusOffset`.\n     *\n     * @param {Number} focusOffset\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocusOffsetTo',\n    value: function moveFocusOffsetTo(focusOffset) {\n      return this.merge({\n        focusOffset: focusOffset,\n        isBackward: this.anchorKey == this.focusKey ? this.anchorOffset > focusOffset : this.isBackward\n      });\n    }\n\n    /**\n     * Move the range to `anchorOffset` and `focusOffset`.\n     *\n     * @param {Number} anchorOffset\n     * @param {Number} focusOffset (optional)\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveOffsetsTo',\n    value: function moveOffsetsTo(anchorOffset) {\n      var focusOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : anchorOffset;\n\n      return this.moveAnchorOffsetTo(anchorOffset).moveFocusOffsetTo(focusOffset);\n    }\n\n    /**\n     * Move the focus point to the anchor point.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveToAnchor',\n    value: function moveToAnchor() {\n      return this.moveFocusTo(this.anchorKey, this.anchorOffset);\n    }\n\n    /**\n     * Move the anchor point to the focus point.\n     *\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveToFocus',\n    value: function moveToFocus() {\n      return this.moveAnchorTo(this.focusKey, this.focusOffset);\n    }\n\n    /**\n     * Move the range's anchor point to the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchorToStartOf',\n    value: function moveAnchorToStartOf(node) {\n      node = getFirst(node);\n      return this.moveAnchorTo(node.key, 0);\n    }\n\n    /**\n     * Move the range's anchor point to the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveAnchorToEndOf',\n    value: function moveAnchorToEndOf(node) {\n      node = getLast(node);\n      return this.moveAnchorTo(node.key, node.text.length);\n    }\n\n    /**\n     * Move the range's focus point to the start of a `node`.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocusToStartOf',\n    value: function moveFocusToStartOf(node) {\n      node = getFirst(node);\n      return this.moveFocusTo(node.key, 0);\n    }\n\n    /**\n     * Move the range's focus point to the end of a `node`.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveFocusToEndOf',\n    value: function moveFocusToEndOf(node) {\n      node = getLast(node);\n      return this.moveFocusTo(node.key, node.text.length);\n    }\n\n    /**\n     * Move to the entire range of `start` and `end` nodes.\n     *\n     * @param {Node} start\n     * @param {Node} end (optional)\n     * @return {Range}\n     */\n\n  }, {\n    key: 'moveToRangeOf',\n    value: function moveToRangeOf(start) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : start;\n\n      return this.moveAnchorToStartOf(start).moveFocusToEndOf(end);\n    }\n\n    /**\n     * Normalize the range, relative to a `node`, ensuring that the anchor\n     * and focus nodes of the range always refer to leaf text nodes.\n     *\n     * @param {Node} node\n     * @return {Range}\n     */\n\n  }, {\n    key: 'normalize',\n    value: function normalize(node) {\n      var range = this;\n      var anchorKey = range.anchorKey,\n          anchorOffset = range.anchorOffset,\n          focusKey = range.focusKey,\n          focusOffset = range.focusOffset,\n          isBackward = range.isBackward;\n\n      // If the range is unset, make sure it is properly zeroed out.\n\n      if (anchorKey == null || focusKey == null) {\n        return range.merge({\n          anchorKey: null,\n          anchorOffset: 0,\n          focusKey: null,\n          focusOffset: 0,\n          isBackward: false\n        });\n      }\n\n      // Get the anchor and focus nodes.\n      var anchorNode = node.getDescendant(anchorKey);\n      var focusNode = node.getDescendant(focusKey);\n\n      // If the range is malformed, warn and zero it out.\n      if (!anchorNode || !focusNode) {\n        _slateDevLogger2.default.warn('The range was invalid and was reset. The range in question was:', range);\n        var first = node.getFirstText();\n        return range.merge({\n          anchorKey: first ? first.key : null,\n          anchorOffset: 0,\n          focusKey: first ? first.key : null,\n          focusOffset: 0,\n          isBackward: false\n        });\n      }\n\n      // If the anchor node isn't a text node, match it to one.\n      if (anchorNode.kind != 'text') {\n        _slateDevLogger2.default.warn('The range anchor was set to a Node that is not a Text node. This should not happen and can degrade performance. The node in question was:', anchorNode);\n        var anchorText = anchorNode.getTextAtOffset(anchorOffset);\n        var offset = anchorNode.getOffset(anchorText.key);\n        anchorOffset = anchorOffset - offset;\n        anchorNode = anchorText;\n      }\n\n      // If the focus node isn't a text node, match it to one.\n      if (focusNode.kind != 'text') {\n        _slateDevLogger2.default.warn('The range focus was set to a Node that is not a Text node. This should not happen and can degrade performance. The node in question was:', focusNode);\n        var focusText = focusNode.getTextAtOffset(focusOffset);\n        var _offset = focusNode.getOffset(focusText.key);\n        focusOffset = focusOffset - _offset;\n        focusNode = focusText;\n      }\n\n      // If `isBackward` is not set, derive it.\n      if (isBackward == null) {\n        if (anchorNode.key === focusNode.key) {\n          isBackward = anchorOffset > focusOffset;\n        } else {\n          isBackward = !node.areDescendantsSorted(anchorNode.key, focusNode.key);\n        }\n      }\n\n      // Merge in any updated properties.\n      return range.merge({\n        anchorKey: anchorNode.key,\n        anchorOffset: anchorOffset,\n        focusKey: focusNode.key,\n        focusOffset: focusOffset,\n        isBackward: isBackward\n      });\n    }\n\n    /**\n     * Return a JSON representation of the range.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        anchorKey: this.anchorKey,\n        anchorOffset: this.anchorOffset,\n        focusKey: this.focusKey,\n        focusOffset: this.focusOffset,\n        isBackward: this.isBackward,\n        isFocused: this.isFocused,\n        marks: this.marks == null ? null : this.marks.toArray().map(function (m) {\n          return m.toJSON();\n        })\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'range';\n    }\n\n    /**\n     * Check whether the range is blurred.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isBlurred',\n    get: function get() {\n      return !this.isFocused;\n    }\n\n    /**\n     * Check whether the range is collapsed.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isCollapsed',\n    get: function get() {\n      return this.anchorKey == this.focusKey && this.anchorOffset == this.focusOffset;\n    }\n\n    /**\n     * Check whether the range is expanded.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isExpanded',\n    get: function get() {\n      return !this.isCollapsed;\n    }\n\n    /**\n     * Check whether the range is forward.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isForward',\n    get: function get() {\n      return this.isBackward == null ? null : !this.isBackward;\n    }\n\n    /**\n     * Check whether the range's keys are set.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isSet',\n    get: function get() {\n      return this.anchorKey != null && this.focusKey != null;\n    }\n\n    /**\n     * Check whether the range's keys are not set.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isUnset',\n    get: function get() {\n      return !this.isSet;\n    }\n\n    /**\n     * Get the start key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'startKey',\n    get: function get() {\n      return this.isBackward ? this.focusKey : this.anchorKey;\n    }\n\n    /**\n     * Get the start offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'startOffset',\n    get: function get() {\n      return this.isBackward ? this.focusOffset : this.anchorOffset;\n    }\n\n    /**\n     * Get the end key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'endKey',\n    get: function get() {\n      return this.isBackward ? this.anchorKey : this.focusKey;\n    }\n\n    /**\n     * Get the end offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'endOffset',\n    get: function get() {\n      return this.isBackward ? this.anchorOffset : this.focusOffset;\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Range` with `attrs`.\n     *\n     * @param {Object|Range} attrs\n     * @return {Range}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Range.isRange(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Range.fromJSON(attrs);\n      }\n\n      throw new Error('`Range.create` only accepts objects or ranges, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Ranges` from `elements`.\n     *\n     * @param {Array<Range|Object>|List<Range|Object>} elements\n     * @return {List<Range>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Range.create));\n        return list;\n      }\n\n      throw new Error('`Range.createList` only accepts arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a dictionary of settable range properties from `attrs`.\n     *\n     * @param {Object|String|Range} attrs\n     * @return {Object}\n     */\n\n  }, {\n    key: 'createProperties',\n    value: function createProperties() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Range.isRange(attrs)) {\n        return {\n          anchorKey: attrs.anchorKey,\n          anchorOffset: attrs.anchorOffset,\n          focusKey: attrs.focusKey,\n          focusOffset: attrs.focusOffset,\n          isBackward: attrs.isBackward,\n          isFocused: attrs.isFocused,\n          marks: attrs.marks\n        };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        var props = {};\n        if ('anchorKey' in attrs) props.anchorKey = attrs.anchorKey;\n        if ('anchorOffset' in attrs) props.anchorOffset = attrs.anchorOffset;\n        if ('anchorPath' in attrs) props.anchorPath = attrs.anchorPath;\n        if ('focusKey' in attrs) props.focusKey = attrs.focusKey;\n        if ('focusOffset' in attrs) props.focusOffset = attrs.focusOffset;\n        if ('focusPath' in attrs) props.focusPath = attrs.focusPath;\n        if ('isBackward' in attrs) props.isBackward = attrs.isBackward;\n        if ('isFocused' in attrs) props.isFocused = attrs.isFocused;\n        if ('marks' in attrs) props.marks = attrs.marks == null ? null : _mark2.default.createSet(attrs.marks);\n        return props;\n      }\n\n      throw new Error('`Range.createProperties` only accepts objects or ranges, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Range` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Range}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var _object$anchorKey = object.anchorKey,\n          anchorKey = _object$anchorKey === undefined ? null : _object$anchorKey,\n          _object$anchorOffset = object.anchorOffset,\n          anchorOffset = _object$anchorOffset === undefined ? 0 : _object$anchorOffset,\n          _object$focusKey = object.focusKey,\n          focusKey = _object$focusKey === undefined ? null : _object$focusKey,\n          _object$focusOffset = object.focusOffset,\n          focusOffset = _object$focusOffset === undefined ? 0 : _object$focusOffset,\n          _object$isBackward = object.isBackward,\n          isBackward = _object$isBackward === undefined ? null : _object$isBackward,\n          _object$isFocused = object.isFocused,\n          isFocused = _object$isFocused === undefined ? false : _object$isFocused,\n          _object$marks = object.marks,\n          marks = _object$marks === undefined ? null : _object$marks;\n\n\n      var range = new Range({\n        anchorKey: anchorKey,\n        anchorOffset: anchorOffset,\n        focusKey: focusKey,\n        focusOffset: focusOffset,\n        isBackward: isBackward,\n        isFocused: isFocused,\n        marks: marks == null ? null : new _immutable.Set(marks.map(_mark2.default.fromJSON))\n      });\n\n      return range;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isRange',\n\n\n    /**\n     * Check if an `obj` is a `Range`.\n     *\n     * @param {Any} obj\n     * @return {Boolean}\n     */\n\n    value: function isRange(obj) {\n      return !!(obj && obj[_modelTypes2.default.RANGE]);\n    }\n  }]);\n\n  return Range;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nRange.fromJS = Range.fromJSON;\nRange.prototype[_modelTypes2.default.RANGE] = true;\n\n/**\n * Mix in some \"move\" convenience methods.\n */\n\nvar MOVE_METHODS = [['move', ''], ['move', 'To'], ['move', 'ToStartOf'], ['move', 'ToEndOf']];\n\nMOVE_METHODS.forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      p = _ref2[0],\n      s = _ref2[1];\n\n  Range.prototype['' + p + s] = function () {\n    var _ref3;\n\n    return (_ref3 = this[p + 'Anchor' + s].apply(this, arguments))[p + 'Focus' + s].apply(_ref3, arguments);\n  };\n});\n\n/**\n * Mix in the \"start\", \"end\" and \"edge\" convenience methods.\n */\n\nvar EDGE_METHODS = [['has', 'AtStartOf', true], ['has', 'AtEndOf', true], ['has', 'Between', true], ['has', 'In', true], ['collapseTo', ''], ['move', ''], ['moveTo', ''], ['move', 'To'], ['move', 'OffsetTo']];\n\nEDGE_METHODS.forEach(function (_ref4) {\n  var _ref5 = _slicedToArray(_ref4, 3),\n      p = _ref5[0],\n      s = _ref5[1],\n      hasEdge = _ref5[2];\n\n  var anchor = p + 'Anchor' + s;\n  var focus = p + 'Focus' + s;\n\n  Range.prototype[p + 'Start' + s] = function () {\n    return this.isBackward ? this[focus].apply(this, arguments) : this[anchor].apply(this, arguments);\n  };\n\n  Range.prototype[p + 'End' + s] = function () {\n    return this.isBackward ? this[anchor].apply(this, arguments) : this[focus].apply(this, arguments);\n  };\n\n  if (hasEdge) {\n    Range.prototype[p + 'Edge' + s] = function () {\n      return this[anchor].apply(this, arguments) || this[focus].apply(this, arguments);\n    };\n  }\n});\n\n/**\n * Mix in some aliases for convenience / parallelism with the browser APIs.\n */\n\nvar ALIAS_METHODS = [['collapseTo', 'moveTo'], ['collapseToAnchor', 'moveToAnchor'], ['collapseToFocus', 'moveToFocus'], ['collapseToStart', 'moveToStart'], ['collapseToEnd', 'moveToEnd'], ['collapseToStartOf', 'moveToStartOf'], ['collapseToEndOf', 'moveToEndOf'], ['extend', 'moveFocus'], ['extendTo', 'moveFocusTo'], ['extendToStartOf', 'moveFocusToStartOf'], ['extendToEndOf', 'moveFocusToEndOf']];\n\nALIAS_METHODS.forEach(function (_ref6) {\n  var _ref7 = _slicedToArray(_ref6, 2),\n      alias = _ref7[0],\n      method = _ref7[1];\n\n  Range.prototype[alias] = function () {\n    return this[method].apply(this, arguments);\n  };\n});\n\n/**\n * Get the first text of a `node`.\n *\n * @param {Node} node\n * @return {Text}\n */\n\nfunction getFirst(node) {\n  return node.kind == 'text' ? node : node.getFirstText();\n}\n\n/**\n * Get the last text of a `node`.\n *\n * @param {Node} node\n * @return {Text}\n */\n\nfunction getLast(node) {\n  return node.kind == 'text' ? node : node.getLastText();\n}\n\n/**\n * Export.\n *\n * @type {Range}\n */\n\nexports.default = Range;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/range.js\n// module id = 294\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Is in development?\n *\n * @type {Boolean}\n */\n\nvar IS_DEV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV !== 'production';\n\n/**\n * GLOBAL: True if memoization should is enabled. Only effective when `IS_DEV`.\n *\n * @type {Boolean}\n */\n\nvar ENABLED = true;\n\n/**\n * GLOBAL: Changing this cache key will clear all previous cached results.\n * Only effective when `IS_DEV`.\n *\n * @type {Number}\n */\n\nvar CACHE_KEY = 0;\n\n/**\n * The leaf node of a cache tree. Used to support variable argument length. A\n * unique object, so that native Maps will key it by reference.\n *\n * @type {Object}\n */\n\nvar LEAF = {};\n\n/**\n * A value to represent a memoized undefined value. Allows efficient value\n * retrieval using Map.get only.\n *\n * @type {Object}\n */\n\nvar UNDEFINED = {};\n\n/**\n * Default value for unset keys in native Maps\n *\n * @type {Undefined}\n */\n\nvar UNSET = undefined;\n\n/**\n * Memoize all of the `properties` on a `object`.\n *\n * @param {Object} object\n * @param {Array} properties\n * @return {Record}\n */\n\nfunction memoize(object, properties) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$takesArgumen = options.takesArguments,\n      takesArguments = _options$takesArgumen === undefined ? true : _options$takesArgumen;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var property = _step.value;\n\n      var original = object[property];\n\n      if (!original) {\n        throw new Error('Object does not have a property named \"' + property + '\".');\n      }\n\n      object[property] = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (IS_DEV) {\n          // If memoization is disabled, call into the original method.\n          if (!ENABLED) return original.apply(this, args);\n\n          // If the cache key is different, previous caches must be cleared.\n          if (CACHE_KEY !== this.__cache_key) {\n            this.__cache_key = CACHE_KEY;\n            this.__cache = new Map(); // eslint-disable-line no-undef,no-restricted-globals\n          }\n        }\n\n        if (!this.__cache) {\n          this.__cache = new Map(); // eslint-disable-line no-undef,no-restricted-globals\n        }\n\n        var cachedValue = void 0;\n        var keys = void 0;\n\n        if (takesArguments) {\n          keys = [property].concat(args);\n          cachedValue = getIn(this.__cache, keys);\n        } else {\n          cachedValue = this.__cache.get(property);\n        }\n\n        // If we've got a result already, return it.\n        if (cachedValue !== UNSET) {\n          return cachedValue === UNDEFINED ? undefined : cachedValue;\n        }\n\n        // Otherwise calculate what it should be once and cache it.\n        var value = original.apply(this, args);\n        var v = value === undefined ? UNDEFINED : value;\n\n        if (takesArguments) {\n          this.__cache = setIn(this.__cache, keys, v);\n        } else {\n          this.__cache.set(property, v);\n        }\n\n        return value;\n      };\n    };\n\n    for (var _iterator = properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\n/**\n * Get a value at a key path in a tree of Map.\n *\n * If not set, returns UNSET.\n * If the set value is undefined, returns UNDEFINED.\n *\n * @param {Map} map\n * @param {Array} keys\n * @return {Any|UNSET|UNDEFINED}\n */\n\nfunction getIn(map, keys) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = keys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var key = _step2.value;\n\n      map = map.get(key);\n      if (map === UNSET) return UNSET;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return map.get(LEAF);\n}\n\n/**\n * Set a value at a key path in a tree of Map, creating Maps on the go.\n *\n * @param {Map} map\n * @param {Array} keys\n * @param {Any} value\n * @return {Map}\n */\n\nfunction setIn(map, keys, value) {\n  var parent = map;\n  var child = void 0;\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = keys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var key = _step3.value;\n\n      child = parent.get(key);\n\n      // If the path was not created yet...\n      if (child === UNSET) {\n        child = new Map(); // eslint-disable-line no-undef,no-restricted-globals\n        parent.set(key, child);\n      }\n\n      parent = child;\n    }\n\n    // The whole path has been created, so set the value to the bottom most map.\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  child.set(LEAF, value);\n  return map;\n}\n\n/**\n * In DEV mode, clears the previously memoized values, globally.\n *\n * @return {Void}\n */\n\nfunction __clear() {\n  CACHE_KEY++;\n\n  if (CACHE_KEY >= Number.MAX_SAFE_INTEGER) {\n    CACHE_KEY = 0;\n  }\n}\n\n/**\n * In DEV mode, enable or disable the use of memoize values, globally.\n *\n * @param {Boolean} enabled\n * @return {Void}\n */\n\nfunction __enable(enabled) {\n  ENABLED = enabled;\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = memoize;\nexports.__clear = __clear;\nexports.__enable = __enable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/utils/memoize.js\n// module id = 295\n// module chunks = 0","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/node_modules/debug/src/browser.js\n// module id = 296\n// module chunks = 0","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/eq.js\n// module id = 297\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Data.\n *\n * This isn't an immutable record, it's just a thin wrapper around `Map` so that\n * we can allow for more convenient creation.\n *\n * @type {Object}\n */\n\nvar Data = function () {\n  function Data() {\n    _classCallCheck(this, Data);\n  }\n\n  _createClass(Data, null, [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Data` with `attrs`.\n     *\n     * @param {Object|Data|Map} attrs\n     * @return {Data} data\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (_immutable.Map.isMap(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Data.fromJSON(attrs);\n      }\n\n      throw new Error('`Data.create` only accepts objects or maps, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Data` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Data}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      return new _immutable.Map(object);\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }]);\n\n  return Data;\n}();\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nData.fromJS = Data.fromJSON;\nexports.default = Data;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/data.js\n// module id = 300\n// module chunks = 0","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 301\n// module chunks = 0","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_nativeCreate.js\n// module id = 302\n// module chunks = 0","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_ListCache.js\n// module id = 303\n// module chunks = 0","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_assocIndexOf.js\n// module id = 304\n// module chunks = 0","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getMapData.js\n// module id = 305\n// module chunks = 0","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_toKey.js\n// module id = 306\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_isIndex.js\n// module id = 307\n// module chunks = 0","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isArguments.js\n// module id = 308\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _operationAttributes = require('../constants/operation-attributes');\n\nvar _operationAttributes2 = _interopRequireDefault(_operationAttributes);\n\nvar _mark = require('./mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _value = require('./value');\n\nvar _value2 = _interopRequireDefault(_value);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  length: undefined,\n  mark: undefined,\n  marks: undefined,\n  newPath: undefined,\n  node: undefined,\n  offset: undefined,\n  path: undefined,\n  position: undefined,\n  properties: undefined,\n  selection: undefined,\n  target: undefined,\n  text: undefined,\n  type: undefined,\n  value: undefined\n};\n\n/**\n * Operation.\n *\n * @type {Operation}\n */\n\nvar Operation = function (_Record) {\n  _inherits(Operation, _Record);\n\n  function Operation() {\n    _classCallCheck(this, Operation);\n\n    return _possibleConstructorReturn(this, (Operation.__proto__ || Object.getPrototypeOf(Operation)).apply(this, arguments));\n  }\n\n  _createClass(Operation, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the operation.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var kind = this.kind,\n          type = this.type;\n\n      var object = { kind: kind, type: type };\n      var ATTRIBUTES = _operationAttributes2.default[type];\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = ATTRIBUTES[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n\n          var value = this[key];\n\n          // Skip keys for objects that should not be serialized, and are only used\n          // for providing the local-only invert behavior for the history stack.\n          if (key == 'document') continue;\n          if (key == 'selection') continue;\n          if (key == 'value') continue;\n          if (key == 'node' && type != 'insert_node') continue;\n\n          if (key == 'mark' || key == 'marks' || key == 'node') {\n            value = value.toJSON();\n          }\n\n          if (key == 'properties' && type == 'set_mark') {\n            var v = {};\n            if ('data' in value) v.data = value.data.toJS();\n            if ('type' in value) v.type = value.type;\n            value = v;\n          }\n\n          if (key == 'properties' && type == 'set_node') {\n            var _v = {};\n            if ('data' in value) _v.data = value.data.toJS();\n            if ('isVoid' in value) _v.isVoid = value.isVoid;\n            if ('type' in value) _v.type = value.type;\n            value = _v;\n          }\n\n          if (key == 'properties' && type == 'set_selection') {\n            var _v2 = {};\n            if ('anchorOffset' in value) _v2.anchorOffset = value.anchorOffset;\n            if ('anchorPath' in value) _v2.anchorPath = value.anchorPath;\n            if ('focusOffset' in value) _v2.focusOffset = value.focusOffset;\n            if ('focusPath' in value) _v2.focusPath = value.focusPath;\n            if ('isBackward' in value) _v2.isBackward = value.isBackward;\n            if ('isFocused' in value) _v2.isFocused = value.isFocused;\n            if ('marks' in value) _v2.marks = value.marks == null ? null : value.marks.toJSON();\n            value = _v2;\n          }\n\n          if (key == 'properties' && type == 'set_value') {\n            var _v3 = {};\n            if ('data' in value) _v3.data = value.data.toJS();\n            if ('decorations' in value) _v3.decorations = value.decorations.toJS();\n            if ('schema' in value) _v3.schema = value.schema.toJS();\n            value = _v3;\n          }\n\n          object[key] = value;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'operation';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Operation` with `attrs`.\n     *\n     * @param {Object|Array|List|String|Operation} attrs\n     * @return {Operation}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Operation.isOperation(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Operation.fromJSON(attrs);\n      }\n\n      throw new Error('`Operation.create` only accepts objects or operations, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Operations` from `elements`.\n     *\n     * @param {Array<Operation|Object>|List<Operation|Object>} elements\n     * @return {List<Operation>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Operation.create));\n        return list;\n      }\n\n      throw new Error('`Operation.createList` only accepts arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a `Operation` from a JSON `object`.\n     *\n     * @param {Object|Operation} object\n     * @return {Operation}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Operation.isOperation(object)) {\n        return object;\n      }\n\n      var type = object.type,\n          value = object.value;\n\n      var ATTRIBUTES = _operationAttributes2.default[type];\n      var attrs = { type: type };\n\n      if (!ATTRIBUTES) {\n        throw new Error('`Operation.fromJSON` was passed an unrecognized operation type: \"' + type + '\"');\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = ATTRIBUTES[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var key = _step2.value;\n\n          var v = object[key];\n\n          if (v === undefined) {\n            // Skip keys for objects that should not be serialized, and are only used\n            // for providing the local-only invert behavior for the history stack.\n            if (key == 'document') continue;\n            if (key == 'selection') continue;\n            if (key == 'value') continue;\n            if (key == 'node' && type != 'insert_node') continue;\n\n            throw new Error('`Operation.fromJSON` was passed a \"' + type + '\" operation without the required \"' + key + '\" attribute.');\n          }\n\n          if (key == 'mark') {\n            v = _mark2.default.create(v);\n          }\n\n          if (key == 'marks' && v != null) {\n            v = _mark2.default.createSet(v);\n          }\n\n          if (key == 'node') {\n            v = _node2.default.create(v);\n          }\n\n          if (key == 'selection') {\n            v = _range2.default.create(v);\n          }\n\n          if (key == 'value') {\n            v = _value2.default.create(v);\n          }\n\n          if (key == 'properties' && type == 'set_mark') {\n            v = _mark2.default.createProperties(v);\n          }\n\n          if (key == 'properties' && type == 'set_node') {\n            v = _node2.default.createProperties(v);\n          }\n\n          if (key == 'properties' && type == 'set_selection') {\n            var _v4 = v,\n                anchorKey = _v4.anchorKey,\n                focusKey = _v4.focusKey,\n                rest = _objectWithoutProperties(_v4, ['anchorKey', 'focusKey']);\n\n            v = _range2.default.createProperties(rest);\n\n            if (anchorKey !== undefined) {\n              v.anchorPath = anchorKey === null ? null : value.document.getPath(anchorKey);\n            }\n\n            if (focusKey !== undefined) {\n              v.focusPath = focusKey === null ? null : value.document.getPath(focusKey);\n            }\n          }\n\n          if (key == 'properties' && type == 'set_value') {\n            v = _value2.default.createProperties(v);\n          }\n\n          attrs[key] = v;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var node = new Operation(attrs);\n      return node;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isOperation',\n\n\n    /**\n     * Check if `any` is a `Operation`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isOperation(any) {\n      return !!(any && any[_modelTypes2.default.OPERATION]);\n    }\n\n    /**\n     * Check if `any` is a list of operations.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isOperationList',\n    value: function isOperationList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Operation.isOperation(item);\n      });\n    }\n  }]);\n\n  return Operation;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nOperation.fromJS = Operation.fromJSON;\nOperation.prototype[_modelTypes2.default.OPERATION] = true;\n\n/**\n * Export.\n *\n * @type {Operation}\n */\n\nexports.default = Operation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/operation.js\n// module id = 309\n// module chunks = 0","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isBuffer.js\n// module id = 310\n// module chunks = 0","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isArrayLike.js\n// module id = 311\n// module chunks = 0","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getTag.js\n// module id = 312\n// module chunks = 0","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/keysIn.js\n// module id = 313\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _character = require('./character');\n\nvar _character2 = _interopRequireDefault(_character);\n\nvar _mark = require('./mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _leaf = require('./leaf');\n\nvar _leaf2 = _interopRequireDefault(_leaf);\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _generateKey = require('../utils/generate-key');\n\nvar _generateKey2 = _interopRequireDefault(_generateKey);\n\nvar _memoize = require('../utils/memoize');\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  characters: new _immutable.List(),\n  key: undefined\n};\n\n/**\n * Text.\n *\n * @type {Text}\n */\n\nvar Text = function (_Record) {\n  _inherits(Text, _Record);\n\n  function Text() {\n    _classCallCheck(this, Text);\n\n    return _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));\n  }\n\n  _createClass(Text, [{\n    key: 'addMark',\n\n\n    /**\n     * Add a `mark` at `index` and `length`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @param {Mark} mark\n     * @return {Text}\n     */\n\n    value: function addMark(index, length, mark) {\n      var marks = new _immutable.Set([mark]);\n      return this.addMarks(index, length, marks);\n    }\n\n    /**\n     * Add a `set` of marks at `index` and `length`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @param {Set<Mark>} set\n     * @return {Text}\n     */\n\n  }, {\n    key: 'addMarks',\n    value: function addMarks(index, length, set) {\n      var characters = this.characters.map(function (char, i) {\n        if (i < index) return char;\n        if (i >= index + length) return char;\n        var _char = char,\n            marks = _char.marks;\n\n        marks = marks.union(set);\n        char = char.set('marks', marks);\n        return char;\n      });\n\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Derive a set of decorated characters with `decorations`.\n     *\n     * @param {List<Decoration>} decorations\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'getDecoratedCharacters',\n    value: function getDecoratedCharacters(decorations) {\n      var node = this;\n      var _node = node,\n          key = _node.key,\n          characters = _node.characters;\n\n      // PERF: Exit early if there are no characters to be decorated.\n\n      if (characters.size == 0) return characters;\n\n      decorations.forEach(function (range) {\n        var startKey = range.startKey,\n            endKey = range.endKey,\n            startOffset = range.startOffset,\n            endOffset = range.endOffset,\n            marks = range.marks;\n\n        var hasStart = startKey == key;\n        var hasEnd = endKey == key;\n        var index = hasStart ? startOffset : 0;\n        var length = hasEnd ? endOffset - index : characters.size;\n        node = node.addMarks(index, length, marks);\n      });\n\n      return node.characters;\n    }\n\n    /**\n     * Get the decorations for the node from a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getDecorations',\n    value: function getDecorations(schema) {\n      return schema.__getDecorations(this);\n    }\n\n    /**\n     * Derive the leaves for a list of `characters`.\n     *\n     * @param {Array|Void} decorations (optional)\n     * @return {List<Leaf>}\n     */\n\n  }, {\n    key: 'getLeaves',\n    value: function getLeaves() {\n      var decorations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var characters = this.getDecoratedCharacters(decorations);\n      var leaves = [];\n\n      // PERF: cache previous values for faster lookup.\n      var prevChar = void 0;\n      var prevLeaf = void 0;\n\n      // If there are no characters, return one empty range.\n      if (characters.size == 0) {\n        leaves.push({});\n      }\n\n      // Otherwise, loop the characters and build the leaves...\n      else {\n          characters.forEach(function (char, i) {\n            var marks = char.marks,\n                text = char.text;\n\n            // The first one can always just be created.\n\n            if (i == 0) {\n              prevChar = char;\n              prevLeaf = { text: text, marks: marks };\n              leaves.push(prevLeaf);\n              return;\n            }\n\n            // Otherwise, compare the current and previous marks.\n            var prevMarks = prevChar.marks;\n            var isSame = (0, _immutable.is)(marks, prevMarks);\n\n            // If the marks are the same, add the text to the previous range.\n            if (isSame) {\n              prevChar = char;\n              prevLeaf.text += text;\n              return;\n            }\n\n            // Otherwise, create a new range.\n            prevChar = char;\n            prevLeaf = { text: text, marks: marks };\n            leaves.push(prevLeaf);\n          }, []);\n        }\n\n      // PERF: convert the leaves to immutable objects after iterating.\n      leaves = new _immutable.List(leaves.map(function (object) {\n        return new _leaf2.default(object);\n      }));\n\n      // Return the leaves.\n      return leaves;\n    }\n\n    /**\n     * Get all of the marks on the text.\n     *\n     * @return {OrderedSet<Mark>}\n     */\n\n  }, {\n    key: 'getMarks',\n    value: function getMarks() {\n      var array = this.getMarksAsArray();\n      return new _immutable.OrderedSet(array);\n    }\n\n    /**\n     * Get all of the marks on the text as an array\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: 'getMarksAsArray',\n    value: function getMarksAsArray() {\n      return this.characters.reduce(function (array, char) {\n        return array.concat(char.marks.toArray());\n      }, []);\n    }\n\n    /**\n     * Get the marks on the text at `index`.\n     *\n     * @param {Number} index\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'getMarksAtIndex',\n    value: function getMarksAtIndex(index) {\n      if (index == 0) return _mark2.default.createSet();\n      var characters = this.characters;\n\n      var char = characters.get(index - 1);\n      if (!char) return _mark2.default.createSet();\n      return char.marks;\n    }\n\n    /**\n     * Get a node by `key`, to parallel other nodes.\n     *\n     * @param {String} key\n     * @return {Node|Null}\n     */\n\n  }, {\n    key: 'getNode',\n    value: function getNode(key) {\n      return this.key == key ? this : null;\n    }\n\n    /**\n     * Check if the node has a node by `key`, to parallel other nodes.\n     *\n     * @param {String} key\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasNode',\n    value: function hasNode(key) {\n      return !!this.getNode(key);\n    }\n\n    /**\n     * Insert `text` at `index`.\n     *\n     * @param {Numbder} index\n     * @param {String} text\n     * @param {String} marks (optional)\n     * @return {Text}\n     */\n\n  }, {\n    key: 'insertText',\n    value: function insertText(index, text, marks) {\n      var characters = this.characters;\n\n      var chars = _character2.default.createList(text.split('').map(function (char) {\n        return { text: char, marks: marks };\n      }));\n\n      characters = characters.slice(0, index).concat(chars).concat(characters.slice(index));\n\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Regenerate the node's key.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'regenerateKey',\n    value: function regenerateKey() {\n      var key = (0, _generateKey2.default)();\n      return this.set('key', key);\n    }\n\n    /**\n     * Remove a `mark` at `index` and `length`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @param {Mark} mark\n     * @return {Text}\n     */\n\n  }, {\n    key: 'removeMark',\n    value: function removeMark(index, length, mark) {\n      var characters = this.characters.map(function (char, i) {\n        if (i < index) return char;\n        if (i >= index + length) return char;\n        var _char2 = char,\n            marks = _char2.marks;\n\n        marks = marks.remove(mark);\n        char = char.set('marks', marks);\n        return char;\n      });\n\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Remove text from the text node at `index` for `length`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @return {Text}\n     */\n\n  }, {\n    key: 'removeText',\n    value: function removeText(index, length) {\n      var characters = this.characters;\n\n      var start = index;\n      var end = index + length;\n      characters = characters.filterNot(function (char, i) {\n        return start <= i && i < end;\n      });\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Return a JSON representation of the text.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        leaves: this.getLeaves().toArray().map(function (r) {\n          return r.toJSON();\n        })\n      };\n\n      if (options.preserveKeys) {\n        object.key = this.key;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n\n    /**\n     * Update a `mark` at `index` and `length` with `properties`.\n     *\n     * @param {Number} index\n     * @param {Number} length\n     * @param {Mark} mark\n     * @param {Object} properties\n     * @return {Text}\n     */\n\n  }, {\n    key: 'updateMark',\n    value: function updateMark(index, length, mark, properties) {\n      var newMark = mark.merge(properties);\n\n      var characters = this.characters.map(function (char, i) {\n        if (i < index) return char;\n        if (i >= index + length) return char;\n        var _char3 = char,\n            marks = _char3.marks;\n\n        if (!marks.has(mark)) return char;\n        marks = marks.remove(mark);\n        marks = marks.add(newMark);\n        char = char.set('marks', marks);\n        return char;\n      });\n\n      return this.set('characters', characters);\n    }\n\n    /**\n     * Validate the text node against a `schema`.\n     *\n     * @param {Schema} schema\n     * @return {Object|Void}\n     */\n\n  }, {\n    key: 'validate',\n    value: function validate(schema) {\n      return schema.validateNode(this);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'text';\n    }\n\n    /**\n     * Is the node empty?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      return this.text == '';\n    }\n\n    /**\n     * Get the concatenated text of the node.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'text',\n    get: function get() {\n      return this.characters.reduce(function (string, char) {\n        return string + char.text;\n      }, '');\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Text` with `attrs`.\n     *\n     * @param {Object|Array|List|String|Text} attrs\n     * @return {Text}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      if (Text.isText(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { leaves: [{ text: attrs }] };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        if (attrs.text) {\n          var _attrs = attrs,\n              text = _attrs.text,\n              marks = _attrs.marks,\n              key = _attrs.key;\n\n          attrs = { key: key, leaves: [{ text: text, marks: marks }] };\n        }\n\n        return Text.fromJSON(attrs);\n      }\n\n      throw new Error('`Text.create` only accepts objects, arrays, strings or texts, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Texts` from `elements`.\n     *\n     * @param {Array<Text|Object>|List<Text|Object>} elements\n     * @return {List<Text>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Text.create));\n        return list;\n      }\n\n      throw new Error('`Text.createList` only accepts arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a `Text` from a JSON `object`.\n     *\n     * @param {Object|Text} object\n     * @return {Text}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Text.isText(object)) {\n        return object;\n      }\n\n      var _object$leaves = object.leaves,\n          leaves = _object$leaves === undefined ? [] : _object$leaves,\n          _object$key = object.key,\n          key = _object$key === undefined ? (0, _generateKey2.default)() : _object$key;\n\n\n      var characters = leaves.map(_leaf2.default.fromJSON).reduce(function (l, r) {\n        return l.concat(r.getCharacters());\n      }, new _immutable.List());\n\n      var node = new Text({\n        characters: characters,\n        key: key\n      });\n\n      return node;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isText',\n\n\n    /**\n     * Check if `any` is a `Text`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isText(any) {\n      return !!(any && any[_modelTypes2.default.TEXT]);\n    }\n\n    /**\n     * Check if `any` is a list of texts.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isTextList',\n    value: function isTextList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Text.isText(item);\n      });\n    }\n  }]);\n\n  return Text;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nText.fromJS = Text.fromJSON;\nText.prototype[_modelTypes2.default.TEXT] = true;\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Text.prototype, ['getMarks', 'getMarksAsArray'], {\n  takesArguments: false\n});\n\n(0, _memoize2.default)(Text.prototype, ['getDecoratedCharacters', 'getDecorations', 'getLeaves', 'getMarksAtIndex', 'validate'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Text}\n */\n\nexports.default = Text;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/text.js\n// module id = 323\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  marks: new _immutable.Set(),\n  text: ''\n};\n\n/**\n * Character.\n *\n * @type {Character}\n */\n\nvar Character = function (_Record) {\n  _inherits(Character, _Record);\n\n  function Character() {\n    _classCallCheck(this, Character);\n\n    return _possibleConstructorReturn(this, (Character.__proto__ || Object.getPrototypeOf(Character)).apply(this, arguments));\n  }\n\n  _createClass(Character, [{\n    key: 'toJSON',\n\n\n    /**\n     * Return a JSON representation of the character.\n     *\n     * @return {Object}\n     */\n\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        text: this.text,\n        marks: this.marks.toArray().map(function (m) {\n          return m.toJSON();\n        })\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'character';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a `Character` with `attrs`.\n     *\n     * @param {Object|String|Character} attrs\n     * @return {Character}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Character.isCharacter(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { text: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Character.fromJSON(attrs);\n      }\n\n      throw new Error('`Character.create` only accepts objects, strings or characters, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a list of `Characters` from `elements`.\n     *\n     * @param {String|Array<Object|Character|String>|List<Object|Character|String>} elements\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (typeof elements == 'string') {\n        elements = elements.split('');\n      }\n\n      if (_immutable.List.isList(elements) || Array.isArray(elements)) {\n        var list = new _immutable.List(elements.map(Character.create));\n        return list;\n      }\n\n      throw new Error('`Block.createList` only accepts strings, arrays or lists, but you passed it: ' + elements);\n    }\n\n    /**\n     * Create a `Character` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Character}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var text = object.text,\n          _object$marks = object.marks,\n          marks = _object$marks === undefined ? [] : _object$marks;\n\n\n      if (typeof text != 'string') {\n        throw new Error('`Character.fromJSON` requires a block `text` string.');\n      }\n\n      var character = new Character({\n        text: text,\n        marks: new _immutable.Set(marks)\n      });\n\n      return character;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isCharacter',\n\n\n    /**\n     * Check if `any` is a `Character`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isCharacter(any) {\n      return !!(any && any[_modelTypes2.default.CHARACTER]);\n    }\n\n    /**\n     * Check if `any` is a character list.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isCharacterList',\n    value: function isCharacterList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Character.isCharacter(item);\n      });\n    }\n  }]);\n\n  return Character;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nCharacter.fromJS = Character.fromJSON;\nCharacter.prototype[_modelTypes2.default.CHARACTER] = true;\n\n/**\n * Export.\n *\n * @type {Character}\n */\n\nexports.default = Character;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/character.js\n// module id = 324\n// module chunks = 0","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/pick.js\n// module id = 325\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isSymbol.js\n// module id = 326\n// module chunks = 0","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_MapCache.js\n// module id = 327\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isFunction.js\n// module id = 328\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Map.js\n// module id = 329\n// module chunks = 0","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_assignValue.js\n// module id = 330\n// module chunks = 0","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseAssignValue.js\n// module id = 331\n// module chunks = 0","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isLength.js\n// module id = 332\n// module chunks = 0","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_arrayPush.js\n// module id = 333\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _data = require('./data');\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _document = require('./document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _history = require('./history');\n\nvar _history2 = _interopRequireDefault(_history);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _schema = require('./schema');\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  data: new _immutable.Map(),\n  decorations: null,\n  document: _document2.default.create(),\n  history: _history2.default.create(),\n  schema: _schema2.default.create(),\n  selection: _range2.default.create()\n};\n\n/**\n * Value.\n *\n * @type {Value}\n */\n\nvar Value = function (_Record) {\n  _inherits(Value, _Record);\n\n  function Value() {\n    _classCallCheck(this, Value);\n\n    return _possibleConstructorReturn(this, (Value.__proto__ || Object.getPrototypeOf(Value)).apply(this, arguments));\n  }\n\n  _createClass(Value, [{\n    key: 'change',\n\n\n    /**\n     * Create a new `Change` with the current value as a starting point.\n     *\n     * @param {Object} attrs\n     * @return {Change}\n     */\n\n    value: function change() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var Change = require('./change').default;\n      return new Change(_extends({}, attrs, { value: this }));\n    }\n\n    /**\n     * Return a JSON representation of the value.\n     *\n     * @param {Object} options\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var object = {\n        kind: this.kind,\n        document: this.document.toJSON(options)\n      };\n\n      if (options.preserveData) {\n        object.data = this.data.toJSON();\n      }\n\n      if (options.preserveDecorations) {\n        object.decorations = this.decorations ? this.decorations.toArray().map(function (d) {\n          return d.toJSON();\n        }) : null;\n      }\n\n      if (options.preserveHistory) {\n        object.history = this.history.toJSON();\n      }\n\n      if (options.preserveSelection) {\n        object.selection = this.selection.toJSON();\n      }\n\n      if (options.preserveSchema) {\n        object.schema = this.schema.toJSON();\n      }\n\n      if (options.preserveSelection && !options.preserveKeys) {\n        var document = this.document,\n            selection = this.selection;\n\n        object.selection.anchorPath = selection.isSet ? document.getPath(selection.anchorKey) : null;\n        object.selection.focusPath = selection.isSet ? document.getPath(selection.focusKey) : null;\n        delete object.selection.anchorKey;\n        delete object.selection.focusKey;\n      }\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS(options) {\n      return this.toJSON(options);\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'value';\n    }\n\n    /**\n     * Are there undoable events?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasUndos',\n    get: function get() {\n      return this.history.undos.size > 0;\n    }\n\n    /**\n     * Are there redoable events?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'hasRedos',\n    get: function get() {\n      return this.history.redos.size > 0;\n    }\n\n    /**\n     * Is the current selection blurred?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isBlurred',\n    get: function get() {\n      return this.selection.isBlurred;\n    }\n\n    /**\n     * Is the current selection focused?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isFocused',\n    get: function get() {\n      return this.selection.isFocused;\n    }\n\n    /**\n     * Is the current selection collapsed?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isCollapsed',\n    get: function get() {\n      return this.selection.isCollapsed;\n    }\n\n    /**\n     * Is the current selection expanded?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isExpanded',\n    get: function get() {\n      return this.selection.isExpanded;\n    }\n\n    /**\n     * Is the current selection backward?\n     *\n     * @return {Boolean} isBackward\n     */\n\n  }, {\n    key: 'isBackward',\n    get: function get() {\n      return this.selection.isBackward;\n    }\n\n    /**\n     * Is the current selection forward?\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isForward',\n    get: function get() {\n      return this.selection.isForward;\n    }\n\n    /**\n     * Get the current start key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'startKey',\n    get: function get() {\n      return this.selection.startKey;\n    }\n\n    /**\n     * Get the current end key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'endKey',\n    get: function get() {\n      return this.selection.endKey;\n    }\n\n    /**\n     * Get the current start offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'startOffset',\n    get: function get() {\n      return this.selection.startOffset;\n    }\n\n    /**\n     * Get the current end offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'endOffset',\n    get: function get() {\n      return this.selection.endOffset;\n    }\n\n    /**\n     * Get the current anchor key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'anchorKey',\n    get: function get() {\n      return this.selection.anchorKey;\n    }\n\n    /**\n     * Get the current focus key.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'focusKey',\n    get: function get() {\n      return this.selection.focusKey;\n    }\n\n    /**\n     * Get the current anchor offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'anchorOffset',\n    get: function get() {\n      return this.selection.anchorOffset;\n    }\n\n    /**\n     * Get the current focus offset.\n     *\n     * @return {String}\n     */\n\n  }, {\n    key: 'focusOffset',\n    get: function get() {\n      return this.selection.focusOffset;\n    }\n\n    /**\n     * Get the current start text node's closest block parent.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'startBlock',\n    get: function get() {\n      return this.startKey && this.document.getClosestBlock(this.startKey);\n    }\n\n    /**\n     * Get the current end text node's closest block parent.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'endBlock',\n    get: function get() {\n      return this.endKey && this.document.getClosestBlock(this.endKey);\n    }\n\n    /**\n     * Get the current anchor text node's closest block parent.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'anchorBlock',\n    get: function get() {\n      return this.anchorKey && this.document.getClosestBlock(this.anchorKey);\n    }\n\n    /**\n     * Get the current focus text node's closest block parent.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'focusBlock',\n    get: function get() {\n      return this.focusKey && this.document.getClosestBlock(this.focusKey);\n    }\n\n    /**\n     * Get the current start text node's closest inline parent.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'startInline',\n    get: function get() {\n      return this.startKey && this.document.getClosestInline(this.startKey);\n    }\n\n    /**\n     * Get the current end text node's closest inline parent.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'endInline',\n    get: function get() {\n      return this.endKey && this.document.getClosestInline(this.endKey);\n    }\n\n    /**\n     * Get the current anchor text node's closest inline parent.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'anchorInline',\n    get: function get() {\n      return this.anchorKey && this.document.getClosestInline(this.anchorKey);\n    }\n\n    /**\n     * Get the current focus text node's closest inline parent.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'focusInline',\n    get: function get() {\n      return this.focusKey && this.document.getClosestInline(this.focusKey);\n    }\n\n    /**\n     * Get the current start text node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'startText',\n    get: function get() {\n      return this.startKey && this.document.getDescendant(this.startKey);\n    }\n\n    /**\n     * Get the current end node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'endText',\n    get: function get() {\n      return this.endKey && this.document.getDescendant(this.endKey);\n    }\n\n    /**\n     * Get the current anchor node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'anchorText',\n    get: function get() {\n      return this.anchorKey && this.document.getDescendant(this.anchorKey);\n    }\n\n    /**\n     * Get the current focus node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'focusText',\n    get: function get() {\n      return this.focusKey && this.document.getDescendant(this.focusKey);\n    }\n\n    /**\n     * Get the next block node.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'nextBlock',\n    get: function get() {\n      return this.endKey && this.document.getNextBlock(this.endKey);\n    }\n\n    /**\n     * Get the previous block node.\n     *\n     * @return {Block}\n     */\n\n  }, {\n    key: 'previousBlock',\n    get: function get() {\n      return this.startKey && this.document.getPreviousBlock(this.startKey);\n    }\n\n    /**\n     * Get the next inline node.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'nextInline',\n    get: function get() {\n      return this.endKey && this.document.getNextInline(this.endKey);\n    }\n\n    /**\n     * Get the previous inline node.\n     *\n     * @return {Inline}\n     */\n\n  }, {\n    key: 'previousInline',\n    get: function get() {\n      return this.startKey && this.document.getPreviousInline(this.startKey);\n    }\n\n    /**\n     * Get the next text node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'nextText',\n    get: function get() {\n      return this.endKey && this.document.getNextText(this.endKey);\n    }\n\n    /**\n     * Get the previous text node.\n     *\n     * @return {Text}\n     */\n\n  }, {\n    key: 'previousText',\n    get: function get() {\n      return this.startKey && this.document.getPreviousText(this.startKey);\n    }\n\n    /**\n     * Get the characters in the current selection.\n     *\n     * @return {List<Character>}\n     */\n\n  }, {\n    key: 'characters',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.List() : this.document.getCharactersAtRange(this.selection);\n    }\n\n    /**\n     * Get the marks of the current selection.\n     *\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'marks',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.Set() : this.selection.marks || this.document.getMarksAtRange(this.selection);\n    }\n\n    /**\n     * Get the active marks of the current selection.\n     *\n     * @return {Set<Mark>}\n     */\n\n  }, {\n    key: 'activeMarks',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.Set() : this.selection.marks || this.document.getActiveMarksAtRange(this.selection);\n    }\n\n    /**\n     * Get the block nodes in the current selection.\n     *\n     * @return {List<Block>}\n     */\n\n  }, {\n    key: 'blocks',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.List() : this.document.getBlocksAtRange(this.selection);\n    }\n\n    /**\n     * Get the fragment of the current selection.\n     *\n     * @return {Document}\n     */\n\n  }, {\n    key: 'fragment',\n    get: function get() {\n      return this.selection.isUnset ? _document2.default.create() : this.document.getFragmentAtRange(this.selection);\n    }\n\n    /**\n     * Get the inline nodes in the current selection.\n     *\n     * @return {List<Inline>}\n     */\n\n  }, {\n    key: 'inlines',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.List() : this.document.getInlinesAtRange(this.selection);\n    }\n\n    /**\n     * Get the text nodes in the current selection.\n     *\n     * @return {List<Text>}\n     */\n\n  }, {\n    key: 'texts',\n    get: function get() {\n      return this.selection.isUnset ? new _immutable.List() : this.document.getTextsAtRange(this.selection);\n    }\n\n    /**\n     * Check whether the selection is empty.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEmpty',\n    get: function get() {\n      if (this.isCollapsed) return true;\n      if (this.endOffset != 0 && this.startOffset != 0) return false;\n      return this.fragment.text.length == 0;\n    }\n\n    /**\n     * Check whether the selection is collapsed in a void node.\n     *\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isInVoid',\n    get: function get() {\n      if (this.isExpanded) return false;\n      return this.document.hasVoidParent(this.startKey);\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Value` with `attrs`.\n     *\n     * @param {Object|Value} attrs\n     * @param {Object} options\n     * @return {Value}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (Value.isValue(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Value.fromJSON(attrs);\n      }\n\n      throw new Error('`Value.create` only accepts objects or values, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a dictionary of settable value properties from `attrs`.\n     *\n     * @param {Object|Value} attrs\n     * @return {Object}\n     */\n\n  }, {\n    key: 'createProperties',\n    value: function createProperties() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Value.isValue(attrs)) {\n        return {\n          data: attrs.data,\n          decorations: attrs.decorations,\n          schema: attrs.schema\n        };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        var props = {};\n        if ('data' in attrs) props.data = _data2.default.create(attrs.data);\n        if ('decorations' in attrs) props.decorations = _range2.default.createList(attrs.decorations);\n        if ('schema' in attrs) props.schema = _schema2.default.create(attrs.schema);\n        return props;\n      }\n\n      throw new Error('`Value.createProperties` only accepts objects or values, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Value` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @param {Object} options\n     *   @property {Boolean} normalize\n     *   @property {Array} plugins\n     * @return {Value}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _object$document = object.document,\n          document = _object$document === undefined ? {} : _object$document,\n          _object$selection = object.selection,\n          selection = _object$selection === undefined ? {} : _object$selection,\n          _object$schema = object.schema,\n          schema = _object$schema === undefined ? {} : _object$schema;\n\n\n      var data = new _immutable.Map();\n\n      document = _document2.default.fromJSON(document);\n      selection = _range2.default.fromJSON(selection);\n      schema = _schema2.default.fromJSON(schema);\n\n      // Allow plugins to set a default value for `data`.\n      if (options.plugins) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = options.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var plugin = _step.value;\n\n            if (plugin.data) data = data.merge(plugin.data);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      // Then merge in the `data` provided.\n      if ('data' in object) {\n        data = data.merge(object.data);\n      }\n\n      if (selection.isUnset) {\n        var text = document.getFirstText();\n        if (text) selection = selection.collapseToStartOf(text);\n      }\n\n      var value = new Value({\n        data: data,\n        document: document,\n        selection: selection,\n        schema: schema\n      });\n\n      if (options.normalize !== false) {\n        value = value.change({ save: false }).normalize().value;\n      }\n\n      return value;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isValue',\n\n\n    /**\n     * Check if a `value` is a `Value`.\n     *\n     * @param {Any} value\n     * @return {Boolean}\n     */\n\n    value: function isValue(value) {\n      return !!(value && value[_modelTypes2.default.VALUE]);\n    }\n  }]);\n\n  return Value;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nValue.fromJS = Value.fromJSON;\nValue.prototype[_modelTypes2.default.VALUE] = true;\n\n/**\n * Export.\n */\n\nexports.default = Value;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/value.js\n// module id = 334\n// module chunks = 0","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Stack.js\n// module id = 335\n// module chunks = 0","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getSymbols.js\n// module id = 336\n// module chunks = 0","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/keys.js\n// module id = 337\n// module chunks = 0","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isTypedArray.js\n// module id = 338\n// module chunks = 0","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseUnary.js\n// module id = 339\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_nodeUtil.js\n// module id = 340\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_isPrototype.js\n// module id = 341\n// module chunks = 0","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_cloneArrayBuffer.js\n// module id = 342\n// module chunks = 0","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getPrototype.js\n// module id = 343\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _character = require('./character');\n\nvar _character2 = _interopRequireDefault(_character);\n\nvar _mark = require('./mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  marks: new _immutable.Set(),\n  text: ''\n};\n\n/**\n * Leaf.\n *\n * @type {Leaf}\n */\n\nvar Leaf = function (_Record) {\n  _inherits(Leaf, _Record);\n\n  function Leaf() {\n    _classCallCheck(this, Leaf);\n\n    return _possibleConstructorReturn(this, (Leaf.__proto__ || Object.getPrototypeOf(Leaf)).apply(this, arguments));\n  }\n\n  _createClass(Leaf, [{\n    key: 'getCharacters',\n\n\n    /**\n     * Return leaf as a list of characters\n     *\n     * @return {List<Character>}\n     */\n\n    value: function getCharacters() {\n      var marks = this.marks;\n\n      var characters = _character2.default.createList(this.text.split('').map(function (char) {\n        return _character2.default.create({\n          text: char,\n          marks: marks\n        });\n      }));\n\n      return characters;\n    }\n\n    /**\n     * Return a JSON representation of the leaf.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        text: this.text,\n        marks: this.marks.toArray().map(function (m) {\n          return m.toJSON();\n        })\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the node's kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'leaf';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Leaf` with `attrs`.\n     *\n     * @param {Object|Leaf} attrs\n     * @return {Leaf}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Leaf.isLeaf(attrs)) {\n        return attrs;\n      }\n\n      if (typeof attrs == 'string') {\n        attrs = { text: attrs };\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Leaf.fromJSON(attrs);\n      }\n\n      throw new Error('`Leaf.create` only accepts objects, strings or leaves, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Leaf` list from `attrs`.\n     *\n     * @param {Array<Leaf|Object>|List<Leaf|Object>} attrs\n     * @return {List<Leaf>}\n     */\n\n  }, {\n    key: 'createList',\n    value: function createList() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (_immutable.List.isList(attrs) || Array.isArray(attrs)) {\n        var list = new _immutable.List(attrs.map(Leaf.create));\n        return list;\n      }\n\n      throw new Error('`Leaf.createList` only accepts arrays or lists, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Leaf` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Leaf}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var _object$text = object.text,\n          text = _object$text === undefined ? '' : _object$text,\n          _object$marks = object.marks,\n          marks = _object$marks === undefined ? [] : _object$marks;\n\n\n      var leaf = new Leaf({\n        text: text,\n        marks: new _immutable.Set(marks.map(_mark2.default.fromJSON))\n      });\n\n      return leaf;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isLeaf',\n\n\n    /**\n     * Check if `any` is a `Leaf`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isLeaf(any) {\n      return !!(any && any[_modelTypes2.default.LEAF]);\n    }\n\n    /**\n     * Check if `any` is a list of leaves.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isLeafList',\n    value: function isLeafList(any) {\n      return _immutable.List.isList(any) && any.every(function (item) {\n        return Leaf.isLeaf(item);\n      });\n    }\n  }]);\n\n  return Leaf;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nLeaf.fromJS = Leaf.fromJSON;\nLeaf.prototype[_modelTypes2.default.LEAF] = true;\n\n/**\n * Export.\n *\n * @type {Leaf}\n */\n\nexports.default = Leaf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/leaf.js\n// module id = 346\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _atCurrentRange = require('./at-current-range');\n\nvar _atCurrentRange2 = _interopRequireDefault(_atCurrentRange);\n\nvar _atRange = require('./at-range');\n\nvar _atRange2 = _interopRequireDefault(_atRange);\n\nvar _byKey = require('./by-key');\n\nvar _byKey2 = _interopRequireDefault(_byKey);\n\nvar _onHistory = require('./on-history');\n\nvar _onHistory2 = _interopRequireDefault(_onHistory);\n\nvar _onSelection = require('./on-selection');\n\nvar _onSelection2 = _interopRequireDefault(_onSelection);\n\nvar _onValue = require('./on-value');\n\nvar _onValue2 = _interopRequireDefault(_onValue);\n\nvar _withSchema = require('./with-schema');\n\nvar _withSchema2 = _interopRequireDefault(_withSchema);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = _extends({}, _atCurrentRange2.default, _atRange2.default, _byKey2.default, _onHistory2.default, _onSelection2.default, _onValue2.default, _withSchema2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/changes/index.js\n// module id = 347\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _pick = require('lodash/pick');\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _operation = require('../models/operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:operation:invert');\n\n/**\n * Invert an `op`.\n *\n * @param {Object} op\n * @return {Object}\n */\n\nfunction invertOperation(op) {\n  op = _operation2.default.create(op);\n  var _op = op,\n      type = _op.type;\n\n  debug(type, op);\n\n  /**\n   * Insert node.\n   */\n\n  if (type == 'insert_node') {\n    var inverse = op.set('type', 'remove_node');\n    return inverse;\n  }\n\n  /**\n   * Remove node.\n   */\n\n  if (type == 'remove_node') {\n    var _inverse = op.set('type', 'insert_node');\n    return _inverse;\n  }\n\n  /**\n   * Move node.\n   */\n\n  if (type == 'move_node') {\n    var _op2 = op,\n        newPath = _op2.newPath,\n        path = _op2.path;\n\n    var inversePath = newPath;\n    var inverseNewPath = path;\n\n    var pathLast = path.length - 1;\n    var newPathLast = newPath.length - 1;\n\n    // If the node's old position was a left sibling of an ancestor of\n    // its new position, we need to adjust part of the path by -1.\n    if (path.length < inversePath.length && path.slice(0, pathLast).every(function (e, i) {\n      return e == inversePath[i];\n    }) && path[pathLast] < inversePath[pathLast]) {\n      inversePath = inversePath.slice(0, pathLast).concat([inversePath[pathLast] - 1]).concat(inversePath.slice(pathLast + 1, inversePath.length));\n    }\n\n    // If the node's new position is an ancestor of the old position,\n    // or a left sibling of an ancestor of its old position, we need\n    // to adjust part of the path by 1.\n    if (newPath.length < inverseNewPath.length && newPath.slice(0, newPathLast).every(function (e, i) {\n      return e == inverseNewPath[i];\n    }) && newPath[newPathLast] <= inverseNewPath[newPathLast]) {\n      inverseNewPath = inverseNewPath.slice(0, newPathLast).concat([inverseNewPath[newPathLast] + 1]).concat(inverseNewPath.slice(newPathLast + 1, inverseNewPath.length));\n    }\n\n    var _inverse2 = op.set('path', inversePath).set('newPath', inverseNewPath);\n    return _inverse2;\n  }\n\n  /**\n   * Merge node.\n   */\n\n  if (type == 'merge_node') {\n    var _op3 = op,\n        _path = _op3.path;\n    var length = _path.length;\n\n    var last = length - 1;\n    var _inversePath = _path.slice(0, last).concat([_path[last] - 1]);\n    var _inverse3 = op.set('type', 'split_node').set('path', _inversePath);\n    return _inverse3;\n  }\n\n  /**\n   * Split node.\n   */\n\n  if (type == 'split_node') {\n    var _op4 = op,\n        _path2 = _op4.path;\n    var _length = _path2.length;\n\n    var _last = _length - 1;\n    var _inversePath2 = _path2.slice(0, _last).concat([_path2[_last] + 1]);\n    var _inverse4 = op.set('type', 'merge_node').set('path', _inversePath2);\n    return _inverse4;\n  }\n\n  /**\n   * Set node.\n   */\n\n  if (type == 'set_node') {\n    var _op5 = op,\n        properties = _op5.properties,\n        node = _op5.node;\n\n    var inverseNode = node.merge(properties);\n    var inverseProperties = (0, _pick2.default)(node, Object.keys(properties));\n    var _inverse5 = op.set('node', inverseNode).set('properties', inverseProperties);\n    return _inverse5;\n  }\n\n  /**\n   * Insert text.\n   */\n\n  if (type == 'insert_text') {\n    var _inverse6 = op.set('type', 'remove_text');\n    return _inverse6;\n  }\n\n  /**\n   * Remove text.\n   */\n\n  if (type == 'remove_text') {\n    var _inverse7 = op.set('type', 'insert_text');\n    return _inverse7;\n  }\n\n  /**\n   * Add mark.\n   */\n\n  if (type == 'add_mark') {\n    var _inverse8 = op.set('type', 'remove_mark');\n    return _inverse8;\n  }\n\n  /**\n   * Remove mark.\n   */\n\n  if (type == 'remove_mark') {\n    var _inverse9 = op.set('type', 'add_mark');\n    return _inverse9;\n  }\n\n  /**\n   * Set mark.\n   */\n\n  if (type == 'set_mark') {\n    var _op6 = op,\n        _properties = _op6.properties,\n        mark = _op6.mark;\n\n    var inverseMark = mark.merge(_properties);\n    var _inverseProperties = (0, _pick2.default)(mark, Object.keys(_properties));\n    var _inverse10 = op.set('mark', inverseMark).set('properties', _inverseProperties);\n    return _inverse10;\n  }\n\n  /**\n   * Set selection.\n   */\n\n  if (type == 'set_selection') {\n    var _op7 = op,\n        _properties2 = _op7.properties,\n        selection = _op7.selection,\n        value = _op7.value;\n\n    var anchorPath = _properties2.anchorPath,\n        focusPath = _properties2.focusPath,\n        props = _objectWithoutProperties(_properties2, ['anchorPath', 'focusPath']);\n\n    var document = value.document;\n\n\n    if (anchorPath !== undefined) {\n      props.anchorKey = anchorPath === null ? null : document.assertPath(anchorPath).key;\n    }\n\n    if (focusPath !== undefined) {\n      props.focusKey = focusPath === null ? null : document.assertPath(focusPath).key;\n    }\n\n    var inverseSelection = selection.merge(props);\n    var inverseProps = (0, _pick2.default)(selection, Object.keys(props));\n\n    if (anchorPath !== undefined) {\n      inverseProps.anchorPath = inverseProps.anchorKey === null ? null : document.getPath(inverseProps.anchorKey);\n      delete inverseProps.anchorKey;\n    }\n\n    if (focusPath !== undefined) {\n      inverseProps.focusPath = inverseProps.focusKey === null ? null : document.getPath(inverseProps.focusKey);\n      delete inverseProps.focusKey;\n    }\n\n    var _inverse11 = op.set('selection', inverseSelection).set('properties', inverseProps);\n    return _inverse11;\n  }\n\n  /**\n   * Set value.\n   */\n\n  if (type == 'set_value') {\n    var _op8 = op,\n        _properties3 = _op8.properties,\n        _value = _op8.value;\n\n    var inverseValue = _value.merge(_properties3);\n    var _inverseProperties2 = (0, _pick2.default)(_value, Object.keys(_properties3));\n    var _inverse12 = op.set('value', inverseValue).set('properties', _inverseProperties2);\n    return _inverse12;\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexports.default = invertOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/operations/invert.js\n// module id = 348\n// module chunks = 0","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseGet.js\n// module id = 349\n// module chunks = 0","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_freeGlobal.js\n// module id = 350\n// module chunks = 0","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_toSource.js\n// module id = 351\n// module chunks = 0","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_arrayMap.js\n// module id = 352\n// module chunks = 0","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_defineProperty.js\n// module id = 353\n// module chunks = 0","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_flatRest.js\n// module id = 354\n// module chunks = 0","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_overRest.js\n// module id = 355\n// module chunks = 0","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_setToString.js\n// module id = 356\n// module chunks = 0","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/identity.js\n// module id = 357\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _isEqual = require('lodash/isEqual');\n\nvar _isEqual2 = _interopRequireDefault(_isEqual);\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:history');\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  redos: new _immutable.Stack(),\n  undos: new _immutable.Stack()\n};\n\n/**\n * History.\n *\n * @type {History}\n */\n\nvar History = function (_Record) {\n  _inherits(History, _Record);\n\n  function History() {\n    _classCallCheck(this, History);\n\n    return _possibleConstructorReturn(this, (History.__proto__ || Object.getPrototypeOf(History)).apply(this, arguments));\n  }\n\n  _createClass(History, [{\n    key: 'save',\n\n\n    /**\n     * Save an `operation` into the history.\n     *\n     * @param {Object} operation\n     * @param {Object} options\n     * @return {History}\n     */\n\n    value: function save(operation) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var history = this;\n      var _history = history,\n          undos = _history.undos,\n          redos = _history.redos;\n      var merge = options.merge,\n          skip = options.skip;\n\n      var prevBatch = undos.peek();\n      var prevOperation = prevBatch && prevBatch.last();\n\n      if (skip == null) {\n        skip = shouldSkip(operation, prevOperation);\n      }\n\n      if (skip) {\n        return history;\n      }\n\n      if (merge == null) {\n        merge = shouldMerge(operation, prevOperation);\n      }\n\n      debug('save', { operation: operation, merge: merge });\n\n      // If the `merge` flag is true, add the operation to the previous batch.\n      if (merge && prevBatch) {\n        var batch = prevBatch.push(operation);\n        undos = undos.pop();\n        undos = undos.push(batch);\n      }\n\n      // Otherwise, create a new batch with the operation.\n      else {\n          var _batch = new _immutable.List([operation]);\n          undos = undos.push(_batch);\n        }\n\n      // Constrain the history to 100 entries for memory's sake.\n      if (undos.size > 100) {\n        undos = undos.take(100);\n      }\n\n      // Clear the redos and update the history.\n      redos = redos.clear();\n      history = history.set('undos', undos).set('redos', redos);\n      return history;\n    }\n\n    /**\n     * Return a JSON representation of the history.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        redos: this.redos.toJSON(),\n        undos: this.undos.toJSON()\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'history';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `History` with `attrs`.\n     *\n     * @param {Object|History} attrs\n     * @return {History}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (History.isHistory(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return History.fromJSON(attrs);\n      }\n\n      throw new Error('`History.create` only accepts objects or histories, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `History` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {History}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      var _object$redos = object.redos,\n          redos = _object$redos === undefined ? [] : _object$redos,\n          _object$undos = object.undos,\n          undos = _object$undos === undefined ? [] : _object$undos;\n\n\n      var history = new History({\n        redos: new _immutable.Stack(redos),\n        undos: new _immutable.Stack(undos)\n      });\n\n      return history;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isHistory',\n\n\n    /**\n     * Check if `any` is a `History`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isHistory(any) {\n      return !!(any && any[_modelTypes2.default.HISTORY]);\n    }\n  }]);\n\n  return History;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nHistory.fromJS = History.fromJSON;\nHistory.prototype[_modelTypes2.default.HISTORY] = true;\n\n/**\n * Check whether to merge a new operation `o` into the previous operation `p`.\n *\n * @param {Object} o\n * @param {Object} p\n * @return {Boolean}\n */\n\nfunction shouldMerge(o, p) {\n  if (!p) return false;\n\n  var merge = o.type == 'set_selection' && p.type == 'set_selection' || o.type == 'insert_text' && p.type == 'insert_text' && o.offset == p.offset + p.text.length && (0, _isEqual2.default)(o.path, p.path) || o.type == 'remove_text' && p.type == 'remove_text' && o.offset + o.text.length == p.offset && (0, _isEqual2.default)(o.path, p.path);\n\n  return merge;\n}\n\n/**\n * Check whether to skip a new operation `o`, given previous operation `p`.\n *\n * @param {Object} o\n * @param {Object} p\n * @return {Boolean}\n */\n\nfunction shouldSkip(o, p) {\n  if (!p) return false;\n\n  var skip = o.type == 'set_selection' && p.type == 'set_selection';\n\n  return skip;\n}\n\n/**\n * Export.\n *\n * @type {History}\n */\n\nexports.default = History;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/history.js\n// module id = 358\n// module chunks = 0","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_equalArrays.js\n// module id = 359\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Uint8Array.js\n// module id = 360\n// module chunks = 0","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getAllKeys.js\n// module id = 361\n// module chunks = 0","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseGetAllKeys.js\n// module id = 362\n// module chunks = 0","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/stubArray.js\n// module id = 363\n// module chunks = 0","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_arrayLikeKeys.js\n// module id = 364\n// module chunks = 0","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_overArg.js\n// module id = 365\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mergeWith = require('lodash/mergeWith');\n\nvar _mergeWith2 = _interopRequireDefault(_mergeWith);\n\nvar _immutable = require('immutable');\n\nvar _coreSchemaRules = require('../constants/core-schema-rules');\n\nvar _coreSchemaRules2 = _interopRequireDefault(_coreSchemaRules);\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _stack = require('./stack');\n\nvar _stack2 = _interopRequireDefault(_stack);\n\nvar _memoize = require('../utils/memoize');\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Validation failure reasons.\n *\n * @type {Object}\n */\n\nvar CHILD_KIND_INVALID = 'child_kind_invalid';\nvar CHILD_REQUIRED = 'child_required';\nvar CHILD_TYPE_INVALID = 'child_type_invalid';\nvar CHILD_UNKNOWN = 'child_unknown';\nvar FIRST_CHILD_KIND_INVALID = 'first_child_kind_invalid';\nvar FIRST_CHILD_TYPE_INVALID = 'first_child_type_invalid';\nvar LAST_CHILD_KIND_INVALID = 'last_child_kind_invalid';\nvar LAST_CHILD_TYPE_INVALID = 'last_child_type_invalid';\nvar NODE_DATA_INVALID = 'node_data_invalid';\nvar NODE_IS_VOID_INVALID = 'node_is_void_invalid';\nvar NODE_MARK_INVALID = 'node_mark_invalid';\nvar NODE_TEXT_INVALID = 'node_text_invalid';\nvar PARENT_KIND_INVALID = 'parent_kind_invalid';\nvar PARENT_TYPE_INVALID = 'parent_type_invalid';\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:schema');\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  stack: _stack2.default.create(),\n  document: {},\n  blocks: {},\n  inlines: {}\n};\n\n/**\n * Schema.\n *\n * @type {Schema}\n */\n\nvar Schema = function (_Record) {\n  _inherits(Schema, _Record);\n\n  function Schema() {\n    _classCallCheck(this, Schema);\n\n    return _possibleConstructorReturn(this, (Schema.__proto__ || Object.getPrototypeOf(Schema)).apply(this, arguments));\n  }\n\n  _createClass(Schema, [{\n    key: 'getRule',\n\n\n    /**\n     * Get the rule for an `object`.\n     *\n     * @param {Mixed} object\n     * @return {Object}\n     */\n\n    value: function getRule(object) {\n      switch (object.kind) {\n        case 'document':\n          return this.document;\n        case 'block':\n          return this.blocks[object.type];\n        case 'inline':\n          return this.inlines[object.type];\n      }\n    }\n\n    /**\n     * Get a dictionary of the parent rule validations by child type.\n     *\n     * @return {Object|Null}\n     */\n\n  }, {\n    key: 'getParentRules',\n    value: function getParentRules() {\n      var blocks = this.blocks,\n          inlines = this.inlines;\n\n      var parents = {};\n\n      for (var key in blocks) {\n        var rule = blocks[key];\n        if (rule.parent == null) continue;\n        parents[key] = rule;\n      }\n\n      for (var _key in inlines) {\n        var _rule = inlines[_key];\n        if (_rule.parent == null) continue;\n        parents[_key] = _rule;\n      }\n\n      return Object.keys(parents).length == 0 ? null : parents;\n    }\n\n    /**\n     * Fail validation by returning a normalizing change function.\n     *\n     * @param {String} reason\n     * @param {Object} context\n     * @return {Function}\n     */\n\n  }, {\n    key: 'fail',\n    value: function fail(reason, context) {\n      var _this2 = this;\n\n      return function (change) {\n        debug('normalizing', { reason: reason, context: context });\n        var rule = context.rule;\n        var size = change.operations.size;\n\n        if (rule.normalize) rule.normalize(change, reason, context);\n        if (change.operations.size > size) return;\n        _this2.normalize(change, reason, context);\n      };\n    }\n\n    /**\n     * Normalize an invalid value with `reason` and `context`.\n     *\n     * @param {Change} change\n     * @param {String} reason\n     * @param {Mixed} context\n     */\n\n  }, {\n    key: 'normalize',\n    value: function normalize(change, reason, context) {\n      switch (reason) {\n        case CHILD_KIND_INVALID:\n        case CHILD_TYPE_INVALID:\n        case CHILD_UNKNOWN:\n        case FIRST_CHILD_KIND_INVALID:\n        case FIRST_CHILD_TYPE_INVALID:\n        case LAST_CHILD_KIND_INVALID:\n        case LAST_CHILD_TYPE_INVALID:\n          {\n            var child = context.child,\n                node = context.node;\n\n            return child.kind == 'text' && node.kind == 'block' && node.nodes.size == 1 ? change.removeNodeByKey(node.key) : change.removeNodeByKey(child.key);\n          }\n\n        case CHILD_REQUIRED:\n        case NODE_TEXT_INVALID:\n        case PARENT_KIND_INVALID:\n        case PARENT_TYPE_INVALID:\n          {\n            var _node = context.node;\n\n            return _node.kind == 'document' ? _node.nodes.forEach(function (child) {\n              return change.removeNodeByKey(child.key);\n            }) : change.removeNodeByKey(_node.key);\n          }\n\n        case NODE_DATA_INVALID:\n          {\n            var _node2 = context.node,\n                key = context.key;\n\n            return _node2.data.get(key) === undefined && _node2.kind != 'document' ? change.removeNodeByKey(_node2.key) : change.setNodeByKey(_node2.key, { data: _node2.data.delete(key) });\n          }\n\n        case NODE_IS_VOID_INVALID:\n          {\n            var _node3 = context.node;\n\n            return change.setNodeByKey(_node3.key, { isVoid: !_node3.isVoid });\n          }\n\n        case NODE_MARK_INVALID:\n          {\n            var _node4 = context.node,\n                mark = context.mark;\n\n            return _node4.getTexts().forEach(function (t) {\n              return change.removeMarkByKey(t.key, 0, t.text.length, mark);\n            });\n          }\n      }\n    }\n\n    /**\n     * Validate a `node` with the schema, returning a function that will fix the\n     * invalid node, or void if the node is valid.\n     *\n     * @param {Node} node\n     * @return {Function|Void}\n     */\n\n  }, {\n    key: 'validateNode',\n    value: function validateNode(node) {\n      var _this3 = this;\n\n      var ret = this.stack.find('validateNode', node);\n      if (ret) return ret;\n\n      if (node.kind == 'text') return;\n\n      var rule = this.getRule(node) || {};\n      var parents = this.getParentRules();\n      var ctx = { node: node, rule: rule };\n\n      if (rule.isVoid != null) {\n        if (node.isVoid != rule.isVoid) {\n          return this.fail(NODE_IS_VOID_INVALID, ctx);\n        }\n      }\n\n      if (rule.data != null) {\n        for (var key in rule.data) {\n          var fn = rule.data[key];\n          var value = node.data.get(key);\n\n          if (!fn(value)) {\n            return this.fail(NODE_DATA_INVALID, _extends({}, ctx, { key: key, value: value }));\n          }\n        }\n      }\n\n      if (rule.marks != null) {\n        var marks = node.getMarks().toArray();\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          var _loop = function _loop() {\n            var mark = _step.value;\n\n            if (!rule.marks.some(function (def) {\n              return def.type === mark.type;\n            })) {\n              return {\n                v: _this3.fail(NODE_MARK_INVALID, _extends({}, ctx, { mark: mark }))\n              };\n            }\n          };\n\n          for (var _iterator = marks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _ret = _loop();\n\n            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      if (rule.text != null) {\n        var text = node.text;\n\n\n        if (!rule.text.test(text)) {\n          return this.fail(NODE_TEXT_INVALID, _extends({}, ctx, { text: text }));\n        }\n      }\n\n      if (rule.first != null) {\n        var _rule$first = rule.first,\n            kinds = _rule$first.kinds,\n            types = _rule$first.types;\n\n        var child = node.nodes.first();\n\n        if (child && kinds && !kinds.includes(child.kind)) {\n          return this.fail(FIRST_CHILD_KIND_INVALID, _extends({}, ctx, { child: child }));\n        }\n\n        if (child && types && !types.includes(child.type)) {\n          return this.fail(FIRST_CHILD_TYPE_INVALID, _extends({}, ctx, { child: child }));\n        }\n      }\n\n      if (rule.last != null) {\n        var _rule$last = rule.last,\n            _kinds = _rule$last.kinds,\n            _types = _rule$last.types;\n\n        var _child = node.nodes.last();\n\n        if (_child && _kinds && !_kinds.includes(_child.kind)) {\n          return this.fail(LAST_CHILD_KIND_INVALID, _extends({}, ctx, { child: _child }));\n        }\n\n        if (_child && _types && !_types.includes(_child.type)) {\n          return this.fail(LAST_CHILD_TYPE_INVALID, _extends({}, ctx, { child: _child }));\n        }\n      }\n\n      if (rule.nodes != null || parents != null) {\n        var nextDef = function nextDef() {\n          offset = offset == null ? null : 0;\n          def = defs.shift();\n          min = def && (def.min == null ? 0 : def.min);\n          max = def && (def.max == null ? Infinity : def.max);\n          return !!def;\n        };\n\n        var nextChild = function nextChild() {\n          index = index == null ? 0 : index + 1;\n          offset = offset == null ? 0 : offset + 1;\n          _child2 = children[index];\n          if (max != null && offset == max) nextDef();\n          return !!_child2;\n        };\n\n        var rewind = function rewind() {\n          offset -= 1;\n          index -= 1;\n        };\n\n        var children = node.nodes.toArray();\n        var defs = rule.nodes != null ? rule.nodes.slice() : [];\n\n        var offset = void 0;\n        var min = void 0;\n        var index = void 0;\n        var def = void 0;\n        var max = void 0;\n        var _child2 = void 0;\n\n        if (rule.nodes != null) {\n          nextDef();\n        }\n\n        while (nextChild()) {\n          if (parents != null && _child2.kind != 'text' && _child2.type in parents) {\n            var r = parents[_child2.type];\n\n            if (r.parent.kinds != null && !r.parent.kinds.includes(node.kind)) {\n              return this.fail(PARENT_KIND_INVALID, { node: _child2, parent: node, rule: r });\n            }\n\n            if (r.parent.types != null && !r.parent.types.includes(node.type)) {\n              return this.fail(PARENT_TYPE_INVALID, { node: _child2, parent: node, rule: r });\n            }\n          }\n\n          if (rule.nodes != null) {\n            if (!def) {\n              return this.fail(CHILD_UNKNOWN, _extends({}, ctx, { child: _child2, index: index }));\n            }\n\n            if (def.kinds != null && !def.kinds.includes(_child2.kind)) {\n              if (offset >= min && nextDef()) {\n                rewind();\n                continue;\n              }\n              return this.fail(CHILD_KIND_INVALID, _extends({}, ctx, { child: _child2, index: index }));\n            }\n\n            if (def.types != null && !def.types.includes(_child2.type)) {\n              if (offset >= min && nextDef()) {\n                rewind();\n                continue;\n              }\n              return this.fail(CHILD_TYPE_INVALID, _extends({}, ctx, { child: _child2, index: index }));\n            }\n          }\n        }\n\n        if (rule.nodes != null) {\n          while (min != null) {\n            if (offset < min) {\n              return this.fail(CHILD_REQUIRED, _extends({}, ctx, { index: index }));\n            }\n\n            nextDef();\n          }\n        }\n      }\n    }\n\n    /**\n     * Return a JSON representation of the schema.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var object = {\n        kind: this.kind,\n        document: this.document,\n        blocks: this.blocks,\n        inlines: this.inlines\n      };\n\n      return object;\n    }\n\n    /**\n     * Alias `toJS`.\n     */\n\n  }, {\n    key: 'toJS',\n    value: function toJS() {\n      return this.toJSON();\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'schema';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Create a new `Schema` with `attrs`.\n     *\n     * @param {Object|Schema} attrs\n     * @return {Schema}\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (Schema.isSchema(attrs)) {\n        return attrs;\n      }\n\n      if ((0, _isPlainObject2.default)(attrs)) {\n        return Schema.fromJSON(attrs);\n      }\n\n      throw new Error('`Schema.create` only accepts objects or schemas, but you passed it: ' + attrs);\n    }\n\n    /**\n     * Create a `Schema` from a JSON `object`.\n     *\n     * @param {Object} object\n     * @return {Schema}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(object) {\n      if (Schema.isSchema(object)) {\n        return object;\n      }\n\n      var plugins = object.plugins;\n\n\n      if (object.rules) {\n        throw new Error('Schemas in Slate have changed! They are no longer accept a `rules` property.');\n      }\n\n      if (object.nodes) {\n        throw new Error('Schemas in Slate have changed! They are no longer accept a `nodes` property.');\n      }\n\n      if (!plugins) {\n        plugins = [{ schema: object }];\n      }\n\n      var schema = resolveSchema(plugins);\n      var stack = _stack2.default.create({ plugins: [].concat(_toConsumableArray(_coreSchemaRules2.default), _toConsumableArray(plugins)) });\n      var ret = new Schema(_extends({}, schema, { stack: stack }));\n      return ret;\n    }\n\n    /**\n     * Alias `fromJS`.\n     */\n\n  }, {\n    key: 'isSchema',\n\n\n    /**\n     * Check if `any` is a `Schema`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isSchema(any) {\n      return !!(any && any[_modelTypes2.default.SCHEMA]);\n    }\n  }]);\n\n  return Schema;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Resolve a set of schema rules from an array of `plugins`.\n *\n * @param {Array} plugins\n * @return {Object}\n */\n\nSchema.fromJS = Schema.fromJSON;\nfunction resolveSchema() {\n  var plugins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var schema = {\n    document: {},\n    blocks: {},\n    inlines: {}\n  };\n\n  plugins.slice().reverse().forEach(function (plugin) {\n    if (!plugin.schema) return;\n\n    if (plugin.schema.rules) {\n      throw new Error('Schemas in Slate have changed! They are no longer accept a `rules` property.');\n    }\n\n    if (plugin.schema.nodes) {\n      throw new Error('Schemas in Slate have changed! They are no longer accept a `nodes` property.');\n    }\n\n    var _plugin$schema = plugin.schema,\n        _plugin$schema$docume = _plugin$schema.document,\n        document = _plugin$schema$docume === undefined ? {} : _plugin$schema$docume,\n        _plugin$schema$blocks = _plugin$schema.blocks,\n        blocks = _plugin$schema$blocks === undefined ? {} : _plugin$schema$blocks,\n        _plugin$schema$inline = _plugin$schema.inlines,\n        inlines = _plugin$schema$inline === undefined ? {} : _plugin$schema$inline;\n\n    var d = resolveDocumentRule(document);\n    var bs = {};\n    var is = {};\n\n    for (var key in blocks) {\n      bs[key] = resolveNodeRule('block', key, blocks[key]);\n    }\n\n    for (var _key2 in inlines) {\n      is[_key2] = resolveNodeRule('inline', _key2, inlines[_key2]);\n    }\n\n    (0, _mergeWith2.default)(schema.document, d, customizer);\n    (0, _mergeWith2.default)(schema.blocks, bs, customizer);\n    (0, _mergeWith2.default)(schema.inlines, is, customizer);\n  });\n\n  return schema;\n}\n\n/**\n * Resolve a document rule `obj`.\n *\n * @param {Object} obj\n * @return {Object}\n */\n\nfunction resolveDocumentRule(obj) {\n  return _extends({\n    data: {},\n    nodes: null\n  }, obj);\n}\n\n/**\n * Resolve a node rule with `type` from `obj`.\n *\n * @param {String} kind\n * @param {String} type\n * @param {Object} obj\n * @return {Object}\n */\n\nfunction resolveNodeRule(kind, type, obj) {\n  return _extends({\n    data: {},\n    isVoid: null,\n    nodes: null,\n    first: null,\n    last: null,\n    parent: null,\n    text: null\n  }, obj);\n}\n\n/**\n * A Lodash customizer for merging schema definitions. Special cases `kinds`\n * and `types` arrays to be unioned, and ignores new `null` values.\n *\n * @param {Mixed} target\n * @param {Mixed} source\n * @return {Array|Void}\n */\n\nfunction customizer(target, source, key) {\n  if (key == 'kinds' || key == 'types') {\n    return target == null ? source : target.concat(source);\n  } else {\n    return source == null ? target : source;\n  }\n}\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nSchema.prototype[_modelTypes2.default.SCHEMA] = true;\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Schema.prototype, ['getParentRules'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Schema}\n */\n\nexports.default = Schema;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/schema.js\n// module id = 366\n// module chunks = 0","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_assignMergeValue.js\n// module id = 367\n// module chunks = 0","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_cloneBuffer.js\n// module id = 368\n// module chunks = 0","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_cloneTypedArray.js\n// module id = 369\n// module chunks = 0","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_copyArray.js\n// module id = 370\n// module chunks = 0","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_initCloneObject.js\n// module id = 371\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isPlainObject.js\n// module id = 372\n// module chunks = 0","/**\n * Gets the value at `key`, unless `key` is \"__proto__\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  return key == '__proto__'\n    ? undefined\n    : object[key];\n}\n\nmodule.exports = safeGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_safeGet.js\n// module id = 373\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _memoize = require('../utils/memoize');\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Default properties.\n *\n * @type {Object}\n */\n\nvar DEFAULTS = {\n  plugins: []\n};\n\n/**\n * Stack.\n *\n * @type {Stack}\n */\n\nvar Stack = function (_Record) {\n  _inherits(Stack, _Record);\n\n  function Stack() {\n    _classCallCheck(this, Stack);\n\n    return _possibleConstructorReturn(this, (Stack.__proto__ || Object.getPrototypeOf(Stack)).apply(this, arguments));\n  }\n\n  _createClass(Stack, [{\n    key: 'getPluginsWith',\n\n\n    /**\n     * Get all plugins with `property`.\n     *\n     * @param {String} property\n     * @return {Array}\n     */\n\n    value: function getPluginsWith(property) {\n      return this.plugins.filter(function (plugin) {\n        return plugin[property] != null;\n      });\n    }\n\n    /**\n     * Iterate the plugins with `property`, returning the first non-null value.\n     *\n     * @param {String} property\n     * @param {Any} ...args\n     */\n\n  }, {\n    key: 'find',\n    value: function find(property) {\n      var plugins = this.getPluginsWith(property);\n\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var plugin = _step.value;\n\n          var ret = plugin[property].apply(plugin, args);\n          if (ret != null) return ret;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    /**\n     * Iterate the plugins with `property`, returning all the non-null values.\n     *\n     * @param {String} property\n     * @param {Any} ...args\n     * @return {Array}\n     */\n\n  }, {\n    key: 'map',\n    value: function map(property) {\n      var plugins = this.getPluginsWith(property);\n      var array = [];\n\n      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = plugins[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var plugin = _step2.value;\n\n          var ret = plugin[property].apply(plugin, args);\n          if (ret != null) array.push(ret);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return array;\n    }\n\n    /**\n     * Iterate the plugins with `property`, breaking on any a non-null values.\n     *\n     * @param {String} property\n     * @param {Any} ...args\n     */\n\n  }, {\n    key: 'run',\n    value: function run(property) {\n      var plugins = this.getPluginsWith(property);\n\n      for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        args[_key3 - 1] = arguments[_key3];\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var plugin = _step3.value;\n\n          var ret = plugin[property].apply(plugin, args);\n          if (ret != null) return;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n\n    /**\n     * Iterate the plugins with `property`, reducing to a set of React children.\n     *\n     * @param {String} property\n     * @param {Object} props\n     * @param {Any} ...args\n     */\n\n  }, {\n    key: 'render',\n    value: function render(property, props) {\n      var plugins = this.getPluginsWith(property).slice().reverse();\n      var _props$children = props.children,\n          children = _props$children === undefined ? null : _props$children;\n\n      for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n        args[_key4 - 2] = arguments[_key4];\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n\n        for (var _iterator4 = plugins[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var plugin = _step4.value;\n\n          var ret = plugin[property].apply(plugin, [props].concat(args));\n          if (ret == null) continue;\n          props.children = children = ret;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return children;\n    }\n  }, {\n    key: 'kind',\n\n\n    /**\n     * Get the kind.\n     *\n     * @return {String}\n     */\n\n    get: function get() {\n      return 'stack';\n    }\n  }], [{\n    key: 'create',\n\n\n    /**\n     * Constructor.\n     *\n     * @param {Object} attrs\n     */\n\n    value: function create() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _attrs$plugins = attrs.plugins,\n          plugins = _attrs$plugins === undefined ? [] : _attrs$plugins;\n\n      var stack = new Stack({ plugins: plugins });\n      return stack;\n    }\n\n    /**\n     * Check if `any` is a `Stack`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isStack',\n    value: function isStack(any) {\n      return !!(any && any[_modelTypes2.default.STACK]);\n    }\n  }]);\n\n  return Stack;\n}((0, _immutable.Record)(DEFAULTS));\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nStack.prototype[_modelTypes2.default.STACK] = true;\n\n/**\n * Memoize read methods.\n */\n\n(0, _memoize2.default)(Stack.prototype, ['getPluginsWith'], {\n  takesArguments: true\n});\n\n/**\n * Export.\n *\n * @type {Stack}\n */\n\nexports.default = Stack;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/stack.js\n// module id = 374\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _operation2 = require('../models/operation');\n\nvar _operation3 = _interopRequireDefault(_operation2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:operation:apply');\n\n/**\n * Applying functions.\n *\n * @type {Object}\n */\n\nvar APPLIERS = {\n\n  /**\n   * Add mark to text at `offset` and `length` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  add_mark: function add_mark(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        length = operation.length,\n        mark = operation.mark;\n    var _value = value,\n        document = _value.document;\n\n    var node = document.assertPath(path);\n    node = node.addMark(offset, length, mark);\n    document = document.updateNode(node);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Insert a `node` at `index` in a node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  insert_node: function insert_node(value, operation) {\n    var path = operation.path,\n        node = operation.node;\n\n    var index = path[path.length - 1];\n    var rest = path.slice(0, -1);\n    var _value2 = value,\n        document = _value2.document;\n\n    var parent = document.assertPath(rest);\n    parent = parent.insertNode(index, node);\n    document = document.updateNode(parent);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Insert `text` at `offset` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  insert_text: function insert_text(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        text = operation.text,\n        marks = operation.marks;\n    var _value3 = value,\n        document = _value3.document,\n        selection = _value3.selection;\n    var _selection = selection,\n        anchorKey = _selection.anchorKey,\n        focusKey = _selection.focusKey,\n        anchorOffset = _selection.anchorOffset,\n        focusOffset = _selection.focusOffset;\n\n    var node = document.assertPath(path);\n\n    // Update the document\n    node = node.insertText(offset, text, marks);\n    document = document.updateNode(node);\n\n    // Update the selection\n    if (anchorKey == node.key && anchorOffset >= offset) {\n      selection = selection.moveAnchor(text.length);\n    }\n    if (focusKey == node.key && focusOffset >= offset) {\n      selection = selection.moveFocus(text.length);\n    }\n\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Merge a node at `path` with the previous node.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  merge_node: function merge_node(value, operation) {\n    var path = operation.path;\n\n    var withPath = path.slice(0, path.length - 1).concat([path[path.length - 1] - 1]);\n    var _value4 = value,\n        document = _value4.document,\n        selection = _value4.selection;\n\n    var one = document.assertPath(withPath);\n    var two = document.assertPath(path);\n    var parent = document.getParent(one.key);\n    var oneIndex = parent.nodes.indexOf(one);\n    var twoIndex = parent.nodes.indexOf(two);\n\n    // Perform the merge in the document.\n    parent = parent.mergeNode(oneIndex, twoIndex);\n    document = document.updateNode(parent);\n\n    // If the nodes are text nodes and the selection is inside the second node\n    // update it to refer to the first node instead.\n    if (one.kind == 'text') {\n      var _selection2 = selection,\n          anchorKey = _selection2.anchorKey,\n          anchorOffset = _selection2.anchorOffset,\n          focusKey = _selection2.focusKey,\n          focusOffset = _selection2.focusOffset;\n\n      var normalize = false;\n\n      if (anchorKey == two.key) {\n        selection = selection.moveAnchorTo(one.key, one.text.length + anchorOffset);\n        normalize = true;\n      }\n\n      if (focusKey == two.key) {\n        selection = selection.moveFocusTo(one.key, one.text.length + focusOffset);\n        normalize = true;\n      }\n\n      if (normalize) {\n        selection = selection.normalize(document);\n      }\n    }\n\n    // Update the document and selection.\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Move a node by `path` to `newPath`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  move_node: function move_node(value, operation) {\n    var path = operation.path,\n        newPath = operation.newPath;\n\n    var newIndex = newPath[newPath.length - 1];\n    var newParentPath = newPath.slice(0, -1);\n    var oldParentPath = path.slice(0, -1);\n    var oldIndex = path[path.length - 1];\n    var _value5 = value,\n        document = _value5.document;\n\n    var node = document.assertPath(path);\n\n    // Remove the node from its current parent.\n    var parent = document.getParent(node.key);\n    parent = parent.removeNode(oldIndex);\n    document = document.updateNode(parent);\n\n    // Find the new target...\n    var target = void 0;\n\n    // If the old path and the rest of the new path are the same, then the new\n    // target is the old parent.\n    if (oldParentPath.every(function (x, i) {\n      return x === newParentPath[i];\n    }) && oldParentPath.length === newParentPath.length) {\n      target = parent;\n    }\n\n    // Otherwise, if the old path removal resulted in the new path being no longer\n    // correct, we need to decrement the new path at the old path's last index.\n    else if (oldParentPath.every(function (x, i) {\n        return x === newParentPath[i];\n      }) && oldIndex < newParentPath[oldParentPath.length]) {\n        newParentPath[oldParentPath.length]--;\n        target = document.assertPath(newParentPath);\n      }\n\n      // Otherwise, we can just grab the target normally...\n      else {\n          target = document.assertPath(newParentPath);\n        }\n\n    // Insert the new node to its new parent.\n    target = target.insertNode(newIndex, node);\n    document = document.updateNode(target);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Remove mark from text at `offset` and `length` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  remove_mark: function remove_mark(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        length = operation.length,\n        mark = operation.mark;\n    var _value6 = value,\n        document = _value6.document;\n\n    var node = document.assertPath(path);\n    node = node.removeMark(offset, length, mark);\n    document = document.updateNode(node);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Remove a node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  remove_node: function remove_node(value, operation) {\n    var path = operation.path;\n    var _value7 = value,\n        document = _value7.document,\n        selection = _value7.selection;\n    var _selection3 = selection,\n        startKey = _selection3.startKey,\n        endKey = _selection3.endKey;\n\n    var node = document.assertPath(path);\n\n    // If the selection is set, check to see if it needs to be updated.\n    if (selection.isSet) {\n      var hasStartNode = node.hasNode(startKey);\n      var hasEndNode = node.hasNode(endKey);\n      var first = node.kind == 'text' ? node : node.getFirstText() || node;\n      var last = node.kind == 'text' ? node : node.getLastText() || node;\n      var prev = document.getPreviousText(first.key);\n      var next = document.getNextText(last.key);\n\n      // If the start point was in this node, update it to be just before/after.\n      if (hasStartNode) {\n        if (prev) {\n          selection = selection.moveStartTo(prev.key, prev.text.length);\n        } else if (next) {\n          selection = selection.moveStartTo(next.key, 0);\n        } else {\n          selection = selection.deselect();\n        }\n      }\n\n      // If the end point was in this node, update it to be just before/after.\n      if (selection.isSet && hasEndNode) {\n        if (prev) {\n          selection = selection.moveEndTo(prev.key, prev.text.length);\n        } else if (next) {\n          selection = selection.moveEndTo(next.key, 0);\n        } else {\n          selection = selection.deselect();\n        }\n      }\n\n      // If the selection wasn't deselected, normalize it.\n      if (selection.isSet) {\n        selection = selection.normalize(document);\n      }\n    }\n\n    // Remove the node from the document.\n    var parent = document.getParent(node.key);\n    var index = parent.nodes.indexOf(node);\n    parent = parent.removeNode(index);\n    document = document.updateNode(parent);\n\n    // Update the document and selection.\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Remove `text` at `offset` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  remove_text: function remove_text(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        text = operation.text;\n    var length = text.length;\n\n    var rangeOffset = offset + length;\n    var _value8 = value,\n        document = _value8.document,\n        selection = _value8.selection;\n    var _selection4 = selection,\n        anchorKey = _selection4.anchorKey,\n        focusKey = _selection4.focusKey,\n        anchorOffset = _selection4.anchorOffset,\n        focusOffset = _selection4.focusOffset;\n\n    var node = document.assertPath(path);\n\n    if (anchorKey == node.key && anchorOffset >= rangeOffset) {\n      selection = selection.moveAnchor(-length);\n    }\n\n    if (focusKey == node.key && focusOffset >= rangeOffset) {\n      selection = selection.moveFocus(-length);\n    }\n\n    node = node.removeText(offset, length);\n    document = document.updateNode(node);\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Set `properties` on mark on text at `offset` and `length` in node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  set_mark: function set_mark(value, operation) {\n    var path = operation.path,\n        offset = operation.offset,\n        length = operation.length,\n        mark = operation.mark,\n        properties = operation.properties;\n    var _value9 = value,\n        document = _value9.document;\n\n    var node = document.assertPath(path);\n    node = node.updateMark(offset, length, mark, properties);\n    document = document.updateNode(node);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Set `properties` on a node by `path`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  set_node: function set_node(value, operation) {\n    var path = operation.path,\n        properties = operation.properties;\n    var _value10 = value,\n        document = _value10.document;\n\n    var node = document.assertPath(path);\n    node = node.merge(properties);\n    document = document.updateNode(node);\n    value = value.set('document', document);\n    return value;\n  },\n\n\n  /**\n   * Set `properties` on the selection.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  set_selection: function set_selection(value, operation) {\n    var properties = operation.properties;\n\n    var anchorPath = properties.anchorPath,\n        focusPath = properties.focusPath,\n        props = _objectWithoutProperties(properties, ['anchorPath', 'focusPath']);\n\n    var _value11 = value,\n        document = _value11.document,\n        selection = _value11.selection;\n\n\n    if (anchorPath !== undefined) {\n      props.anchorKey = anchorPath === null ? null : document.assertPath(anchorPath).key;\n    }\n\n    if (focusPath !== undefined) {\n      props.focusKey = focusPath === null ? null : document.assertPath(focusPath).key;\n    }\n\n    selection = selection.merge(props);\n    selection = selection.normalize(document);\n    value = value.set('selection', selection);\n    return value;\n  },\n\n\n  /**\n   * Set `properties` on `value`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  set_value: function set_value(value, operation) {\n    var properties = operation.properties;\n\n    value = value.merge(properties);\n    return value;\n  },\n\n\n  /**\n   * Split a node by `path` at `offset`.\n   *\n   * @param {Value} value\n   * @param {Operation} operation\n   * @return {Value}\n   */\n\n  split_node: function split_node(value, operation) {\n    var path = operation.path,\n        position = operation.position;\n    var _value12 = value,\n        document = _value12.document,\n        selection = _value12.selection;\n\n    // Calculate a few things...\n\n    var node = document.assertPath(path);\n    var parent = document.getParent(node.key);\n    var index = parent.nodes.indexOf(node);\n\n    // Split the node by its parent.\n    parent = parent.splitNode(index, position);\n    document = document.updateNode(parent);\n\n    // Determine whether we need to update the selection...\n    var _selection5 = selection,\n        startKey = _selection5.startKey,\n        endKey = _selection5.endKey,\n        startOffset = _selection5.startOffset,\n        endOffset = _selection5.endOffset;\n\n    var next = document.getNextText(node.key);\n    var normalize = false;\n\n    // If the start point is after or equal to the split, update it.\n    if (node.key == startKey && position <= startOffset) {\n      selection = selection.moveStartTo(next.key, startOffset - position);\n      normalize = true;\n    }\n\n    // If the end point is after or equal to the split, update it.\n    if (node.key == endKey && position <= endOffset) {\n      selection = selection.moveEndTo(next.key, endOffset - position);\n      normalize = true;\n    }\n\n    // Normalize the selection if we changed it, since the methods we use might\n    // leave it in a non-normalized value.\n    if (normalize) {\n      selection = selection.normalize(document);\n    }\n\n    // Return the updated value.\n    value = value.set('document', document).set('selection', selection);\n    return value;\n  }\n};\n\n/**\n * Apply an `operation` to a `value`.\n *\n * @param {Value} value\n * @param {Object|Operation} operation\n * @return {Value} value\n */\n\nfunction applyOperation(value, operation) {\n  operation = _operation3.default.create(operation);\n  var _operation = operation,\n      type = _operation.type;\n\n  var apply = APPLIERS[type];\n\n  if (!apply) {\n    throw new Error('Unknown operation type: \"' + type + '\".');\n  }\n\n  debug(type, operation);\n  value = apply(value, operation);\n  return value;\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexports.default = applyOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/operations/apply.js\n// module id = 375\n// module chunks = 0","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getSymbolsIn.js\n// module id = 376\n// module chunks = 0","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getAllKeysIn.js\n// module id = 377\n// module chunks = 0","/* eslint-env browser */\nimport React from 'react';\nimport Redirect from 'react-router-dom/Redirect';\nimport axios from 'axios';\nimport queryString from 'query-string';\n\nimport CampaignEditor from './editor';\nimport Message from '../../../components/message';\n\nimport './scss/style.scss';\n\nconst isNumber = (num) => {\n  const numbers = String(num).match('[0-9]+');\n  if (numbers) {\n    return numbers[0] === String(num);\n  }\n  return false;\n};\nconst numLength = (num, minLength, maxLength) =>\n  String(num).length >= minLength && String(num).length <= maxLength;\n\nclass EditCampaign extends React.Component {\n  // Sets up state and props and binds this to the class methods.\n  constructor(props) {\n    super(props);\n    this.state = {\n      nonprofitInfo: {},\n      campaigns: {},\n      campaignInfo: {\n        name: '',\n        fundingNeeded: 100,\n        duration: 10,\n      },\n      contentInfo: {},\n      campaignContent: [],\n      fetched: false,\n      hasCampaign: false,\n      campaignId: null,\n      campaignCreated: false,\n      campaignCreatedId: null,\n      valid: false,\n      editorData: {},\n      message: {\n        type: '',\n        message: '',\n      },\n      error: {\n        type: '',\n        message: '',\n      },\n      campaignSaved: false,\n    };\n    this.componentWillMount = this.componentWillMount.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.onChangeEditorData = this.onChangeEditorData.bind(this);\n  }\n\n  componentWillMount() {\n    if ('id' in this.props.match.params) {\n      const editCampaignId = parseInt(this.props.match.params.id, 10);\n      this.setState({ valid: true });\n      const { origin } = queryString.parse(this.props.location.search);\n      if (origin === 'create-campaign') {\n        this.setState({\n          message: {\n            type: 'campaign created',\n            message: 'Your campaign was successfully created.',\n          },\n        });\n      }\n\n      axios.get(`https://${window.location.hostname}:3000/api/nonprofits/campaigns/${this.props.userAuth.accessToken}`)\n        .then((results) => {\n          this.setState({ campaigns: results.data.data.campaigns });\n          this.setState({ nonprofitInfo: results.data.data.nonprofit });\n\n          this.setState({ campaignId: editCampaignId });\n\n          if (this.state.campaigns.find(campaign =>\n            campaign.campaignId === parseInt(editCampaignId, 10))\n          ) {\n            this.setState({ hasCampaign: true });\n\n            axios.get(`https://${window.location.hostname}:3000/api/campaigns/${editCampaignId}?accessToken=${this.props.userAuth.accessToken}`)\n              .then((campaignResults) => {\n                const { campaignInfo, campaignContent } = campaignResults.data.data;\n                campaignInfo.fundingNeeded = parseFloat(campaignInfo.fundingNeeded);\n\n                document.title = `Edit ${campaignInfo.name} Campaign - Design Bright`;\n\n                this.setState({ campaignInfo });\n                this.setState({\n                  contentInfo: results.data.data.contentInfo,\n                  campaignSaved: true,\n                });\n                this.setState({ campaignContent });\n                this.setState({ fetched: true });\n              })\n              .catch(error => console.log(error));\n          } else {\n            this.setState({ hasCampaign: false });\n            this.setState({ fetched: true });\n          }\n        })\n        .catch(error => console.log(error));\n    } else {\n      this.setState({\n        fetched: true,\n        hasCampaign: true,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.validate();\n  }\n\n  onChange(e) {\n    const { target } = e;\n    const { name } = target;\n    let value;\n\n    if (name === 'fundingNeeded') {\n      value = target.value.replace(/\\.|,|[^0-9.]/g, '');\n      if (value === '') {\n        value = 100;\n      }\n    } else {\n      value = target.type === 'checkbox' ? target.checked : target.value;\n    }\n\n    const { campaignInfo } = this.state;\n    campaignInfo[name] = value;\n    this.setState(\n      {\n        campaignInfo,\n        campaignSaved: false,\n      },\n      () => {\n        if (this.validate()) {\n          this.setState({ valid: true });\n        } else {\n          this.setState({ valid: false });\n        }\n      },\n    );\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { accessToken } = this.props.userAuth;\n    if (this.state.campaignContent.length > 0) {\n      axios.patch(\n        `https://${window.location.hostname}:3000/api/campaigns/edit/${this.state.campaignInfo.campaignId}`,\n        {\n          campaignInfo: this.state.campaignInfo,\n          campaignContent: this.state.editorData,\n          accessToken,\n        },\n      )\n        .then((editCampaignResults) => {\n          window.scrollTo(0, 0);\n          this.setState({\n            message: {\n              type: 'edit campaign',\n              message: editCampaignResults.data.message,\n            },\n            campaignSaved: true,\n          });\n        })\n        .catch((editCampaignErr) => {\n          window.scrollTo(0, 0);\n          this.setState({\n            error: {\n              type: 'edit campaign',\n              message: editCampaignErr.response.data.message,\n            },\n          });\n        });\n    } else {\n      axios.post(\n        `https://${window.location.hostname}:3000/api/campaigns/create`,\n        {\n          newCampaign: {\n            ...this.state.campaignInfo,\n            content: this.state.editorData,\n          },\n          accessToken,\n        },\n      )\n        .then((createCampaignResults) => {\n          window.scrollTo(0, 0);\n          this.setState({\n            campaignCreated: true,\n            campaignCreatedId: createCampaignResults.data.data.campaignId,\n          });\n          this.setState({\n            message: {\n              type: 'edit campaign',\n              message: createCampaignResults.data.message,\n            },\n          });\n        })\n        .catch((createCampaignErr) => {\n          window.scrollTo(0, 0);\n          if (createCampaignErr.response.data.statusCode === 409) {\n            const { campaignInfo } = this.state;\n            campaignInfo.name = '';\n            this.setState({\n              campaignInfo,\n            });\n          }\n          this.setState({\n            error: {\n              type: 'edit campaign',\n              message: createCampaignErr.response.data.message,\n            },\n          });\n        });\n    }\n  }\n\n  onChangeEditorData(editorData, campaignSaved) {\n    this.setState(\n      {\n        editorData,\n        campaignSaved,\n      },\n      () => {\n        if (this.validate()) {\n          this.setState({ valid: true });\n        } else {\n          this.setState({ valid: false });\n        }\n      },\n    );\n  }\n\n  validate() {\n    if (this.state.campaignInfo.startDate) {\n      if (this.state.editorData.document.nodes[0].nodes[0].ranges[0].text !== '') {\n        return true;\n      }\n    } else if (\n      this.state.campaignInfo.name.length > 0\n      && (isNumber(this.state.campaignInfo.duration)\n        && numLength(this.state.campaignInfo.duration, 2, 2))\n      && (isNumber(this.state.campaignInfo.fundingNeeded)\n        && numLength(this.state.campaignInfo.fundingNeeded, 3, 6))\n      && this.state.editorData.document.nodes[0].nodes[0].ranges[0].text !== ''\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    if (this.state.campaignCreated) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/campaign/edit/${this.state.campaignCreatedId}`,\n            search: '?origin=create-campaign',\n          }} />\n      );\n    } else if (this.props.onRequireAuth()) {\n      if (this.props.userInfo.userType === 'non-profit') {\n        if (this.state.fetched) {\n          if (this.state.hasCampaign) {\n            return (\n              <main id=\"editCampaigns\" className={`small-12 columns${('ontouchstart' in document.documentElement) ? '' : ' no-touch'}`}>\n                <Message\n                  error={this.state.error}\n                  onClearMessage={() => this.setState({ message: { type: '', message: '' } })}\n                  message={this.state.message}\n                  onClearError={() => this.setState({ error: { type: '', message: '' } })} />\n                <section className=\"row align-center\">\n                  <form className=\"small-12 columns\" onSubmit={this.onSubmit}>\n                    <div className=\"row header\">\n                      <h1 className=\"small-12 columns\">\n                        <span className=\"underlined\">\n                          {this.state.campaignContent.length > 0\n                            ? `Edit ${this.state.campaignInfo.name}'s Campaign`\n                            : `Create ${this.state.campaignInfo.name\n                              ? `${this.state.campaignInfo.name}'s`\n                              : ''} Campaign`}\n                        </span>\n                      </h1>\n                      {this.state.campaignInfo.startDate\n                        ? (\n                          <p className=\"message small-12 columns\">\n                            {((new Date(Date.parse(this.state.campaignInfo.endDate))).getTime()\n      <= (new Date()).getTime())\n                              ? 'This campaign has already ended so only it\\'s content can be modified.'\n                              : 'This campaign has already started so only it\\'s content can be modified.'}\n                          </p>\n                        )\n                        : null}\n                    </div>\n                    <div className=\"row\">\n                      {this.state.campaignInfo.startDate\n                        ? (\n                          <div className=\"small-12 large-5 columns\">\n                            <p className=\"title\">Campaign Name:</p>\n                            <p className=\"info\">{this.state.campaignInfo.name}</p>\n                            <p className=\"title\">Campaign Duration:</p>\n                            <p className=\"info\">{this.state.campaignInfo.duration} Days</p>\n                            <p className=\"title\">Funding Needed:</p>\n                            <p className=\"info\">${this.state.campaignInfo.fundingNeeded}</p>\n                            <p className=\"title\">Start Date:</p>\n                            <p className=\"info\">\n                              {(new Date(Date.parse(this.state.campaignInfo.startDate)))\n                                .toLocaleDateString()}\n                            </p>\n                            {this.state.campaignInfo.endDate\n                              ? (\n                                <div>\n                                  <p className=\"title\">End Date:</p>\n                                  <p className=\"info\">\n                                    {(new Date(Date.parse(this.state.campaignInfo.endDate)))\n                                      .toLocaleDateString()}\n                                  </p>\n                                </div>\n                              )\n                              : null}\n                          </div>\n                        )\n                        : (\n                          <div className=\"small-12 large-5 columns\">\n                            <label htmlFor=\"name\">\n                              Campaign Name: <span className=\"required\">*</span>\n                            </label>\n                            <input\n                              value={this.state.campaignInfo.name}\n                              onChange={this.onChange}\n                              type=\"text\"\n                              name=\"name\"\n                              id=\"campaignName\"\n                              required />\n                            <label\n                              htmlFor=\"duration\"\n                              className={`row${(isNumber(this.state.campaignInfo.duration) && numLength(this.state.campaignInfo.duration, 2, 2)) ? '' : ' invalid'}`}>\n                              <div className=\"small-12 columns\">\n                                Campaign Duration (Days): <span className=\"required\">*</span>\n                              </div>\n                              <div className=\"small-12 columns\">\n                                <span className=\"error\">\n                                  The campaign duration must be between 10 and 99 days.\n                                </span>\n                              </div>\n                            </label>\n                            <input\n                              value={this.state.campaignInfo.duration}\n                              onChange={this.onChange}\n                              type=\"number\"\n                              name=\"duration\"\n                              id=\"campaignDuration\"\n                              required />\n                            <label\n                              htmlFor=\"fundingNeeded\"\n                              className={`row${(isNumber(this.state.campaignInfo.fundingNeeded) && numLength(this.state.campaignInfo.fundingNeeded, 3, 6)) ? '' : ' invalid'}`}>\n                              <div className=\"small-12 columns\">\n                                Funding Needed: <span className=\"required\">*</span>\n                              </div>\n                              <div className=\"small-12 columns\">\n                                <span className=\"error\">\n                                  Funding must be more than $100 but less than $1,000,000.\n                                </span>\n                              </div>\n                            </label>\n                            <input\n                              value={`$${parseInt(this.state.campaignInfo.fundingNeeded, 10).toLocaleString()}`}\n                              onChange={this.onChange}\n                              type=\"text\"\n                              name=\"fundingNeeded\"\n                              id=\"campaignFunding\"\n                              required />\n                          </div>\n                        )}\n                      <div className=\"small-12 large-7 columns\">\n                        <label htmlFor=\"campaignEditor\">\n                          Campaign Content: <span className=\"required\">*</span>\n                        </label>\n                        <CampaignEditor\n                          content={this.state.campaignContent}\n                          campaignInfo={this.state.campaignInfo}\n                          nonprofitInfo={this.state.nonprofitInfo}\n                          campaignId={this.state.campaignId}\n                          onChangeEditorData={this.onChangeEditorData} />\n                      </div>\n                    </div>\n                    <div className=\"row align-center\">\n                      <button\n                        className={`primary small-11 medium-10 large-8 columns${\n                          this.state.campaignContent.length > 0\n                            ? `${this.state.valid && !this.state.campaignSaved ? '' : ' disabled'}`\n                            : `${this.state.valid ? '' : ' disabled'}`}`}\n                        disabled={this.state.campaignContent.length > 0\n                          ? (!this.state.valid && this.state.campaignSaved)\n                          : !this.state.valid}\n                        type=\"submit\"\n                        onClick={this.onSubmit}>\n                        {this.state.campaignContent.length > 0\n                          ? `${this.state.campaignSaved ? 'No Changes Made' : 'Save Changes'}`\n                          : 'Create Campaign'}\n                      </button>\n                      {!this.state.valid\n                        ? (\n                          <span className='error small-12'>\n                            Please make sure you've entered all your information.\n                          </span>\n                        )\n                        : null}\n                    </div>\n                  </form>\n                </section>\n              </main >\n            );\n          }\n          return (\n            <Redirect to={{\n              pathname: '/manage-campaigns',\n              search: '?origin=not-auth-to-edit',\n            }} />\n          );\n        }\n        return (\n          <h1>Loading</h1>\n        );\n      }\n      return (\n        <Redirect to={{\n          pathname: '/user/profile',\n          search: '?origin=nonprofit-page',\n        }} />\n      );\n    }\n    return (\n      <Redirect to={{\n        pathname: '/login',\n        search: '?origin=secure',\n      }} />\n    );\n  }\n}\n\nexport default EditCampaign;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/editCampaign/components/index.js","/* eslint-env browser */\nimport { Editor, Block, Raw } from 'slate';\nimport React from 'react';\nimport isUrl from 'is-url';\nimport axios from 'axios';\n\nimport isImage from '../../../../helpers';\n\nimport Images from './images';\nimport Toolbar from './toolbar';\nimport CreateLink from './createLink';\nimport CreateImage from './createImage';\n\nimport './scss/style.scss';\n\nconst defaultBlock = {\n  type: 'paragraph',\n  isVoid: false,\n  data: {},\n};\n\n/**\n * Define a schema.\n *\n * @type {Object}\n */\n\nconst schema = {\n  nodes: {\n    header: props =>\n      <h2 {...props.attributes}>\n        <span className=\"underlined\">\n          {props.children}\n        </span>\n      </h2>,\n    paragraph: props =>\n      <p {...props.attributes}>\n        {props.children}\n      </p>,\n    bulletedList: props => <ul>{props.children}</ul>,\n    listItem: props => <li>{props.children}</li>,\n    numberedList: props => <ol>{props.children}</ol>,\n    link: (props) => {\n      const url = props.node.data.get('url');\n      return <a\n        href={url} {...props.attributes}>\n        {props.children}\n      </a>;\n    },\n    image: (props) => {\n      const { node, state } = props;\n      const active = state.isFocused && state.selection.hasEdgeIn(node);\n      const src = node.data.get('src');\n      const alt = node.data.get('alt');\n      const imageType = node.data.get('imageType');\n      const className = active ? 'active' : null;\n      return (\n        <Images\n          src={src}\n          className={className}\n          imageType={imageType}\n          attributes={props.attributes}\n          alt={alt} />\n      );\n    },\n  },\n  marks: {\n    bold: {\n      fontWeight: 'bold',\n    },\n    italic: {\n      fontStyle: 'italic',\n    },\n    underlined: {\n      textDecoration: 'underline',\n    },\n  },\n  rules: [\n    // Rule to insert a paragraph block if the document is empty.\n    {\n      match: node => node.kind === 'document',\n      validate: document => (document.nodes.size ? null : true),\n      normalize: (transform, document) => {\n        const block = Block.create(defaultBlock);\n        transform.insertNodeByKey(document.key, 0, block);\n      },\n    },\n    // Rule to insert a paragraph below a void node (the image) if that node is\n    // the last one in the document.\n    {\n      match: node => node.kind === 'document',\n      validate: (document) => {\n        const lastNode = document.nodes.last();\n        return lastNode && lastNode.isVoid ? true : null;\n      },\n      normalize: (transform, document) => {\n        const block = Block.create(defaultBlock);\n        transform.insertNodeByKey(document.key, document.nodes.size, block);\n      },\n    },\n  ],\n};\n\nclass CampaignEditor extends React.Component {\n  // Sets up state and props and binds this to the class methods.\n  constructor(props) {\n    super(props);\n\n    let initialState;\n    if (props.content.length > 0) {\n      initialState = { nodes: props.content };\n    } else {\n      initialState = {\n        nodes: [\n          {\n            kind: 'block',\n            type: 'paragraph',\n            nodes: [\n              {\n                kind: 'text',\n                text: 'We recommend that you follow the following format for you campaign. This is where you would write your initial introduction for your campaign. This will also serve as the description on the search and browse pages. If you don\\'t put the paragraph here the next paragraph will be your description.',\n              },\n            ],\n          },\n          {\n            kind: 'block',\n            type: 'header',\n            nodes: [\n              {\n                kind: 'text',\n                text: 'Main Image',\n              },\n            ],\n          },\n          {\n            kind: 'block',\n            type: 'image',\n            isVoid: true,\n            data: {\n              alt: 'Senior veteran at a march.',\n              imageType: 'main',\n              src: '/assets/img/veteran.jpg',\n            },\n          },\n          {\n            kind: 'block',\n            type: 'paragraph',\n            nodes: [\n              {\n                kind: 'text',\n                text: 'You should delete the image above and replace it with your own. This will serve as the image in the campaign list. If you don\\'t put one here we will use the first main image you insert.',\n              },\n            ],\n          },\n          {\n            kind: 'block',\n            type: 'header',\n            nodes: [\n              {\n                kind: 'text',\n                text: 'You Can Use Headers to Organize Your Content',\n              },\n            ],\n          },\n          {\n            kind: 'block',\n            type: 'image',\n            isVoid: true,\n            data: {\n              alt: 'A flag on a home.',\n              imageType: 'left',\n              src: '/assets/img/flag-home.jpg',\n            },\n          },\n          {\n            kind: 'block',\n            type: 'paragraph',\n            nodes: [\n              {\n                kind: 'text',\n                text: 'Images can be inserted so that they flow with your content. These can be on the left or right side.',\n              },\n            ],\n          },\n          {\n            kind: 'block',\n            type: 'paragraph',\n            nodes: [\n              {\n                kind: 'text',\n                text: 'You can also use ',\n              },\n              {\n                kind: 'inline',\n                text: 'links',\n                type: 'link',\n                data: { url: 'https://www.designbright.org' },\n                nodes: [\n                  {\n                    kind: 'text',\n                    text: 'links',\n                  },\n                ],\n              },\n              {\n                kind: 'text',\n                text: ' in your text to provide a connection to your non-profit\\'s information.',\n              },\n            ],\n          },\n        ],\n      };\n    }\n\n    this.state = {\n      editorState: Raw.deserialize(initialState, { terse: true }),\n      showCreateLink: false,\n      newUrl: 'http://',\n      newUrlText: '',\n      showAddImage: false,\n      newSrc: '',\n      newAlt: '',\n      newImageType: 'main',\n      heldEditorState: {},\n    };\n\n    this.onChangeEditor = this.onChangeEditor.bind(this);\n    this.onAddImage = this.onAddImage.bind(this);\n    this.onCreateImage = this.onCreateImage.bind(this);\n    this.cancelCreateImage = this.cancelCreateImage.bind(this);\n    this.onChangeFormat = this.onChangeFormat.bind(this);\n    this.onNewLink = this.onNewLink.bind(this);\n    this.isBlock = this.isBlock.bind(this);\n    this.isLink = this.isLink.bind(this);\n    this.onCreateLink = this.onCreateLink.bind(this);\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.cancelCreateLink = this.cancelCreateLink.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.onClickInline = this.onClickInline.bind(this);\n    this.onClickList = this.onClickList.bind(this);\n  }\n\n  componentDidMount() {\n    this.onChangeEditor(this.state.editorState, true);\n  }\n\n  onChangeEditor(editorState, campaignSaved) {\n    this.setState(\n      { editorState },\n      this.props.onChangeEditorData(Raw.serialize(editorState), campaignSaved),\n    );\n  }\n\n  onChangeInput(e) {\n    const { target } = e;\n    const value = () => {\n      if (target.type === 'checkbox') {\n        return target.checked;\n      } else if (target.type === 'file') {\n        return target.files[0];\n      }\n      return target.value;\n    };\n\n    const { name } = target;\n\n    this.setState({ [name]: value() });\n  }\n\n  onAddImage(e) {\n    e.preventDefault();\n    // const src = window.prompt('Enter the URL of the image:');\n    // const alt = window.prompt('Please enter a description:');\n    // const imageType = window.prompt('Please enter the image type:');\n\n    const { editorState } = this.state;\n\n    this.cancelCreateLink();\n    this.setState({\n      heldEditorState: editorState,\n      showAddImage: true,\n    });\n  }\n\n  onCreateImage(e) {\n    e.preventDefault();\n\n    this.setState({ heldState: this.state.editorState });\n\n    const formData = new FormData();\n    formData.append('file', this.state.newSrc);\n    formData.append('campaignId', this.props.campaignInfo.campaignId);\n    formData.append('campaignName', this.props.campaignInfo.name);\n    formData.append('nonprofitId', this.props.nonprofitInfo.nonprofitId);\n    formData.append('imageType', this.state.newImageType);\n    formData.append('imageAlt', this.state.newAlt);\n\n    axios.post(\n      `https://${window.location.hostname}:3000/api/campaigns/upload/photo/${this.props.campaignInfo.campaignId}`,\n      formData,\n      {\n        headers:\n        { 'Content-Type': 'multipart/form-data' },\n      },\n    )\n      .then(({ data }) => {\n        const newImage = data.data;\n        const { newAlt, newImageType, heldState } = this.state;\n        this.insertImage(newImage.secure_url, newAlt, newImageType, heldState);\n      })\n      .catch(error => console.log(error));\n  }\n\n  cancelCreateImage(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    return this.setState({\n      heldEditorState: {},\n      showAddImage: false,\n      newSrc: '',\n      newAlt: '',\n      newImageType: 'main',\n    });\n  }\n\n  insertImage(src, alt, imageType, heldState) {\n    const transform = heldState.transform();\n\n    const newEditorState = transform\n      .insertBlock({\n        type: 'image',\n        isVoid: true,\n        data: {\n          src,\n          alt,\n          imageType,\n        },\n      })\n      .apply();\n\n    this.setState(\n      {\n        heldEditorState: {},\n        showAddImage: false,\n        newSrc: '',\n        newAlt: '',\n        newImageType: 'main',\n      },\n      this.onChangeEditor(newEditorState),\n    );\n  }\n\n  onChangeFormat(e) {\n    const type = e.target.value;\n    const { editorState } = this.state;\n    const transform = editorState.transform();\n\n    if (this.state.editorState.focusBlock.type !== 'image') {\n      const isBlock = this.isBlock(type);\n      transform.setBlock(isBlock ? 'paragraph' : type);\n      const newEditorState = transform.apply();\n      this.onChangeEditor(newEditorState);\n    }\n  }\n\n  isBlock(type) {\n    const { editorState } = this.state;\n    let nodeType;\n    const test = editorState.blocks.some((node) => {\n      if (node.type === 'image') {\n        nodeType = node.type;\n      }\n      return node.type === type;\n    });\n    if (nodeType) {\n      return nodeType;\n    }\n    return test;\n  }\n\n  isLink() {\n    const { editorState } = this.state;\n    return editorState.inlines.some(inline => inline.type === 'link');\n  }\n\n  onNewLink(e) {\n    e.preventDefault();\n    const { editorState } = this.state;\n    const isLink = this.isLink();\n    let newEditorState = editorState;\n\n    this.cancelCreateImage();\n\n    if (this.state.showCreateLink) {\n      return this.cancelCreateLink(e);\n    }\n\n    if (isLink) {\n      newEditorState = editorState\n        .transform()\n        .unwrapInline('link')\n        .apply();\n\n      return this.onChangeEditor(newEditorState);\n    }\n    return this.setState(\n      {\n        heldEditorState: newEditorState,\n        showCreateLink: true,\n      },\n      this.onChangeEditor(newEditorState),\n    );\n  }\n\n  onCreateLink(e) {\n    e.preventDefault();\n    const editorState = this.state.heldEditorState;\n\n    let newEditorState;\n    if (editorState.isExpanded) {\n      const url = this.state.newUrl;\n\n      newEditorState = editorState\n        .transform()\n        .wrapInline({\n          type: 'link',\n          data: { url },\n        })\n        .collapseToEnd()\n        .apply();\n    } else {\n      const url = this.state.newUrl;\n      const text = this.state.newUrlText;\n\n      newEditorState = editorState\n        .transform()\n        .insertText(text)\n        .extend(0 - text.length)\n        .wrapInline({\n          type: 'link',\n          data: { url },\n        })\n        .collapseToEnd()\n        .apply();\n    }\n\n    this.setState(\n      {\n        showCreateLink: false,\n        newUrl: 'http://',\n        newUrlText: '',\n        heldEditorState: {},\n      },\n      this.onChangeEditor(newEditorState),\n    );\n  }\n\n  cancelCreateLink(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    return this.setState({\n      heldEditorState: {},\n      showCreateLink: false,\n      newUrl: 'http://',\n      newUrlText: '',\n    });\n  }\n\n  onClickInline(e, type) {\n    e.preventDefault();\n    const { editorState } = this.state;\n\n    const transform = editorState.transform();\n    const isHeader = editorState.blocks.some(block => block.type === 'header');\n    editorState.marks.forEach(\n      mark => (mark.type !== type ? transform.removeMark(mark) : null),\n      this,\n    );\n\n    if (!isHeader) {\n      transform.toggleMark(type);\n    }\n    const newEditorState = transform.apply();\n    return this.onChangeEditor(newEditorState);\n  }\n\n  onClickList(e, type) {\n    e.preventDefault();\n    const { editorState } = this.state;\n    let newEditorState = editorState;\n\n\n    // Handle the extra wrapping required for list buttons.\n    const isList = this.isBlock('listItem');\n    const isType = editorState.blocks.some(block =>\n      !!newEditorState.document.getClosest(block.key, parent => parent.type === type));\n\n    if (isList && isType) {\n      newEditorState = newEditorState.transform()\n        .setBlock(defaultBlock)\n        .unwrapBlock('bulletedList')\n        .unwrapBlock('numberedList');\n    } else if (isList) {\n      newEditorState = newEditorState.transform()\n        .unwrapBlock(type === 'bulletedList' ? 'numberedList' : 'bulletedList')\n        .wrapBlock(type);\n    } else {\n      newEditorState = newEditorState.transform()\n        .setBlock('listItem')\n        .wrapBlock(type);\n    }\n\n    newEditorState = newEditorState.apply();\n    this.onChangeEditor(newEditorState);\n  }\n\n  render() {\n    return (\n      <div id=\"campaignEditor\">\n        <Toolbar\n          onClickInline={this.onClickInline}\n          onClickList={this.onClickList}\n          onAddImage={this.onAddImage}\n          onNewLink={this.onNewLink}\n          onChangeFormat={this.onChangeFormat}\n          selectValue={this.state.editorState.focusBlock}\n          inlineType={this.state.editorState.focusInline} />\n        {this.state.showCreateLink\n          ? <CreateLink\n            editorState={this.state.heldEditorState}\n            onCreateLink={this.onCreateLink}\n            cancelCreateLink={this.cancelCreateLink}\n            newUrl={this.state.newUrl}\n            newUrlText={this.state.newUrlText}\n            onChange={this.onChangeInput}\n            validate={url => isUrl(url)} />\n          : null}\n        {this.state.showAddImage\n          ? <CreateImage\n            editorState={this.state.heldEditorState}\n            onCreateImage={this.onCreateImage}\n            cancelCreateImage={this.cancelCreateImage}\n            onChange={this.onChangeInput}\n            newSrc={this.state.newSrc}\n            newAlt={this.state.newAlt}\n            newImageType={this.state.newImageType}\n            validate={src => isImage(src)} />\n          : null}\n        <div className=\"grey-line\"></div>\n        <div className=\"editor\">\n          <Editor\n            schema={schema}\n            state={this.state.editorState}\n            onChange={this.onChangeEditor} />\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default CampaignEditor;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/editCampaign/components/editor/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setKeyGenerator = exports.resetKeyGenerator = exports.Value = exports.Text = exports.Stack = exports.Schema = exports.Range = exports.Operations = exports.Operation = exports.Node = exports.Mark = exports.Leaf = exports.Inline = exports.History = exports.Document = exports.Data = exports.Character = exports.Changes = exports.Block = undefined;\n\nvar _block = require('./models/block');\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _changes = require('./changes');\n\nvar _changes2 = _interopRequireDefault(_changes);\n\nvar _character = require('./models/character');\n\nvar _character2 = _interopRequireDefault(_character);\n\nvar _data = require('./models/data');\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _document = require('./models/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _history = require('./models/history');\n\nvar _history2 = _interopRequireDefault(_history);\n\nvar _inline = require('./models/inline');\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _leaf = require('./models/leaf');\n\nvar _leaf2 = _interopRequireDefault(_leaf);\n\nvar _mark = require('./models/mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _node = require('./models/node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _operation = require('./models/operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _operations = require('./operations');\n\nvar _operations2 = _interopRequireDefault(_operations);\n\nvar _range = require('./models/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _schema = require('./models/schema');\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nvar _stack = require('./models/stack');\n\nvar _stack2 = _interopRequireDefault(_stack);\n\nvar _text = require('./models/text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _value = require('./models/value');\n\nvar _value2 = _interopRequireDefault(_value);\n\nvar _generateKey = require('./utils/generate-key');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.Block = _block2.default;\nexports.Changes = _changes2.default;\nexports.Character = _character2.default;\nexports.Data = _data2.default;\nexports.Document = _document2.default;\nexports.History = _history2.default;\nexports.Inline = _inline2.default;\nexports.Leaf = _leaf2.default;\nexports.Mark = _mark2.default;\nexports.Node = _node2.default;\nexports.Operation = _operation2.default;\nexports.Operations = _operations2.default;\nexports.Range = _range2.default;\nexports.Schema = _schema2.default;\nexports.Stack = _stack2.default;\nexports.Text = _text2.default;\nexports.Value = _value2.default;\nexports.resetKeyGenerator = _generateKey.resetKeyGenerator;\nexports.setKeyGenerator = _generateKey.setKeyGenerator;\nexports.default = {\n  Block: _block2.default,\n  Changes: _changes2.default,\n  Character: _character2.default,\n  Data: _data2.default,\n  Document: _document2.default,\n  History: _history2.default,\n  Inline: _inline2.default,\n  Leaf: _leaf2.default,\n  Mark: _mark2.default,\n  Node: _node2.default,\n  Operation: _operation2.default,\n  Operations: _operations2.default,\n  Range: _range2.default,\n  Schema: _schema2.default,\n  Stack: _stack2.default,\n  Text: _text2.default,\n  Value: _value2.default,\n  resetKeyGenerator: _generateKey.resetKeyGenerator,\n  setKeyGenerator: _generateKey.setKeyGenerator\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/index.js\n// module id = 400\n// module chunks = 0","'use strict';\n\nvar GROUP_LEFT_TO_RIGHT,\n    GROUP_RIGHT_TO_LEFT,\n    EXPRESSION_LEFT_TO_RIGHT,\n    EXPRESSION_RIGHT_TO_LEFT;\n\n/*\n * Character ranges of left-to-right characters.\n */\n\nGROUP_LEFT_TO_RIGHT = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n    '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n    '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF';\n\n/*\n * Character ranges of right-to-left characters.\n */\n\nGROUP_RIGHT_TO_LEFT = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\n\n/*\n * Expression to match a left-to-right string.\n *\n * Matches the start of a string, followed by zero or\n * more non-right-to-left characters, followed by a\n * left-to-right character.\n */\n\nEXPRESSION_LEFT_TO_RIGHT = new RegExp(\n    '^[^' + GROUP_RIGHT_TO_LEFT + ']*[' + GROUP_LEFT_TO_RIGHT + ']'\n);\n\n/*\n * Expression to match a right-to-left string.\n *\n * Matches the start of a string, followed by zero or\n * more non-left-to-right characters, followed by a\n * right-to-left character.\n */\n\nEXPRESSION_RIGHT_TO_LEFT = new RegExp(\n    '^[^' + GROUP_LEFT_TO_RIGHT + ']*[' + GROUP_RIGHT_TO_LEFT + ']'\n);\n\n/**\n * Detect the direction of text.\n *\n * @param {string} value - value to stringify and check.\n * @return {string} - One of `\"rtl\"`, `\"ltr\"`, or\n *   `\"neutral\"`.\n */\nfunction direction(value) {\n    value = value.toString();\n\n    if (EXPRESSION_RIGHT_TO_LEFT.test(value)) {\n        return 'rtl';\n    }\n\n    if (EXPRESSION_LEFT_TO_RIGHT.test(value)) {\n        return 'ltr';\n    }\n\n    return 'neutral';\n}\n\n/*\n * Expose `direction`.\n */\n\nmodule.exports = direction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/direction/index.js\n// module id = 401\n// module chunks = 0","var global$1 = typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {}\n\n// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global$1.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global$1.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}\nfunction umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global$1.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar process = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\n/* eslint-disable no-console */\n\n/**\n * Is in development?\n *\n * @type {Boolean}\n */\n\nvar IS_DEV = typeof process !== 'undefined' && process.env && \"development\" !== 'production';\n\n/**\n * Has console?\n *\n * @type {Boolean}\n */\n\nvar HAS_CONSOLE = typeof console != 'undefined' && typeof console.log == 'function' && typeof console.warn == 'function' && typeof console.error == 'function';\n\n/**\n * Log a `message` at `level`.\n *\n * @param {String} level\n * @param {String} message\n * @param {Any} ...args\n */\n\nfunction log(level, message) {\n  if (!IS_DEV) {\n    return;\n  }\n\n  if (HAS_CONSOLE) {\n    var _console;\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    (_console = console)[level].apply(_console, [message].concat(args));\n  }\n}\n\n/**\n * Log an error `message`.\n *\n * @param {String} message\n * @param {Any} ...args\n */\n\nfunction error(message) {\n  if (HAS_CONSOLE) {\n    var _console2;\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    (_console2 = console).error.apply(_console2, [message].concat(args));\n  }\n}\n\n/**\n * Log a warning `message` in development only.\n *\n * @param {String} message\n * @param {Any} ...args\n */\n\nfunction warn(message) {\n  for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  log.apply(undefined, ['warn', 'Warning: ' + message].concat(args));\n}\n\n/**\n * Log a deprecation warning `message`, with helpful `version` number in\n * development only.\n *\n * @param {String} version\n * @param {String} message\n * @param {Any} ...args\n */\n\nfunction deprecate(version$$1, message) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n    args[_key4 - 2] = arguments[_key4];\n  }\n\n  log.apply(undefined, ['warn', 'Deprecation (' + version$$1 + '): ' + message].concat(args));\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nvar index = {\n  deprecate: deprecate,\n  error: error,\n  warn: warn\n};\n\nexport default index;\n//# sourceMappingURL=slate-dev-logger.es.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate-dev-logger/lib/slate-dev-logger.es.js\n// module id = 402\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Check if an `index` of a `text` node is in a `range`.\n *\n * @param {Number} index\n * @param {Text} text\n * @param {Range} range\n * @return {Boolean}\n */\n\nfunction isIndexInRange(index, text, range) {\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n\n\n  if (text.key == startKey && text.key == endKey) {\n    return startOffset <= index && index < endOffset;\n  } else if (text.key == startKey) {\n    return startOffset <= index;\n  } else if (text.key == endKey) {\n    return index < endOffset;\n  } else {\n    return true;\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexports.default = isIndexInRange;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/utils/is-index-in-range.js\n// module id = 403\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _block = require('../models/block');\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _inline = require('../models/inline');\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _mark = require('../models/mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Mix in the changes that pass through to their at-range equivalents because\n * they don't have any effect on the selection.\n */\n\nvar PROXY_TRANSFORMS = ['deleteBackward', 'deleteCharBackward', 'deleteLineBackward', 'deleteWordBackward', 'deleteForward', 'deleteCharForward', 'deleteWordForward', 'deleteLineForward', 'setBlock', 'setInline', 'splitInline', 'unwrapBlock', 'unwrapInline', 'wrapBlock', 'wrapInline'];\n\nPROXY_TRANSFORMS.forEach(function (method) {\n  Changes[method] = function (change) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var value = change.value;\n    var selection = value.selection;\n\n    var methodAtRange = method + 'AtRange';\n    change[methodAtRange].apply(change, [selection].concat(args));\n  };\n});\n\n/**\n * Add a `mark` to the characters in the current selection.\n *\n * @param {Change} change\n * @param {Mark} mark\n */\n\nChanges.addMark = function (change, mark) {\n  mark = _mark2.default.create(mark);\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n\n  if (selection.isExpanded) {\n    change.addMarkAtRange(selection, mark);\n  } else if (selection.marks) {\n    var marks = selection.marks.add(mark);\n    var sel = selection.set('marks', marks);\n    change.select(sel);\n  } else {\n    var _marks = document.getActiveMarksAtRange(selection).add(mark);\n    var _sel = selection.set('marks', _marks);\n    change.select(_sel);\n  }\n};\n\n/**\n * Add a list of `marks` to the characters in the current selection.\n *\n * @param {Change} change\n * @param {Mark} mark\n */\n\nChanges.addMarks = function (change, marks) {\n  marks.forEach(function (mark) {\n    return change.addMark(mark);\n  });\n};\n\n/**\n * Delete at the current selection.\n *\n * @param {Change} change\n */\n\nChanges.delete = function (change) {\n  var value = change.value;\n  var selection = value.selection;\n\n  change.deleteAtRange(selection);\n\n  // Ensure that the selection is collapsed to the start, because in certain\n  // cases when deleting across inline nodes, when splitting the inline node the\n  // end point of the selection will end up after the split point.\n  change.collapseToStart();\n};\n\n/**\n * Insert a `block` at the current selection.\n *\n * @param {Change} change\n * @param {String|Object|Block} block\n */\n\nChanges.insertBlock = function (change, block) {\n  block = _block2.default.create(block);\n  var value = change.value;\n  var selection = value.selection;\n\n  change.insertBlockAtRange(selection, block);\n\n  // If the node was successfully inserted, update the selection.\n  var node = change.value.document.getNode(block.key);\n  if (node) change.collapseToEndOf(node);\n};\n\n/**\n * Insert a `fragment` at the current selection.\n *\n * @param {Change} change\n * @param {Document} fragment\n */\n\nChanges.insertFragment = function (change, fragment) {\n  if (!fragment.nodes.size) return;\n\n  var value = change.value;\n  var _value = value,\n      document = _value.document,\n      selection = _value.selection;\n  var _value2 = value,\n      startText = _value2.startText,\n      endText = _value2.endText,\n      startInline = _value2.startInline;\n\n  var lastText = fragment.getLastText();\n  var lastInline = fragment.getClosestInline(lastText.key);\n  var keys = document.getTexts().map(function (text) {\n    return text.key;\n  });\n  var isAppending = !startInline || selection.hasEdgeAtStartOf(startText) || selection.hasEdgeAtEndOf(endText);\n\n  change.insertFragmentAtRange(selection, fragment);\n  value = change.value;\n  document = value.document;\n\n  var newTexts = document.getTexts().filter(function (n) {\n    return !keys.includes(n.key);\n  });\n  var newText = isAppending ? newTexts.last() : newTexts.takeLast(2).first();\n\n  if (newText && lastInline) {\n    change.select(selection.collapseToEndOf(newText));\n  } else if (newText) {\n    change.select(selection.collapseToStartOf(newText).move(lastText.text.length));\n  } else {\n    change.select(selection.collapseToStart().move(lastText.text.length));\n  }\n};\n\n/**\n * Insert an `inline` at the current selection.\n *\n * @param {Change} change\n * @param {String|Object|Inline} inline\n */\n\nChanges.insertInline = function (change, inline) {\n  inline = _inline2.default.create(inline);\n  var value = change.value;\n  var selection = value.selection;\n\n  change.insertInlineAtRange(selection, inline);\n\n  // If the node was successfully inserted, update the selection.\n  var node = change.value.document.getNode(inline.key);\n  if (node) change.collapseToEndOf(node);\n};\n\n/**\n * Insert a string of `text` with optional `marks` at the current selection.\n *\n * @param {Change} change\n * @param {String} text\n * @param {Set<Mark>} marks (optional)\n */\n\nChanges.insertText = function (change, text, marks) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  marks = marks || value.marks;\n  change.insertTextAtRange(selection, text, marks);\n\n  // If the text was successfully inserted, and the selection had marks on it,\n  // unset the selection's marks.\n  if (selection.marks && document != change.value.document) {\n    change.select({ marks: null });\n  }\n};\n\n/**\n * Split the block node at the current selection, to optional `depth`.\n *\n * @param {Change} change\n * @param {Number} depth (optional)\n */\n\nChanges.splitBlock = function (change) {\n  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var value = change.value;\n  var selection = value.selection;\n\n  change.splitBlockAtRange(selection, depth).collapseToEnd();\n};\n\n/**\n * Remove a `mark` from the characters in the current selection.\n *\n * @param {Change} change\n * @param {Mark} mark\n */\n\nChanges.removeMark = function (change, mark) {\n  mark = _mark2.default.create(mark);\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n\n  if (selection.isExpanded) {\n    change.removeMarkAtRange(selection, mark);\n  } else if (selection.marks) {\n    var marks = selection.marks.remove(mark);\n    var sel = selection.set('marks', marks);\n    change.select(sel);\n  } else {\n    var _marks2 = document.getActiveMarksAtRange(selection).remove(mark);\n    var _sel2 = selection.set('marks', _marks2);\n    change.select(_sel2);\n  }\n};\n\n/**\n * Add or remove a `mark` from the characters in the current selection,\n * depending on whether it's already there.\n *\n * @param {Change} change\n * @param {Mark} mark\n */\n\nChanges.toggleMark = function (change, mark) {\n  mark = _mark2.default.create(mark);\n  var value = change.value;\n\n  var exists = value.activeMarks.has(mark);\n\n  if (exists) {\n    change.removeMark(mark);\n  } else {\n    change.addMark(mark);\n  }\n};\n\n/**\n * Wrap the current selection with prefix/suffix.\n *\n * @param {Change} change\n * @param {String} prefix\n * @param {String} suffix\n */\n\nChanges.wrapText = function (change, prefix) {\n  var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : prefix;\n  var value = change.value;\n  var selection = value.selection;\n\n  change.wrapTextAtRange(selection, prefix, suffix);\n\n  // If the selection was collapsed, it will have moved the start offset too.\n  if (selection.isCollapsed) {\n    change.moveStart(0 - prefix.length);\n  }\n\n  // Adding the suffix will have pushed the end of the selection further on, so\n  // we need to move it back to account for this.\n  change.moveEnd(0 - suffix.length);\n\n  // There's a chance that the selection points moved \"through\" each other,\n  // resulting in a now-incorrect selection direction.\n  if (selection.isForward != change.value.selection.isForward) {\n    change.flip();\n  }\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/changes/at-current-range.js\n// module id = 404\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _immutable = require('immutable');\n\nvar _block = require('../models/block');\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _inline = require('../models/inline');\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _mark = require('../models/mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _node = require('../models/node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _string = require('../utils/string');\n\nvar _string2 = _interopRequireDefault(_string);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Add a new `mark` to the characters at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Mixed} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.addMarkAtRange = function (change, range, mark) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (range.isCollapsed) return;\n\n  var _options$normalize = options.normalize,\n      normalize = _options$normalize === undefined ? true : _options$normalize;\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n\n  var texts = document.getTextsAtRange(range);\n\n  texts.forEach(function (node) {\n    var key = node.key;\n\n    var index = 0;\n    var length = node.text.length;\n\n    if (key == startKey) index = startOffset;\n    if (key == endKey) length = endOffset;\n    if (key == startKey && key == endKey) length = endOffset - startOffset;\n\n    change.addMarkByKey(key, index, length, mark, { normalize: normalize });\n  });\n};\n\n/**\n * Add a list of `marks` to the characters at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Array<Mixed>} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.addMarksAtRange = function (change, range, marks) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  marks.forEach(function (mark) {\n    return change.addMarkAtRange(range, mark, options);\n  });\n};\n\n/**\n * Delete everything in a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteAtRange = function (change, range) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (range.isCollapsed) return;\n\n  // Snapshot the selection, which creates an extra undo save point, so that\n  // when you undo a delete, the expanded selection will be retained.\n  change.snapshotSelection();\n\n  var _options$normalize2 = options.normalize,\n      normalize = _options$normalize2 === undefined ? true : _options$normalize2;\n  var value = change.value;\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n  var document = value.document;\n\n  var isStartVoid = document.hasVoidParent(startKey);\n  var isEndVoid = document.hasVoidParent(endKey);\n  var startBlock = document.getClosestBlock(startKey);\n  var endBlock = document.getClosestBlock(endKey);\n\n  // Check if we have a \"hanging\" selection case where the even though the\n  // selection extends into the start of the end node, we actually want to\n  // ignore that for UX reasons.\n  var isHanging = startOffset == 0 && endOffset == 0 && isStartVoid == false && startKey == startBlock.getFirstText().key && endKey == endBlock.getFirstText().key;\n\n  // If it's a hanging selection, nudge it back to end in the previous text.\n  if (isHanging && isEndVoid) {\n    var prevText = document.getPreviousText(endKey);\n    endKey = prevText.key;\n    endOffset = prevText.text.length;\n    isEndVoid = document.hasVoidParent(endKey);\n  }\n\n  // If the start node is inside a void node, remove the void node and update\n  // the starting point to be right after it, continuously until the start point\n  // is not a void, or until the entire range is handled.\n  while (isStartVoid) {\n    var startVoid = document.getClosestVoid(startKey);\n    var nextText = document.getNextText(startKey);\n    change.removeNodeByKey(startVoid.key, { normalize: false });\n\n    // If the start and end keys are the same, we're done.\n    if (startKey == endKey) return;\n\n    // If there is no next text node, we're done.\n    if (!nextText) return;\n\n    // Continue...\n    document = change.value.document;\n    startKey = nextText.key;\n    startOffset = 0;\n    isStartVoid = document.hasVoidParent(startKey);\n  }\n\n  // If the end node is inside a void node, do the same thing but backwards. But\n  // we don't need any aborting checks because if we've gotten this far there\n  // must be a non-void node that will exit the loop.\n  while (isEndVoid) {\n    var endVoid = document.getClosestVoid(endKey);\n    var _prevText = document.getPreviousText(endKey);\n    change.removeNodeByKey(endVoid.key, { normalize: false });\n\n    // Continue...\n    document = change.value.document;\n    endKey = _prevText.key;\n    endOffset = _prevText.text.length;\n    isEndVoid = document.hasVoidParent(endKey);\n  }\n\n  // If the start and end key are the same, and it was a hanging selection, we\n  // can just remove the entire block.\n  if (startKey == endKey && isHanging) {\n    change.removeNodeByKey(startBlock.key, { normalize: normalize });\n    return;\n  }\n\n  // Otherwise, if it wasn't hanging, we're inside a single text node, so we can\n  // simply remove the text in the range.\n  else if (startKey == endKey) {\n      var index = startOffset;\n      var length = endOffset - startOffset;\n      change.removeTextByKey(startKey, index, length, { normalize: normalize });\n      return;\n    }\n\n    // Otherwise, we need to recursively remove text and nodes inside the start\n    // block after the start offset and inside the end block before the end\n    // offset. Then remove any blocks that are in between the start and end\n    // blocks. Then finally merge the start and end nodes.\n    else {\n        startBlock = document.getClosestBlock(startKey);\n        endBlock = document.getClosestBlock(endKey);\n        var startText = document.getNode(startKey);\n        var endText = document.getNode(endKey);\n        var startLength = startText.text.length - startOffset;\n        var endLength = endOffset;\n\n        var ancestor = document.getCommonAncestor(startKey, endKey);\n        var startChild = ancestor.getFurthestAncestor(startKey);\n        var endChild = ancestor.getFurthestAncestor(endKey);\n\n        var startParent = document.getParent(startBlock.key);\n        var startParentIndex = startParent.nodes.indexOf(startBlock);\n        var endParentIndex = startParent.nodes.indexOf(endBlock);\n\n        var child = void 0;\n\n        // Iterate through all of the nodes in the tree after the start text node\n        // but inside the end child, and remove them.\n        child = startText;\n\n        while (child.key != startChild.key) {\n          var parent = document.getParent(child.key);\n          var _index = parent.nodes.indexOf(child);\n          var afters = parent.nodes.slice(_index + 1);\n\n          afters.reverse().forEach(function (node) {\n            change.removeNodeByKey(node.key, { normalize: false });\n          });\n\n          child = parent;\n        }\n\n        // Remove all of the middle children.\n        var startChildIndex = ancestor.nodes.indexOf(startChild);\n        var endChildIndex = ancestor.nodes.indexOf(endChild);\n        var middles = ancestor.nodes.slice(startChildIndex + 1, endChildIndex);\n\n        middles.reverse().forEach(function (node) {\n          change.removeNodeByKey(node.key, { normalize: false });\n        });\n\n        // Remove the nodes before the end text node in the tree.\n        child = endText;\n\n        while (child.key != endChild.key) {\n          var _parent = document.getParent(child.key);\n          var _index2 = _parent.nodes.indexOf(child);\n          var befores = _parent.nodes.slice(0, _index2);\n\n          befores.reverse().forEach(function (node) {\n            change.removeNodeByKey(node.key, { normalize: false });\n          });\n\n          child = _parent;\n        }\n\n        // Remove any overlapping text content from the leaf text nodes.\n        if (startLength != 0) {\n          change.removeTextByKey(startKey, startOffset, startLength, { normalize: false });\n        }\n\n        if (endLength != 0) {\n          change.removeTextByKey(endKey, 0, endOffset, { normalize: false });\n        }\n\n        // If the start and end blocks aren't the same, move and merge the end block\n        // into the start block.\n        if (startBlock.key != endBlock.key) {\n          document = change.value.document;\n          var lonely = document.getFurthestOnlyChildAncestor(endBlock.key);\n\n          // Move the end block to be right after the start block.\n          if (endParentIndex != startParentIndex + 1) {\n            change.moveNodeByKey(endBlock.key, startParent.key, startParentIndex + 1);\n          }\n\n          // If the selection is hanging, just remove the start block, otherwise\n          // merge the end block into it.\n          if (isHanging) {\n            change.removeNodeByKey(startBlock.key, { normalize: false });\n          } else {\n            change.mergeNodeByKey(endBlock.key, { normalize: false });\n          }\n\n          // If nested empty blocks are left over above the end block, remove them.\n          if (lonely) {\n            change.removeNodeByKey(lonely.key, { normalize: false });\n          }\n        }\n\n        // If we should normalize, do it now after everything.\n        if (normalize) {\n          change.normalizeNodeByKey(ancestor.key);\n        }\n      }\n};\n\n/**\n * Delete backward until the character boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteCharBackwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  var text = startBlock.text;\n\n  var n = _string2.default.getCharOffsetBackward(text, o);\n  change.deleteBackwardAtRange(range, n, options);\n};\n\n/**\n * Delete backward until the line boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteLineBackwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var startWithVoidInline = startBlock.nodes.size > 1 && startBlock.nodes.get(0).text == '' && startBlock.nodes.get(1).kind == 'inline';\n\n  var o = offset + startOffset;\n\n  // If line starts with an void inline node, the text node inside this inline\n  // node disturbs the offset. Ignore this inline node and delete it afterwards.\n  if (startWithVoidInline) {\n    o -= 1;\n  }\n\n  change.deleteBackwardAtRange(range, o, options);\n\n  // Delete the remaining first inline node if needed.\n  if (startWithVoidInline) {\n    change.deleteBackward();\n  }\n};\n\n/**\n * Delete backward until the word boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteWordBackwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  var text = startBlock.text;\n\n  var n = _string2.default.getWordOffsetBackward(text, o);\n  change.deleteBackwardAtRange(range, n, options);\n};\n\n/**\n * Delete backward `n` characters at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Number} n (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteBackwardAtRange = function (change, range) {\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize3 = options.normalize,\n      normalize = _options$normalize3 === undefined ? true : _options$normalize3;\n  var value = change.value;\n  var document = value.document;\n  var _range = range,\n      startKey = _range.startKey,\n      focusOffset = _range.focusOffset;\n\n  // If the range is expanded, perform a regular delete instead.\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: normalize });\n    return;\n  }\n\n  var block = document.getClosestBlock(startKey);\n\n  // If the closest block is void, delete it.\n  if (block && block.isVoid) {\n    change.removeNodeByKey(block.key, { normalize: normalize });\n    return;\n  }\n\n  // If the closest is not void, but empty, remove it\n  if (block && !block.isVoid && block.isEmpty && document.nodes.size !== 1) {\n    change.removeNodeByKey(block.key, { normalize: normalize });\n    return;\n  }\n\n  // If the closest inline is void, delete it.\n  var inline = document.getClosestInline(startKey);\n  if (inline && inline.isVoid) {\n    change.removeNodeByKey(inline.key, { normalize: normalize });\n    return;\n  }\n\n  // If the range is at the start of the document, abort.\n  if (range.isAtStartOf(document)) {\n    return;\n  }\n\n  // If the range is at the start of the text node, we need to figure out what\n  // is behind it to know how to delete...\n  var text = document.getDescendant(startKey);\n  if (range.isAtStartOf(text)) {\n    var prev = document.getPreviousText(text.key);\n    var prevBlock = document.getClosestBlock(prev.key);\n    var prevInline = document.getClosestInline(prev.key);\n\n    // If the previous block is void, remove it.\n    if (prevBlock && prevBlock.isVoid) {\n      change.removeNodeByKey(prevBlock.key, { normalize: normalize });\n      return;\n    }\n\n    // If the previous inline is void, remove it.\n    if (prevInline && prevInline.isVoid) {\n      change.removeNodeByKey(prevInline.key, { normalize: normalize });\n      return;\n    }\n\n    // If we're deleting by one character and the previous text node is not\n    // inside the current block, we need to merge the two blocks together.\n    if (n == 1 && prevBlock != block) {\n      range = range.merge({\n        anchorKey: prev.key,\n        anchorOffset: prev.text.length\n      });\n\n      change.deleteAtRange(range, { normalize: normalize });\n      return;\n    }\n  }\n\n  // If the focus offset is farther than the number of characters to delete,\n  // just remove the characters backwards inside the current node.\n  if (n < focusOffset) {\n    range = range.merge({\n      focusOffset: focusOffset - n,\n      isBackward: true\n    });\n\n    change.deleteAtRange(range, { normalize: normalize });\n    return;\n  }\n\n  // Otherwise, we need to see how many nodes backwards to go.\n  var node = text;\n  var offset = 0;\n  var traversed = focusOffset;\n\n  while (n > traversed) {\n    node = document.getPreviousText(node.key);\n    var next = traversed + node.text.length;\n    if (n <= next) {\n      offset = next - n;\n      break;\n    } else {\n      traversed = next;\n    }\n  }\n\n  // If the focus node is inside a void, go up until right after it.\n  if (document.hasVoidParent(node.key)) {\n    var parent = document.getClosestVoid(node.key);\n    node = document.getNextText(parent.key);\n    offset = 0;\n  }\n\n  range = range.merge({\n    focusKey: node.key,\n    focusOffset: offset,\n    isBackward: true\n  });\n\n  change.deleteAtRange(range, { normalize: normalize });\n};\n\n/**\n * Delete forward until the character boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteCharForwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  var text = startBlock.text;\n\n  var n = _string2.default.getCharOffsetForward(text, o);\n  change.deleteForwardAtRange(range, n, options);\n};\n\n/**\n * Delete forward until the line boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteLineForwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  change.deleteForwardAtRange(range, o, options);\n};\n\n/**\n * Delete forward until the word boundary at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteWordForwardAtRange = function (change, range, options) {\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var offset = startBlock.getOffset(startKey);\n  var o = offset + startOffset;\n  var text = startBlock.text;\n\n  var n = _string2.default.getWordOffsetForward(text, o);\n  change.deleteForwardAtRange(range, n, options);\n};\n\n/**\n * Delete forward `n` characters at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Number} n (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.deleteForwardAtRange = function (change, range) {\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize4 = options.normalize,\n      normalize = _options$normalize4 === undefined ? true : _options$normalize4;\n  var value = change.value;\n  var document = value.document;\n  var _range2 = range,\n      startKey = _range2.startKey,\n      focusOffset = _range2.focusOffset;\n\n  // If the range is expanded, perform a regular delete instead.\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: normalize });\n    return;\n  }\n\n  var block = document.getClosestBlock(startKey);\n\n  // If the closest block is void, delete it.\n  if (block && block.isVoid) {\n    change.removeNodeByKey(block.key, { normalize: normalize });\n    return;\n  }\n\n  // If the closest is not void, but empty, remove it\n  if (block && !block.isVoid && block.isEmpty && document.nodes.size !== 1) {\n    var nextBlock = document.getNextBlock(block.key);\n    change.removeNodeByKey(block.key, { normalize: normalize });\n    if (nextBlock && nextBlock.key) {\n      change.moveToStartOf(nextBlock);\n    }\n    return;\n  }\n\n  // If the closest inline is void, delete it.\n  var inline = document.getClosestInline(startKey);\n  if (inline && inline.isVoid) {\n    change.removeNodeByKey(inline.key, { normalize: normalize });\n    return;\n  }\n\n  // If the range is at the start of the document, abort.\n  if (range.isAtEndOf(document)) {\n    return;\n  }\n\n  // If the range is at the start of the text node, we need to figure out what\n  // is behind it to know how to delete...\n  var text = document.getDescendant(startKey);\n  if (range.isAtEndOf(text)) {\n    var next = document.getNextText(text.key);\n    var _nextBlock = document.getClosestBlock(next.key);\n    var nextInline = document.getClosestInline(next.key);\n\n    // If the previous block is void, remove it.\n    if (_nextBlock && _nextBlock.isVoid) {\n      change.removeNodeByKey(_nextBlock.key, { normalize: normalize });\n      return;\n    }\n\n    // If the previous inline is void, remove it.\n    if (nextInline && nextInline.isVoid) {\n      change.removeNodeByKey(nextInline.key, { normalize: normalize });\n      return;\n    }\n\n    // If we're deleting by one character and the previous text node is not\n    // inside the current block, we need to merge the two blocks together.\n    if (n == 1 && _nextBlock != block) {\n      range = range.merge({\n        focusKey: next.key,\n        focusOffset: 0\n      });\n\n      change.deleteAtRange(range, { normalize: normalize });\n      return;\n    }\n  }\n\n  // If the remaining characters to the end of the node is greater than or equal\n  // to the number of characters to delete, just remove the characters forwards\n  // inside the current node.\n  if (n <= text.text.length - focusOffset) {\n    range = range.merge({\n      focusOffset: focusOffset + n\n    });\n\n    change.deleteAtRange(range, { normalize: normalize });\n    return;\n  }\n\n  // Otherwise, we need to see how many nodes forwards to go.\n  var node = text;\n  var offset = focusOffset;\n  var traversed = text.text.length - focusOffset;\n\n  while (n > traversed) {\n    node = document.getNextText(node.key);\n    var _next = traversed + node.text.length;\n    if (n <= _next) {\n      offset = n - traversed;\n      break;\n    } else {\n      traversed = _next;\n    }\n  }\n\n  // If the focus node is inside a void, go up until right before it.\n  if (document.hasVoidParent(node.key)) {\n    var parent = document.getClosestVoid(node.key);\n    node = document.getPreviousText(parent.key);\n    offset = node.text.length;\n  }\n\n  range = range.merge({\n    focusKey: node.key,\n    focusOffset: offset\n  });\n\n  change.deleteAtRange(range, { normalize: normalize });\n};\n\n/**\n * Insert a `block` node at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Block|String|Object} block\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertBlockAtRange = function (change, range, block) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  block = _block2.default.create(block);\n  var _options$normalize5 = options.normalize,\n      normalize = _options$normalize5 === undefined ? true : _options$normalize5;\n\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range);\n    range = range.collapseToStart();\n  }\n\n  var value = change.value;\n  var document = value.document;\n  var _range3 = range,\n      startKey = _range3.startKey,\n      startOffset = _range3.startOffset;\n\n  var startBlock = document.getClosestBlock(startKey);\n  var parent = document.getParent(startBlock.key);\n  var index = parent.nodes.indexOf(startBlock);\n\n  if (startBlock.isVoid) {\n    var extra = range.isAtEndOf(startBlock) ? 1 : 0;\n    change.insertNodeByKey(parent.key, index + extra, block, { normalize: normalize });\n  } else if (startBlock.isEmpty) {\n    change.insertNodeByKey(parent.key, index + 1, block, { normalize: normalize });\n  } else if (range.isAtStartOf(startBlock)) {\n    change.insertNodeByKey(parent.key, index, block, { normalize: normalize });\n  } else if (range.isAtEndOf(startBlock)) {\n    change.insertNodeByKey(parent.key, index + 1, block, { normalize: normalize });\n  } else {\n    change.splitDescendantsByKey(startBlock.key, startKey, startOffset, { normalize: false });\n    change.insertNodeByKey(parent.key, index + 1, block, { normalize: normalize });\n  }\n\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Insert a `fragment` at a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Document} fragment\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertFragmentAtRange = function (change, range, fragment) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize6 = options.normalize,\n      normalize = _options$normalize6 === undefined ? true : _options$normalize6;\n\n  // If the range is expanded, delete it first.\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: false });\n    range = range.collapseToStart();\n  }\n\n  // If the fragment is empty, there's nothing to do after deleting.\n  if (!fragment.nodes.size) return;\n\n  // Regenerate the keys for all of the fragments nodes, so that they're\n  // guaranteed not to collide with the existing keys in the document. Otherwise\n  // they will be rengerated automatically and we won't have an easy way to\n  // reference them.\n  fragment = fragment.mapDescendants(function (child) {\n    return child.regenerateKey();\n  });\n\n  // Calculate a few things...\n  var _range4 = range,\n      startKey = _range4.startKey,\n      startOffset = _range4.startOffset;\n  var value = change.value;\n  var document = value.document;\n\n  var startText = document.getDescendant(startKey);\n  var startBlock = document.getClosestBlock(startText.key);\n  var startChild = startBlock.getFurthestAncestor(startText.key);\n  var isAtStart = range.isAtStartOf(startBlock);\n  var parent = document.getParent(startBlock.key);\n  var index = parent.nodes.indexOf(startBlock);\n  var blocks = fragment.getBlocks();\n  var firstBlock = blocks.first();\n  var lastBlock = blocks.last();\n\n  // If the fragment only contains a void block, use `insertBlock` instead.\n  if (firstBlock == lastBlock && firstBlock.isVoid) {\n    change.insertBlockAtRange(range, firstBlock, options);\n    return;\n  }\n\n  // If the first and last block aren't the same, we need to insert all of the\n  // nodes after the fragment's first block at the index.\n  if (firstBlock != lastBlock) {\n    var lonelyParent = fragment.getFurthest(firstBlock.key, function (p) {\n      return p.nodes.size == 1;\n    });\n    var lonelyChild = lonelyParent || firstBlock;\n    var startIndex = parent.nodes.indexOf(startBlock);\n    fragment = fragment.removeDescendant(lonelyChild.key);\n\n    fragment.nodes.forEach(function (node, i) {\n      var newIndex = startIndex + i + 1;\n      change.insertNodeByKey(parent.key, newIndex, node, { normalize: false });\n    });\n  }\n\n  // Check if we need to split the node.\n  if (startOffset != 0) {\n    change.splitDescendantsByKey(startChild.key, startKey, startOffset, { normalize: false });\n  }\n\n  // Update our variables with the new value.\n  document = change.value.document;\n  startText = document.getDescendant(startKey);\n  startBlock = document.getClosestBlock(startKey);\n  startChild = startBlock.getFurthestAncestor(startText.key);\n\n  // If the first and last block aren't the same, we need to move any of the\n  // starting block's children after the split into the last block of the\n  // fragment, which has already been inserted.\n  if (firstBlock != lastBlock) {\n    var nextChild = isAtStart ? startChild : startBlock.getNextSibling(startChild.key);\n    var nextNodes = nextChild ? startBlock.nodes.skipUntil(function (n) {\n      return n.key == nextChild.key;\n    }) : (0, _immutable.List)();\n    var lastIndex = lastBlock.nodes.size;\n\n    nextNodes.forEach(function (node, i) {\n      var newIndex = lastIndex + i;\n      change.moveNodeByKey(node.key, lastBlock.key, newIndex, { normalize: false });\n    });\n  }\n\n  // If the starting block is empty, we replace it entirely with the first block\n  // of the fragment, since this leads to a more expected behavior for the user.\n  if (startBlock.isEmpty) {\n    change.removeNodeByKey(startBlock.key, { normalize: false });\n    change.insertNodeByKey(parent.key, index, firstBlock, { normalize: false });\n  }\n\n  // Otherwise, we maintain the starting block, and insert all of the first\n  // block's inline nodes into it at the split point.\n  else {\n      var inlineChild = startBlock.getFurthestAncestor(startText.key);\n      var inlineIndex = startBlock.nodes.indexOf(inlineChild);\n\n      firstBlock.nodes.forEach(function (inline, i) {\n        var o = startOffset == 0 ? 0 : 1;\n        var newIndex = inlineIndex + i + o;\n        change.insertNodeByKey(startBlock.key, newIndex, inline, { normalize: false });\n      });\n    }\n\n  // Normalize if requested.\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Insert an `inline` node at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Inline|String|Object} inline\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertInlineAtRange = function (change, range, inline) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize7 = options.normalize,\n      normalize = _options$normalize7 === undefined ? true : _options$normalize7;\n\n  inline = _inline2.default.create(inline);\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: false });\n    range = range.collapseToStart();\n  }\n\n  var value = change.value;\n  var document = value.document;\n  var _range5 = range,\n      startKey = _range5.startKey,\n      startOffset = _range5.startOffset;\n\n  var parent = document.getParent(startKey);\n  var startText = document.assertDescendant(startKey);\n  var index = parent.nodes.indexOf(startText);\n\n  if (parent.isVoid) return;\n\n  change.splitNodeByKey(startKey, startOffset, { normalize: false });\n  change.insertNodeByKey(parent.key, index + 1, inline, { normalize: false });\n\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Insert `text` at a `range`, with optional `marks`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {String} text\n * @param {Set<Mark>} marks (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertTextAtRange = function (change, range, text, marks) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var normalize = options.normalize;\n  var value = change.value;\n  var document = value.document;\n  var startKey = range.startKey,\n      startOffset = range.startOffset;\n\n  var key = startKey;\n  var offset = startOffset;\n  var parent = document.getParent(startKey);\n\n  if (parent.isVoid) return;\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: false });\n\n    // Update range start after delete\n    key = change.value.startKey;\n    offset = change.value.startOffset;\n  }\n\n  // PERF: Unless specified, don't normalize if only inserting text.\n  if (normalize !== undefined) {\n    normalize = range.isExpanded;\n  }\n\n  change.insertTextByKey(key, offset, text, marks, { normalize: normalize });\n};\n\n/**\n * Remove an existing `mark` to the characters at `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Mark|String} mark (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeMarkAtRange = function (change, range, mark) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (range.isCollapsed) return;\n\n  var _options$normalize8 = options.normalize,\n      normalize = _options$normalize8 === undefined ? true : _options$normalize8;\n  var value = change.value;\n  var document = value.document;\n\n  var texts = document.getTextsAtRange(range);\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n\n\n  texts.forEach(function (node) {\n    var key = node.key;\n\n    var index = 0;\n    var length = node.text.length;\n\n    if (key == startKey) index = startOffset;\n    if (key == endKey) length = endOffset;\n    if (key == startKey && key == endKey) length = endOffset - startOffset;\n\n    change.removeMarkByKey(key, index, length, mark, { normalize: normalize });\n  });\n};\n\n/**\n * Set the `properties` of block nodes in a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.setBlockAtRange = function (change, range, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize9 = options.normalize,\n      normalize = _options$normalize9 === undefined ? true : _options$normalize9;\n  var value = change.value;\n  var document = value.document;\n\n  var blocks = document.getBlocksAtRange(range);\n\n  blocks.forEach(function (block) {\n    change.setNodeByKey(block.key, properties, { normalize: normalize });\n  });\n};\n\n/**\n * Set the `properties` of inline nodes in a `range`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.setInlineAtRange = function (change, range, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize10 = options.normalize,\n      normalize = _options$normalize10 === undefined ? true : _options$normalize10;\n  var value = change.value;\n  var document = value.document;\n\n  var inlines = document.getInlinesAtRange(range);\n\n  inlines.forEach(function (inline) {\n    change.setNodeByKey(inline.key, properties, { normalize: normalize });\n  });\n};\n\n/**\n * Split the block nodes at a `range`, to optional `height`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Number} height (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.splitBlockAtRange = function (change, range) {\n  var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize11 = options.normalize,\n      normalize = _options$normalize11 === undefined ? true : _options$normalize11;\n\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: normalize });\n    range = range.collapseToStart();\n  }\n\n  var _range6 = range,\n      startKey = _range6.startKey,\n      startOffset = _range6.startOffset;\n  var value = change.value;\n  var document = value.document;\n\n  var node = document.assertDescendant(startKey);\n  var parent = document.getClosestBlock(node.key);\n  var h = 0;\n\n  while (parent && parent.kind == 'block' && h < height) {\n    node = parent;\n    parent = document.getClosestBlock(parent.key);\n    h++;\n  }\n\n  change.splitDescendantsByKey(node.key, startKey, startOffset, { normalize: normalize });\n};\n\n/**\n * Split the inline nodes at a `range`, to optional `height`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Number} height (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.splitInlineAtRange = function (change, range) {\n  var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize12 = options.normalize,\n      normalize = _options$normalize12 === undefined ? true : _options$normalize12;\n\n\n  if (range.isExpanded) {\n    change.deleteAtRange(range, { normalize: normalize });\n    range = range.collapseToStart();\n  }\n\n  var _range7 = range,\n      startKey = _range7.startKey,\n      startOffset = _range7.startOffset;\n  var value = change.value;\n  var document = value.document;\n\n  var node = document.assertDescendant(startKey);\n  var parent = document.getClosestInline(node.key);\n  var h = 0;\n\n  while (parent && parent.kind == 'inline' && h < height) {\n    node = parent;\n    parent = document.getClosestInline(parent.key);\n    h++;\n  }\n\n  change.splitDescendantsByKey(node.key, startKey, startOffset, { normalize: normalize });\n};\n\n/**\n * Add or remove a `mark` from the characters at `range`, depending on whether\n * it's already there.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Mixed} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.toggleMarkAtRange = function (change, range, mark) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (range.isCollapsed) return;\n\n  mark = _mark2.default.create(mark);\n\n  var _options$normalize13 = options.normalize,\n      normalize = _options$normalize13 === undefined ? true : _options$normalize13;\n  var value = change.value;\n  var document = value.document;\n\n  var marks = document.getActiveMarksAtRange(range);\n  var exists = marks.some(function (m) {\n    return m.equals(mark);\n  });\n\n  if (exists) {\n    change.removeMarkAtRange(range, mark, { normalize: normalize });\n  } else {\n    change.addMarkAtRange(range, mark, { normalize: normalize });\n  }\n};\n\n/**\n * Unwrap all of the block nodes in a `range` from a block with `properties`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {String|Object} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapBlockAtRange = function (change, range, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  properties = _node2.default.createProperties(properties);\n\n  var _options$normalize14 = options.normalize,\n      normalize = _options$normalize14 === undefined ? true : _options$normalize14;\n  var value = change.value;\n  var document = value.document;\n\n  var blocks = document.getBlocksAtRange(range);\n  var wrappers = blocks.map(function (block) {\n    return document.getClosest(block.key, function (parent) {\n      if (parent.kind != 'block') return false;\n      if (properties.type != null && parent.type != properties.type) return false;\n      if (properties.isVoid != null && parent.isVoid != properties.isVoid) return false;\n      if (properties.data != null && !parent.data.isSuperset(properties.data)) return false;\n      return true;\n    });\n  }).filter(function (exists) {\n    return exists;\n  }).toOrderedSet().toList();\n\n  wrappers.forEach(function (block) {\n    var first = block.nodes.first();\n    var last = block.nodes.last();\n    var parent = document.getParent(block.key);\n    var index = parent.nodes.indexOf(block);\n\n    var children = block.nodes.filter(function (child) {\n      return blocks.some(function (b) {\n        return child == b || child.hasDescendant(b.key);\n      });\n    });\n\n    var firstMatch = children.first();\n    var lastMatch = children.last();\n\n    if (first == firstMatch && last == lastMatch) {\n      block.nodes.forEach(function (child, i) {\n        change.moveNodeByKey(child.key, parent.key, index + i, { normalize: false });\n      });\n\n      change.removeNodeByKey(block.key, { normalize: false });\n    } else if (last == lastMatch) {\n      block.nodes.skipUntil(function (n) {\n        return n == firstMatch;\n      }).forEach(function (child, i) {\n        change.moveNodeByKey(child.key, parent.key, index + 1 + i, { normalize: false });\n      });\n    } else if (first == firstMatch) {\n      block.nodes.takeUntil(function (n) {\n        return n == lastMatch;\n      }).push(lastMatch).forEach(function (child, i) {\n        change.moveNodeByKey(child.key, parent.key, index + i, { normalize: false });\n      });\n    } else {\n      var firstText = firstMatch.getFirstText();\n      change.splitDescendantsByKey(block.key, firstText.key, 0, { normalize: false });\n      document = change.value.document;\n\n      children.forEach(function (child, i) {\n        if (i == 0) {\n          var extra = child;\n          child = document.getNextBlock(child.key);\n          change.removeNodeByKey(extra.key, { normalize: false });\n        }\n\n        change.moveNodeByKey(child.key, parent.key, index + 1 + i, { normalize: false });\n      });\n    }\n  });\n\n  // TODO: optmize to only normalize the right block\n  if (normalize) {\n    change.normalizeDocument();\n  }\n};\n\n/**\n * Unwrap the inline nodes in a `range` from an inline with `properties`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {String|Object} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapInlineAtRange = function (change, range, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  properties = _node2.default.createProperties(properties);\n\n  var _options$normalize15 = options.normalize,\n      normalize = _options$normalize15 === undefined ? true : _options$normalize15;\n  var value = change.value;\n  var document = value.document;\n\n  var texts = document.getTextsAtRange(range);\n  var inlines = texts.map(function (text) {\n    return document.getClosest(text.key, function (parent) {\n      if (parent.kind != 'inline') return false;\n      if (properties.type != null && parent.type != properties.type) return false;\n      if (properties.isVoid != null && parent.isVoid != properties.isVoid) return false;\n      if (properties.data != null && !parent.data.isSuperset(properties.data)) return false;\n      return true;\n    });\n  }).filter(function (exists) {\n    return exists;\n  }).toOrderedSet().toList();\n\n  inlines.forEach(function (inline) {\n    var parent = change.value.document.getParent(inline.key);\n    var index = parent.nodes.indexOf(inline);\n\n    inline.nodes.forEach(function (child, i) {\n      change.moveNodeByKey(child.key, parent.key, index + i, { normalize: false });\n    });\n  });\n\n  // TODO: optmize to only normalize the right block\n  if (normalize) {\n    change.normalizeDocument();\n  }\n};\n\n/**\n * Wrap all of the blocks in a `range` in a new `block`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Block|Object|String} block\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapBlockAtRange = function (change, range, block) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  block = _block2.default.create(block);\n  block = block.set('nodes', block.nodes.clear());\n\n  var _options$normalize16 = options.normalize,\n      normalize = _options$normalize16 === undefined ? true : _options$normalize16;\n  var value = change.value;\n  var document = value.document;\n\n\n  var blocks = document.getBlocksAtRange(range);\n  var firstblock = blocks.first();\n  var lastblock = blocks.last();\n  var parent = void 0,\n      siblings = void 0,\n      index = void 0;\n\n  // If there is only one block in the selection then we know the parent and\n  // siblings.\n  if (blocks.length === 1) {\n    parent = document.getParent(firstblock.key);\n    siblings = blocks;\n  }\n\n  // Determine closest shared parent to all blocks in selection.\n  else {\n      parent = document.getClosest(firstblock.key, function (p1) {\n        return !!document.getClosest(lastblock.key, function (p2) {\n          return p1 == p2;\n        });\n      });\n    }\n\n  // If no shared parent could be found then the parent is the document.\n  if (parent == null) parent = document;\n\n  // Create a list of direct children siblings of parent that fall in the\n  // selection.\n  if (siblings == null) {\n    var indexes = parent.nodes.reduce(function (ind, node, i) {\n      if (node == firstblock || node.hasDescendant(firstblock.key)) ind[0] = i;\n      if (node == lastblock || node.hasDescendant(lastblock.key)) ind[1] = i;\n      return ind;\n    }, []);\n\n    index = indexes[0];\n    siblings = parent.nodes.slice(indexes[0], indexes[1] + 1);\n  }\n\n  // Get the index to place the new wrapped node at.\n  if (index == null) {\n    index = parent.nodes.indexOf(siblings.first());\n  }\n\n  // Inject the new block node into the parent.\n  change.insertNodeByKey(parent.key, index, block, { normalize: false });\n\n  // Move the sibling nodes into the new block node.\n  siblings.forEach(function (node, i) {\n    change.moveNodeByKey(node.key, block.key, i, { normalize: false });\n  });\n\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Wrap the text and inlines in a `range` in a new `inline`.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {Inline|Object|String} inline\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapInlineAtRange = function (change, range, inline) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var value = change.value;\n  var document = value.document;\n  var _options$normalize17 = options.normalize,\n      normalize = _options$normalize17 === undefined ? true : _options$normalize17;\n  var startKey = range.startKey,\n      startOffset = range.startOffset,\n      endKey = range.endKey,\n      endOffset = range.endOffset;\n\n\n  if (range.isCollapsed) {\n    // Wrapping an inline void\n    var inlineParent = document.getClosestInline(startKey);\n    if (!inlineParent.isVoid) {\n      return;\n    }\n\n    return change.wrapInlineByKey(inlineParent.key, inline, options);\n  }\n\n  inline = _inline2.default.create(inline);\n  inline = inline.set('nodes', inline.nodes.clear());\n\n  var blocks = document.getBlocksAtRange(range);\n  var startBlock = document.getClosestBlock(startKey);\n  var endBlock = document.getClosestBlock(endKey);\n  var startChild = startBlock.getFurthestAncestor(startKey);\n  var endChild = endBlock.getFurthestAncestor(endKey);\n\n  change.splitDescendantsByKey(endChild.key, endKey, endOffset, { normalize: false });\n  change.splitDescendantsByKey(startChild.key, startKey, startOffset, { normalize: false });\n\n  document = change.value.document;\n  startBlock = document.getDescendant(startBlock.key);\n  endBlock = document.getDescendant(endBlock.key);\n  startChild = startBlock.getFurthestAncestor(startKey);\n  endChild = endBlock.getFurthestAncestor(endKey);\n  var startIndex = startBlock.nodes.indexOf(startChild);\n  var endIndex = endBlock.nodes.indexOf(endChild);\n\n  if (startBlock == endBlock) {\n    document = change.value.document;\n    startBlock = document.getClosestBlock(startKey);\n    startChild = startBlock.getFurthestAncestor(startKey);\n\n    var startInner = document.getNextSibling(startChild.key);\n    var startInnerIndex = startBlock.nodes.indexOf(startInner);\n    var endInner = startKey == endKey ? startInner : startBlock.getFurthestAncestor(endKey);\n    var inlines = startBlock.nodes.skipUntil(function (n) {\n      return n == startInner;\n    }).takeUntil(function (n) {\n      return n == endInner;\n    }).push(endInner);\n\n    var node = inline.regenerateKey();\n\n    change.insertNodeByKey(startBlock.key, startInnerIndex, node, { normalize: false });\n\n    inlines.forEach(function (child, i) {\n      change.moveNodeByKey(child.key, node.key, i, { normalize: false });\n    });\n\n    if (normalize) {\n      change.normalizeNodeByKey(startBlock.key);\n    }\n  } else {\n    var startInlines = startBlock.nodes.slice(startIndex + 1);\n    var endInlines = endBlock.nodes.slice(0, endIndex + 1);\n    var startNode = inline.regenerateKey();\n    var endNode = inline.regenerateKey();\n\n    change.insertNodeByKey(startBlock.key, startIndex + 1, startNode, { normalize: false });\n    change.insertNodeByKey(endBlock.key, endIndex, endNode, { normalize: false });\n\n    startInlines.forEach(function (child, i) {\n      change.moveNodeByKey(child.key, startNode.key, i, { normalize: false });\n    });\n\n    endInlines.forEach(function (child, i) {\n      change.moveNodeByKey(child.key, endNode.key, i, { normalize: false });\n    });\n\n    if (normalize) {\n      change.normalizeNodeByKey(startBlock.key).normalizeNodeByKey(endBlock.key);\n    }\n\n    blocks.slice(1, -1).forEach(function (block) {\n      var node = inline.regenerateKey();\n      change.insertNodeByKey(block.key, 0, node, { normalize: false });\n\n      block.nodes.forEach(function (child, i) {\n        change.moveNodeByKey(child.key, node.key, i, { normalize: false });\n      });\n\n      if (normalize) {\n        change.normalizeNodeByKey(block.key);\n      }\n    });\n  }\n};\n\n/**\n * Wrap the text in a `range` in a prefix/suffix.\n *\n * @param {Change} change\n * @param {Range} range\n * @param {String} prefix\n * @param {String} suffix (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapTextAtRange = function (change, range, prefix) {\n  var suffix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : prefix;\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize18 = options.normalize,\n      normalize = _options$normalize18 === undefined ? true : _options$normalize18;\n  var startKey = range.startKey,\n      endKey = range.endKey;\n\n  var start = range.collapseToStart();\n  var end = range.collapseToEnd();\n\n  if (startKey == endKey) {\n    end = end.move(prefix.length);\n  }\n\n  change.insertTextAtRange(start, prefix, [], { normalize: normalize });\n  change.insertTextAtRange(end, suffix, [], { normalize: normalize });\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/changes/at-range.js\n// module id = 405\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _esrever = require('esrever');\n\n/**\n * Surrogate pair start and end points.\n *\n * @type {Number}\n */\n\nvar SURROGATE_START = 0xD800;\nvar SURROGATE_END = 0xDFFF;\n\n/**\n * A regex to match space characters.\n *\n * @type {RegExp}\n */\n\nvar SPACE = /\\s/;\n\n/**\n * A regex to match chameleon characters, that count as word characters as long\n * as they are inside of a word.\n *\n * @type {RegExp}\n */\n\nvar CHAMELEON = /['\\u2018\\u2019]/;\n\n/**\n * A regex that matches punctuation.\n *\n * @type {RegExp}\n */\n\nvar PUNCTUATION = /[\\u0021-\\u0023\\u0025-\\u002A\\u002C-\\u002F\\u003A\\u003B\\u003F\\u0040\\u005B-\\u005D\\u005F\\u007B\\u007D\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E3B\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/;\n\n/**\n * Is a character `code` in a surrogate character.\n *\n * @param {Number} code\n * @return {Boolean}\n */\n\nfunction isSurrogate(code) {\n  return SURROGATE_START <= code && code <= SURROGATE_END;\n}\n\n/**\n * Is a character a word character? Needs the `remaining` characters too.\n *\n * @param {String} char\n * @param {String|Void} remaining\n * @return {Boolean}\n */\n\nfunction isWord(char, remaining) {\n  if (SPACE.test(char)) return false;\n\n  // If it's a chameleon character, recurse to see if the next one is or not.\n  if (CHAMELEON.test(char)) {\n    var next = remaining.charAt(0);\n    var length = getCharLength(next);\n    next = remaining.slice(0, length);\n    var rest = remaining.slice(length);\n    if (isWord(next, rest)) return true;\n  }\n\n  if (PUNCTUATION.test(char)) return false;\n  return true;\n}\n\n/**\n * Get the length of a `character`.\n *\n * @param {String} char\n * @return {Number}\n */\n\nfunction getCharLength(char) {\n  return isSurrogate(char.charCodeAt(0)) ? 2 : 1;\n}\n\n/**\n * Get the offset to the end of the first character in `text`.\n *\n * @param {String} text\n * @return {Number}\n */\n\nfunction getCharOffset(text) {\n  var char = text.charAt(0);\n  return getCharLength(char);\n}\n\n/**\n * Get the offset to the end of the character before an `offset` in `text`.\n *\n * @param {String} text\n * @param {Number} offset\n * @return {Number}\n */\n\nfunction getCharOffsetBackward(text, offset) {\n  text = text.slice(0, offset);\n  text = (0, _esrever.reverse)(text);\n  return getCharOffset(text);\n}\n\n/**\n * Get the offset to the end of the character after an `offset` in `text`.\n *\n * @param {String} text\n * @param {Number} offset\n * @return {Number}\n */\n\nfunction getCharOffsetForward(text, offset) {\n  text = text.slice(offset);\n  return getCharOffset(text);\n}\n\n/**\n * Get the offset to the end of the first word in `text`.\n *\n * @param {String} text\n * @return {Number}\n */\n\nfunction getWordOffset(text) {\n  var length = 0;\n  var i = 0;\n  var started = false;\n  var char = void 0;\n\n  while (char = text.charAt(i)) {\n    var l = getCharLength(char);\n    char = text.slice(i, i + l);\n    var rest = text.slice(i + l);\n\n    if (isWord(char, rest)) {\n      started = true;\n      length += l;\n    } else if (!started) {\n      length += l;\n    } else {\n      break;\n    }\n\n    i += l;\n  }\n\n  return length;\n}\n\n/**\n * Get the offset to the end of the word before an `offset` in `text`.\n *\n * @param {String} text\n * @param {Number} offset\n * @return {Number}\n */\n\nfunction getWordOffsetBackward(text, offset) {\n  text = text.slice(0, offset);\n  text = (0, _esrever.reverse)(text);\n  var o = getWordOffset(text);\n  return o;\n}\n\n/**\n * Get the offset to the end of the word after an `offset` in `text`.\n *\n * @param {String} text\n * @param {Number} offset\n * @return {Number}\n */\n\nfunction getWordOffsetForward(text, offset) {\n  text = text.slice(offset);\n  var o = getWordOffset(text);\n  return o;\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = {\n  getCharOffsetForward: getCharOffsetForward,\n  getCharOffsetBackward: getCharOffsetBackward,\n  getWordOffsetBackward: getWordOffsetBackward,\n  getWordOffsetForward: getWordOffsetForward\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/utils/string.js\n// module id = 406\n// module chunks = 0","/*! https://mths.be/esrever v0.2.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar regexSymbolWithCombiningMarks = /([\\0-\\u02FF\\u0370-\\u1AAF\\u1B00-\\u1DBF\\u1E00-\\u20CF\\u2100-\\uD7FF\\uE000-\\uFE1F\\uFE30-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])([\\u0300-\\u036F\\u1AB0-\\u1AFF\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]+)/g;\n\tvar regexSurrogatePair = /([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])/g;\n\n\tvar reverse = function(string) {\n\t\t// Step 1: deal with combining marks and astral symbols (surrogate pairs)\n\t\tstring = string\n\t\t\t// Swap symbols with their combining marks so the combining marks go first\n\t\t\t.replace(regexSymbolWithCombiningMarks, function($0, $1, $2) {\n\t\t\t\t// Reverse the combining marks so they will end up in the same order\n\t\t\t\t// later on (after another round of reversing)\n\t\t\t\treturn reverse($2) + $1;\n\t\t\t})\n\t\t\t// Swap high and low surrogates so the low surrogates go first\n\t\t\t.replace(regexSurrogatePair, '$2$1');\n\t\t// Step 2: reverse the code units in the string\n\t\tvar result = '';\n\t\tvar index = string.length;\n\t\twhile (index--) {\n\t\t\tresult += string.charAt(index);\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar esrever = {\n\t\t'version': '0.2.0',\n\t\t'reverse': reverse\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn esrever;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = esrever;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in esrever) {\n\t\t\t\tesrever.hasOwnProperty(key) && (freeExports[key] = esrever[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.esrever = esrever;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/esrever/esrever.js\n// module id = 407\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _block = require('../models/block');\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _inline = require('../models/inline');\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _mark = require('../models/mark');\n\nvar _mark2 = _interopRequireDefault(_mark);\n\nvar _node = require('../models/node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Add mark to text at `offset` and `length` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {Number} length\n * @param {Mixed} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.addMarkByKey = function (change, key, offset, length, mark) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n  mark = _mark2.default.create(mark);\n  var _options$normalize = options.normalize,\n      normalize = _options$normalize === undefined ? true : _options$normalize;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n  var leaves = node.getLeaves();\n\n  var operations = [];\n  var bx = offset;\n  var by = offset + length;\n  var o = 0;\n\n  leaves.forEach(function (leaf) {\n    var ax = o;\n    var ay = ax + leaf.text.length;\n\n    o += leaf.text.length;\n\n    // If the leaf doesn't overlap with the operation, continue on.\n    if (ay < bx || by < ax) return;\n\n    // If the leaf already has the mark, continue on.\n    if (leaf.marks.has(mark)) return;\n\n    // Otherwise, determine which offset and characters overlap.\n    var start = Math.max(ax, bx);\n    var end = Math.min(ay, by);\n\n    operations.push({\n      type: 'add_mark',\n      value: value,\n      path: path,\n      offset: start,\n      length: end - start,\n      mark: mark\n    });\n  });\n\n  change.applyOperations(operations);\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Insert a `fragment` at `index` in a node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} index\n * @param {Fragment} fragment\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertFragmentByKey = function (change, key, index, fragment) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize2 = options.normalize,\n      normalize = _options$normalize2 === undefined ? true : _options$normalize2;\n\n\n  fragment.nodes.forEach(function (node, i) {\n    change.insertNodeByKey(key, index + i, node);\n  });\n\n  if (normalize) {\n    change.normalizeNodeByKey(key);\n  }\n};\n\n/**\n * Insert a `node` at `index` in a node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} index\n * @param {Node} node\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertNodeByKey = function (change, key, index, node) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize3 = options.normalize,\n      normalize = _options$normalize3 === undefined ? true : _options$normalize3;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n\n  change.applyOperation({\n    type: 'insert_node',\n    value: value,\n    path: [].concat(_toConsumableArray(path), [index]),\n    node: node\n  });\n\n  if (normalize) {\n    change.normalizeNodeByKey(key);\n  }\n};\n\n/**\n * Insert `text` at `offset` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {String} text\n * @param {Set<Mark>} marks (optional)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.insertTextByKey = function (change, key, offset, text, marks) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var _options$normalize4 = options.normalize,\n      normalize = _options$normalize4 === undefined ? true : _options$normalize4;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n  marks = marks || node.getMarksAtIndex(offset);\n\n  change.applyOperation({\n    type: 'insert_text',\n    value: value,\n    path: path,\n    offset: offset,\n    text: text,\n    marks: marks\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Merge a node by `key` with the previous node.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.mergeNodeByKey = function (change, key) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$normalize5 = options.normalize,\n      normalize = _options$normalize5 === undefined ? true : _options$normalize5;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var previous = document.getPreviousSibling(key);\n\n  if (!previous) {\n    throw new Error('Unable to merge node with key \"' + key + '\", no previous key.');\n  }\n\n  var position = previous.kind == 'text' ? previous.text.length : previous.nodes.size;\n\n  change.applyOperation({\n    type: 'merge_node',\n    value: value,\n    path: path,\n    position: position,\n    target: null\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Move a node by `key` to a new parent by `newKey` and `index`.\n * `newKey` is the key of the container (it can be the document itself)\n *\n * @param {Change} change\n * @param {String} key\n * @param {String} newKey\n * @param {Number} index\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.moveNodeByKey = function (change, key, newKey, newIndex) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize6 = options.normalize,\n      normalize = _options$normalize6 === undefined ? true : _options$normalize6;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var newPath = document.getPath(newKey);\n\n  change.applyOperation({\n    type: 'move_node',\n    value: value,\n    path: path,\n    newPath: [].concat(_toConsumableArray(newPath), [newIndex])\n  });\n\n  if (normalize) {\n    var parent = document.getCommonAncestor(key, newKey);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Remove mark from text at `offset` and `length` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {Number} length\n * @param {Mark} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeMarkByKey = function (change, key, offset, length, mark) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n  mark = _mark2.default.create(mark);\n  var _options$normalize7 = options.normalize,\n      normalize = _options$normalize7 === undefined ? true : _options$normalize7;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n  var leaves = node.getLeaves();\n\n  var operations = [];\n  var bx = offset;\n  var by = offset + length;\n  var o = 0;\n\n  leaves.forEach(function (leaf) {\n    var ax = o;\n    var ay = ax + leaf.text.length;\n\n    o += leaf.text.length;\n\n    // If the leaf doesn't overlap with the operation, continue on.\n    if (ay < bx || by < ax) return;\n\n    // If the leaf already has the mark, continue on.\n    if (!leaf.marks.has(mark)) return;\n\n    // Otherwise, determine which offset and characters overlap.\n    var start = Math.max(ax, bx);\n    var end = Math.min(ay, by);\n\n    operations.push({\n      type: 'remove_mark',\n      value: value,\n      path: path,\n      offset: start,\n      length: end - start,\n      mark: mark\n    });\n  });\n\n  change.applyOperations(operations);\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Remove all `marks` from node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeAllMarksByKey = function (change, key) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var state = change.state;\n  var document = state.document;\n\n  var node = document.getNode(key);\n  var texts = node.kind === 'text' ? [node] : node.getTextsAsArray();\n\n  texts.forEach(function (text) {\n    text.getMarksAsArray().forEach(function (mark) {\n      change.removeMarkByKey(text.key, 0, text.text.length, mark, options);\n    });\n  });\n};\n\n/**\n * Remove a node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeNodeByKey = function (change, key) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$normalize8 = options.normalize,\n      normalize = _options$normalize8 === undefined ? true : _options$normalize8;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n\n  change.applyOperation({\n    type: 'remove_node',\n    value: value,\n    path: path,\n    node: node\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Remove text at `offset` and `length` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {Number} length\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.removeTextByKey = function (change, key, offset, length) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var _options$normalize9 = options.normalize,\n      normalize = _options$normalize9 === undefined ? true : _options$normalize9;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n  var leaves = node.getLeaves();\n  var text = node.text;\n\n\n  var removals = [];\n  var bx = offset;\n  var by = offset + length;\n  var o = 0;\n\n  leaves.forEach(function (leaf) {\n    var ax = o;\n    var ay = ax + leaf.text.length;\n\n    o += leaf.text.length;\n\n    // If the leaf doesn't overlap with the removal, continue on.\n    if (ay < bx || by < ax) return;\n\n    // Otherwise, determine which offset and characters overlap.\n    var start = Math.max(ax, bx);\n    var end = Math.min(ay, by);\n    var string = text.slice(start, end);\n\n    removals.push({\n      type: 'remove_text',\n      value: value,\n      path: path,\n      offset: start,\n      text: string,\n      marks: leaf.marks\n    });\n  });\n\n  // Apply in reverse order, so subsequent removals don't impact previous ones.\n  change.applyOperations(removals.reverse());\n\n  if (normalize) {\n    var block = document.getClosestBlock(key);\n    change.normalizeNodeByKey(block.key);\n  }\n};\n\n/**\n`* Replace a `node` with another `node`\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object|Node} node\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.replaceNodeByKey = function (change, key, newNode) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  newNode = _node2.default.create(newNode);\n  var _options$normalize10 = options.normalize,\n      normalize = _options$normalize10 === undefined ? true : _options$normalize10;\n  var value = change.value;\n  var document = value.document;\n\n  var node = document.getNode(key);\n  var parent = document.getParent(key);\n  var index = parent.nodes.indexOf(node);\n  change.removeNodeByKey(key, { normalize: false });\n  change.insertNodeByKey(parent.key, index, newNode, options);\n  if (normalize) {\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Set `properties` on mark on text at `offset` and `length` in node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} offset\n * @param {Number} length\n * @param {Mark} mark\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.setMarkByKey = function (change, key, offset, length, mark, properties) {\n  var options = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n\n  mark = _mark2.default.create(mark);\n  properties = _mark2.default.createProperties(properties);\n  var _options$normalize11 = options.normalize,\n      normalize = _options$normalize11 === undefined ? true : _options$normalize11;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n\n  change.applyOperation({\n    type: 'set_mark',\n    value: value,\n    path: path,\n    offset: offset,\n    length: length,\n    mark: mark,\n    properties: properties\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Set `properties` on a node by `key`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.setNodeByKey = function (change, key, properties) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  properties = _node2.default.createProperties(properties);\n  var _options$normalize12 = options.normalize,\n      normalize = _options$normalize12 === undefined ? true : _options$normalize12;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n  var node = document.getNode(key);\n\n  change.applyOperation({\n    type: 'set_node',\n    value: value,\n    path: path,\n    node: node,\n    properties: properties\n  });\n\n  if (normalize) {\n    change.normalizeNodeByKey(node.key);\n  }\n};\n\n/**\n * Split a node by `key` at `position`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} position\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.splitNodeByKey = function (change, key, position) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _options$normalize13 = options.normalize,\n      normalize = _options$normalize13 === undefined ? true : _options$normalize13,\n      _options$target = options.target,\n      target = _options$target === undefined ? null : _options$target;\n  var value = change.value;\n  var document = value.document;\n\n  var path = document.getPath(key);\n\n  change.applyOperation({\n    type: 'split_node',\n    value: value,\n    path: path,\n    position: position,\n    target: target\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Split a node deeply down the tree by `key`, `textKey` and `textOffset`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Number} position\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.splitDescendantsByKey = function (change, key, textKey, textOffset) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  if (key == textKey) {\n    change.splitNodeByKey(textKey, textOffset, options);\n    return;\n  }\n\n  var _options$normalize14 = options.normalize,\n      normalize = _options$normalize14 === undefined ? true : _options$normalize14;\n  var value = change.value;\n  var document = value.document;\n\n\n  var text = document.getNode(textKey);\n  var ancestors = document.getAncestors(textKey);\n  var nodes = ancestors.skipUntil(function (a) {\n    return a.key == key;\n  }).reverse().unshift(text);\n  var previous = void 0;\n  var index = void 0;\n\n  nodes.forEach(function (node) {\n    var prevIndex = index == null ? null : index;\n    index = previous ? node.nodes.indexOf(previous) + 1 : textOffset;\n    previous = node;\n    change.splitNodeByKey(node.key, index, { normalize: false, target: prevIndex });\n  });\n\n  if (normalize) {\n    var parent = document.getParent(key);\n    change.normalizeNodeByKey(parent.key);\n  }\n};\n\n/**\n * Unwrap content from an inline parent with `properties`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapInlineByKey = function (change, key, properties, options) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  var node = document.assertDescendant(key);\n  var first = node.getFirstText();\n  var last = node.getLastText();\n  var range = selection.moveToRangeOf(first, last);\n  change.unwrapInlineAtRange(range, properties, options);\n};\n\n/**\n * Unwrap content from a block parent with `properties`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object|String} properties\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapBlockByKey = function (change, key, properties, options) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  var node = document.assertDescendant(key);\n  var first = node.getFirstText();\n  var last = node.getLastText();\n  var range = selection.moveToRangeOf(first, last);\n  change.unwrapBlockAtRange(range, properties, options);\n};\n\n/**\n * Unwrap a single node from its parent.\n *\n * If the node is surrounded with siblings, its parent will be\n * split. If the node is the only child, the parent is removed, and\n * simply replaced by the node itself.  Cannot unwrap a root node.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.unwrapNodeByKey = function (change, key) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$normalize15 = options.normalize,\n      normalize = _options$normalize15 === undefined ? true : _options$normalize15;\n  var value = change.value;\n  var document = value.document;\n\n  var parent = document.getParent(key);\n  var node = parent.getChild(key);\n\n  var index = parent.nodes.indexOf(node);\n  var isFirst = index === 0;\n  var isLast = index === parent.nodes.size - 1;\n\n  var parentParent = document.getParent(parent.key);\n  var parentIndex = parentParent.nodes.indexOf(parent);\n\n  if (parent.nodes.size === 1) {\n    change.moveNodeByKey(key, parentParent.key, parentIndex, { normalize: false });\n    change.removeNodeByKey(parent.key, options);\n  } else if (isFirst) {\n    // Just move the node before its parent.\n    change.moveNodeByKey(key, parentParent.key, parentIndex, options);\n  } else if (isLast) {\n    // Just move the node after its parent.\n    change.moveNodeByKey(key, parentParent.key, parentIndex + 1, options);\n  } else {\n    // Split the parent.\n    change.splitNodeByKey(parent.key, index, { normalize: false });\n\n    // Extract the node in between the splitted parent.\n    change.moveNodeByKey(key, parentParent.key, parentIndex + 1, { normalize: false });\n\n    if (normalize) {\n      change.normalizeNodeByKey(parentParent.key);\n    }\n  }\n};\n\n/**\n * Wrap a node in a block with `properties`.\n *\n * @param {Change} change\n * @param {String} key The node to wrap\n * @param {Block|Object|String} block The wrapping block (its children are discarded)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapBlockByKey = function (change, key, block, options) {\n  block = _block2.default.create(block);\n  block = block.set('nodes', block.nodes.clear());\n\n  var document = change.value.document;\n\n  var node = document.assertDescendant(key);\n  var parent = document.getParent(node.key);\n  var index = parent.nodes.indexOf(node);\n\n  change.insertNodeByKey(parent.key, index, block, { normalize: false });\n  change.moveNodeByKey(node.key, block.key, 0, options);\n};\n\n/**\n * Wrap a node in an inline with `properties`.\n *\n * @param {Change} change\n * @param {String} key The node to wrap\n * @param {Block|Object|String} inline The wrapping inline (its children are discarded)\n * @param {Object} options\n *   @property {Boolean} normalize\n */\n\nChanges.wrapInlineByKey = function (change, key, inline, options) {\n  inline = _inline2.default.create(inline);\n  inline = inline.set('nodes', inline.nodes.clear());\n\n  var document = change.value.document;\n\n  var node = document.assertDescendant(key);\n  var parent = document.getParent(node.key);\n  var index = parent.nodes.indexOf(node);\n\n  change.insertNodeByKey(parent.key, index, inline, { normalize: false });\n  change.moveNodeByKey(node.key, inline.key, 0, options);\n};\n\n/**\n * Wrap a node by `key` with `parent`.\n *\n * @param {Change} change\n * @param {String} key\n * @param {Node|Object} parent\n * @param {Object} options\n */\n\nChanges.wrapNodeByKey = function (change, key, parent) {\n  parent = _node2.default.create(parent);\n  parent = parent.set('nodes', parent.nodes.clear());\n\n  if (parent.kind == 'block') {\n    change.wrapBlockByKey(key, parent);\n    return;\n  }\n\n  if (parent.kind == 'inline') {\n    change.wrapInlineByKey(key, parent);\n    return;\n  }\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/changes/by-key.js\n// module id = 408\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _invert = require('../operations/invert');\n\nvar _invert2 = _interopRequireDefault(_invert);\n\nvar _omit = require('lodash/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Redo to the next value in the history.\n *\n * @param {Change} change\n */\n\nChanges.redo = function (change) {\n  var value = change.value;\n  var _value = value,\n      history = _value.history;\n\n  if (!history) return;\n\n  var _history = history,\n      undos = _history.undos,\n      redos = _history.redos;\n\n  var next = redos.peek();\n  if (!next) return;\n\n  // Shift the next value into the undo stack.\n  redos = redos.pop();\n  undos = undos.push(next);\n\n  // Replay the next operations.\n  next.forEach(function (op) {\n    var _op = op,\n        type = _op.type,\n        properties = _op.properties;\n\n    // When the operation mutates the selection, omit its `isFocused` value to\n    // prevent the editor focus from changing during redoing.\n\n    if (type == 'set_selection') {\n      op = op.set('properties', (0, _omit2.default)(properties, 'isFocused'));\n    }\n\n    change.applyOperation(op, { save: false });\n  });\n\n  // Update the history.\n  value = change.value;\n  history = history.set('undos', undos).set('redos', redos);\n  value = value.set('history', history);\n  change.value = value;\n};\n\n/**\n * Undo the previous operations in the history.\n *\n * @param {Change} change\n */\n\nChanges.undo = function (change) {\n  var value = change.value;\n  var _value2 = value,\n      history = _value2.history;\n\n  if (!history) return;\n\n  var _history2 = history,\n      undos = _history2.undos,\n      redos = _history2.redos;\n\n  var previous = undos.peek();\n  if (!previous) return;\n\n  // Shift the previous operations into the redo stack.\n  undos = undos.pop();\n  redos = redos.push(previous);\n\n  // Replay the inverse of the previous operations.\n  previous.slice().reverse().map(_invert2.default).forEach(function (inverse) {\n    var _inverse = inverse,\n        type = _inverse.type,\n        properties = _inverse.properties;\n\n    // When the operation mutates the selection, omit its `isFocused` value to\n    // prevent the editor focus from changing during undoing.\n\n    if (type == 'set_selection') {\n      inverse = inverse.set('properties', (0, _omit2.default)(properties, 'isFocused'));\n    }\n\n    change.applyOperation(inverse, { save: false });\n  });\n\n  // Update the history.\n  value = change.value;\n  history = history.set('undos', undos).set('redos', redos);\n  value = value.set('history', history);\n  change.value = value;\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/changes/on-history.js\n// module id = 409\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/node_modules/debug/src/debug.js\n// module id = 410\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ms/index.js\n// module id = 411\n// module chunks = 0","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_basePick.js\n// module id = 412\n// module chunks = 0","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_basePickBy.js\n// module id = 413\n// module chunks = 0","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_isKey.js\n// module id = 414\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getRawTag.js\n// module id = 415\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_objectToString.js\n// module id = 416\n// module chunks = 0","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_stringToPath.js\n// module id = 417\n// module chunks = 0","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_memoizeCapped.js\n// module id = 418\n// module chunks = 0","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/memoize.js\n// module id = 419\n// module chunks = 0","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_mapCacheClear.js\n// module id = 420\n// module chunks = 0","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Hash.js\n// module id = 421\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_hashClear.js\n// module id = 422\n// module chunks = 0","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseIsNative.js\n// module id = 423\n// module chunks = 0","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_isMasked.js\n// module id = 424\n// module chunks = 0","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_coreJsData.js\n// module id = 425\n// module chunks = 0","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getValue.js\n// module id = 426\n// module chunks = 0","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_hashDelete.js\n// module id = 427\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_hashGet.js\n// module id = 428\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_hashHas.js\n// module id = 429\n// module chunks = 0","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_hashSet.js\n// module id = 430\n// module chunks = 0","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_listCacheClear.js\n// module id = 431\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_listCacheDelete.js\n// module id = 432\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_listCacheGet.js\n// module id = 433\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_listCacheHas.js\n// module id = 434\n// module chunks = 0","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_listCacheSet.js\n// module id = 435\n// module chunks = 0","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_mapCacheDelete.js\n// module id = 436\n// module chunks = 0","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_isKeyable.js\n// module id = 437\n// module chunks = 0","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_mapCacheGet.js\n// module id = 438\n// module chunks = 0","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_mapCacheHas.js\n// module id = 439\n// module chunks = 0","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_mapCacheSet.js\n// module id = 440\n// module chunks = 0","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/toString.js\n// module id = 441\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseToString.js\n// module id = 442\n// module chunks = 0","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseSet.js\n// module id = 443\n// module chunks = 0","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/hasIn.js\n// module id = 444\n// module chunks = 0","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseHasIn.js\n// module id = 445\n// module chunks = 0","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_hasPath.js\n// module id = 446\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseIsArguments.js\n// module id = 447\n// module chunks = 0","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/flatten.js\n// module id = 448\n// module chunks = 0","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseFlatten.js\n// module id = 449\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_isFlattenable.js\n// module id = 450\n// module chunks = 0","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_apply.js\n// module id = 451\n// module chunks = 0","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseSetToString.js\n// module id = 452\n// module chunks = 0","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/constant.js\n// module id = 453\n// module chunks = 0","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_shortOut.js\n// module id = 454\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Slate operation attributes.\n *\n * @type {Array}\n */\n\nvar OPERATION_ATTRIBUTES = {\n  add_mark: ['value', 'path', 'offset', 'length', 'mark'],\n  insert_node: ['value', 'path', 'node'],\n  insert_text: ['value', 'path', 'offset', 'text', 'marks'],\n  merge_node: ['value', 'path', 'position', 'target'],\n  move_node: ['value', 'path', 'newPath'],\n  remove_mark: ['value', 'path', 'offset', 'length', 'mark'],\n  remove_node: ['value', 'path', 'node'],\n  remove_text: ['value', 'path', 'offset', 'text', 'marks'],\n  set_mark: ['value', 'path', 'offset', 'length', 'mark', 'properties'],\n  set_node: ['value', 'path', 'node', 'properties'],\n  set_selection: ['value', 'selection', 'properties'],\n  set_value: ['value', 'properties'],\n  split_node: ['value', 'path', 'position', 'target']\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = OPERATION_ATTRIBUTES;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/constants/operation-attributes.js\n// module id = 455\n// module chunks = 0","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isEqual.js\n// module id = 456\n// module chunks = 0","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseIsEqual.js\n// module id = 457\n// module chunks = 0","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseIsEqualDeep.js\n// module id = 458\n// module chunks = 0","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_stackClear.js\n// module id = 459\n// module chunks = 0","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_stackDelete.js\n// module id = 460\n// module chunks = 0","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_stackGet.js\n// module id = 461\n// module chunks = 0","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_stackHas.js\n// module id = 462\n// module chunks = 0","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_stackSet.js\n// module id = 463\n// module chunks = 0","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_SetCache.js\n// module id = 464\n// module chunks = 0","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_setCacheAdd.js\n// module id = 465\n// module chunks = 0","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_setCacheHas.js\n// module id = 466\n// module chunks = 0","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_arraySome.js\n// module id = 467\n// module chunks = 0","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_cacheHas.js\n// module id = 468\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_equalByTag.js\n// module id = 469\n// module chunks = 0","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_mapToArray.js\n// module id = 470\n// module chunks = 0","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_setToArray.js\n// module id = 471\n// module chunks = 0","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_equalObjects.js\n// module id = 472\n// module chunks = 0","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_arrayFilter.js\n// module id = 473\n// module chunks = 0","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseTimes.js\n// module id = 474\n// module chunks = 0","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/stubFalse.js\n// module id = 475\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseIsTypedArray.js\n// module id = 476\n// module chunks = 0","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseKeys.js\n// module id = 477\n// module chunks = 0","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_nativeKeys.js\n// module id = 478\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_DataView.js\n// module id = 479\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Promise.js\n// module id = 480\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Set.js\n// module id = 481\n// module chunks = 0","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_WeakMap.js\n// module id = 482\n// module chunks = 0","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nmodule.exports = mergeWith;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/mergeWith.js\n// module id = 483\n// module chunks = 0","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseMerge.js\n// module id = 484\n// module chunks = 0","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseFor.js\n// module id = 485\n// module chunks = 0","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_createBaseFor.js\n// module id = 486\n// module chunks = 0","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseMergeDeep.js\n// module id = 487\n// module chunks = 0","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseCreate.js\n// module id = 488\n// module chunks = 0","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isArrayLikeObject.js\n// module id = 489\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/toPlainObject.js\n// module id = 490\n// module chunks = 0","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseKeysIn.js\n// module id = 491\n// module chunks = 0","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_nativeKeysIn.js\n// module id = 492\n// module chunks = 0","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_createAssigner.js\n// module id = 493\n// module chunks = 0","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseRest.js\n// module id = 494\n// module chunks = 0","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_isIterateeCall.js\n// module id = 495\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _immutable = require('immutable');\n\nvar _text = require('../models/text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Define the core schema rules, order-sensitive.\n *\n * @type {Array}\n */\n\nvar CORE_SCHEMA_RULES = [\n\n/**\n * Only allow block nodes in documents.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'document') return;\n    var invalids = node.nodes.filter(function (n) {\n      return n.kind != 'block';\n    });\n    if (!invalids.size) return;\n\n    return function (change) {\n      invalids.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Only allow block nodes or inline and text nodes in blocks.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block') return;\n    var first = node.nodes.first();\n    if (!first) return;\n    var kinds = first.kind == 'block' ? ['block'] : ['inline', 'text'];\n    var invalids = node.nodes.filter(function (n) {\n      return !kinds.includes(n.kind);\n    });\n    if (!invalids.size) return;\n\n    return function (change) {\n      invalids.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Only allow inline and text nodes in inlines.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'inline') return;\n    var invalids = node.nodes.filter(function (n) {\n      return n.kind != 'inline' && n.kind != 'text';\n    });\n    if (!invalids.size) return;\n\n    return function (change) {\n      invalids.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Ensure that block and inline nodes have at least one text child.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block' && node.kind != 'inline') return;\n    if (node.nodes.size > 0) return;\n\n    return function (change) {\n      var text = _text2.default.create();\n      change.insertNodeByKey(node.key, 0, text, { normalize: false });\n    };\n  }\n},\n\n/**\n * Ensure that void nodes contain a text node with a single space of text.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (!node.isVoid) return;\n    if (node.kind != 'block' && node.kind != 'inline') return;\n    if (node.text == ' ' && node.nodes.size == 1) return;\n\n    return function (change) {\n      var text = _text2.default.create(' ');\n      var index = node.nodes.size;\n\n      change.insertNodeByKey(node.key, index, text, { normalize: false });\n\n      node.nodes.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Ensure that inline nodes are never empty.\n *\n * This rule is applied to all blocks, because when they contain an empty\n * inline, we need to remove the inline from that parent block. If `validate`\n * was to be memoized, it should be against the parent node, not the inline\n * themselves.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block') return;\n    var invalids = node.nodes.filter(function (n) {\n      return n.kind == 'inline' && n.text == '';\n    });\n    if (!invalids.size) return;\n\n    return function (change) {\n      // If all of the block's nodes are invalid, insert an empty text node so\n      // that the selection will be preserved when they are all removed.\n      if (node.nodes.size == invalids.size) {\n        var text = _text2.default.create();\n        change.insertNodeByKey(node.key, 1, text, { normalize: false });\n      }\n\n      invalids.forEach(function (child) {\n        change.removeNodeByKey(child.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Ensure that inline void nodes are surrounded by text nodes, by adding extra\n * blank text nodes if necessary.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block' && node.kind != 'inline') return;\n\n    var invalids = node.nodes.reduce(function (list, child, index) {\n      if (child.kind !== 'inline') return list;\n\n      var prev = index > 0 ? node.nodes.get(index - 1) : null;\n      var next = node.nodes.get(index + 1);\n      // We don't test if \"prev\" is inline, since it has already been processed in the loop\n      var insertBefore = !prev;\n      var insertAfter = !next || next.kind == 'inline';\n\n      if (insertAfter || insertBefore) {\n        list = list.push({ insertAfter: insertAfter, insertBefore: insertBefore, index: index });\n      }\n\n      return list;\n    }, new _immutable.List());\n\n    if (!invalids.size) return;\n\n    return function (change) {\n      // Shift for every text node inserted previously.\n      var shift = 0;\n\n      invalids.forEach(function (_ref) {\n        var index = _ref.index,\n            insertAfter = _ref.insertAfter,\n            insertBefore = _ref.insertBefore;\n\n        if (insertBefore) {\n          change.insertNodeByKey(node.key, shift + index, _text2.default.create(), { normalize: false });\n          shift++;\n        }\n\n        if (insertAfter) {\n          change.insertNodeByKey(node.key, shift + index + 1, _text2.default.create(), { normalize: false });\n          shift++;\n        }\n      });\n    };\n  }\n},\n\n/**\n * Merge adjacent text nodes.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block' && node.kind != 'inline') return;\n\n    var invalids = node.nodes.map(function (child, i) {\n      var next = node.nodes.get(i + 1);\n      if (child.kind != 'text') return;\n      if (!next || next.kind != 'text') return;\n      return next;\n    }).filter(Boolean);\n\n    if (!invalids.size) return;\n\n    return function (change) {\n      // Reverse the list to handle consecutive merges, since the earlier nodes\n      // will always exist after each merge.\n      invalids.reverse().forEach(function (n) {\n        change.mergeNodeByKey(n.key, { normalize: false });\n      });\n    };\n  }\n},\n\n/**\n * Prevent extra empty text nodes, except when adjacent to inline void nodes.\n *\n * @type {Object}\n */\n\n{\n  validateNode: function validateNode(node) {\n    if (node.kind != 'block' && node.kind != 'inline') return;\n    var nodes = node.nodes;\n\n    if (nodes.size <= 1) return;\n\n    var invalids = nodes.filter(function (desc, i) {\n      if (desc.kind != 'text') return;\n      if (desc.text.length > 0) return;\n\n      var prev = i > 0 ? nodes.get(i - 1) : null;\n      var next = nodes.get(i + 1);\n\n      // If it's the first node, and the next is a void, preserve it.\n      if (!prev && next.kind == 'inline') return;\n\n      // It it's the last node, and the previous is an inline, preserve it.\n      if (!next && prev.kind == 'inline') return;\n\n      // If it's surrounded by inlines, preserve it.\n      if (next && prev && next.kind == 'inline' && prev.kind == 'inline') return;\n\n      // Otherwise, remove it.\n      return true;\n    });\n\n    if (!invalids.size) return;\n\n    return function (change) {\n      invalids.forEach(function (text) {\n        change.removeNodeByKey(text.key, { normalize: false });\n      });\n    };\n  }\n}];\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexports.default = CORE_SCHEMA_RULES;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/constants/core-schema-rules.js\n// module id = 496\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _isPlainObject = require('is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _pick = require('lodash/pick');\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _immutable = require('immutable');\n\nvar _modelTypes = require('../constants/model-types');\n\nvar _modelTypes2 = _interopRequireDefault(_modelTypes);\n\nvar _changes = require('../changes');\n\nvar _changes2 = _interopRequireDefault(_changes);\n\nvar _operation = require('./operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _apply = require('../operations/apply');\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nvar debug = (0, _debug2.default)('slate:change');\n\n/**\n * Change.\n *\n * @type {Change}\n */\n\nvar Change = function () {\n  _createClass(Change, null, [{\n    key: 'isChange',\n\n\n    /**\n     * Check if `any` is a `Change`.\n     *\n     * @param {Any} any\n     * @return {Boolean}\n     */\n\n    value: function isChange(any) {\n      return !!(any && any[_modelTypes2.default.CHANGE]);\n    }\n\n    /**\n     * Create a new `Change` with `attrs`.\n     *\n     * @param {Object} attrs\n     *   @property {Value} value\n     */\n\n  }]);\n\n  function Change(attrs) {\n    _classCallCheck(this, Change);\n\n    var value = attrs.value;\n\n    this.value = value;\n    this.operations = new _immutable.List();\n    this.flags = (0, _pick2.default)(attrs, ['merge', 'save']);\n  }\n\n  /**\n   * Get the kind.\n   *\n   * @return {String}\n   */\n\n  _createClass(Change, [{\n    key: 'applyOperation',\n\n\n    /**\n     * Apply an `operation` to the current value, saving the operation to the\n     * history if needed.\n     *\n     * @param {Operation|Object} operation\n     * @param {Object} options\n     * @return {Change}\n     */\n\n    value: function applyOperation(operation) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var operations = this.operations,\n          flags = this.flags;\n      var value = this.value;\n      var _value = value,\n          history = _value.history;\n\n      // Add in the current `value` in case the operation was serialized.\n\n      if ((0, _isPlainObject2.default)(operation)) {\n        operation = _extends({}, operation, { value: value });\n      }\n\n      operation = _operation2.default.create(operation);\n\n      // Default options to the change-level flags, this allows for setting\n      // specific options for all of the operations of a given change.\n      options = _extends({}, flags, options);\n\n      // Derive the default option values.\n      var _options = options,\n          _options$merge = _options.merge,\n          merge = _options$merge === undefined ? operations.size == 0 ? null : true : _options$merge,\n          _options$save = _options.save,\n          save = _options$save === undefined ? true : _options$save,\n          _options$skip = _options.skip,\n          skip = _options$skip === undefined ? null : _options$skip;\n\n      // Apply the operation to the value.\n\n      debug('apply', { operation: operation, save: save, merge: merge });\n      value = (0, _apply2.default)(value, operation);\n\n      // If needed, save the operation to the history.\n      if (history && save) {\n        history = history.save(operation, { merge: merge, skip: skip });\n        value = value.set('history', history);\n      }\n\n      // Update the mutable change object.\n      this.value = value;\n      this.operations = operations.push(operation);\n      return this;\n    }\n\n    /**\n     * Apply a series of `operations` to the current value.\n     *\n     * @param {Array|List} operations\n     * @param {Object} options\n     * @return {Change}\n     */\n\n  }, {\n    key: 'applyOperations',\n    value: function applyOperations(operations, options) {\n      var _this = this;\n\n      operations.forEach(function (op) {\n        return _this.applyOperation(op, options);\n      });\n      return this;\n    }\n\n    /**\n     * Call a change `fn` with arguments.\n     *\n     * @param {Function} fn\n     * @param {Mixed} ...args\n     * @return {Change}\n     */\n\n  }, {\n    key: 'call',\n    value: function call(fn) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      fn.apply(undefined, [this].concat(args));\n      return this;\n    }\n\n    /**\n     * Set an operation flag by `key` to `value`.\n     *\n     * @param {String} key\n     * @param {Any} value\n     * @return {Change}\n     */\n\n  }, {\n    key: 'setOperationFlag',\n    value: function setOperationFlag(key, value) {\n      this.flags[key] = value;\n      return this;\n    }\n\n    /**\n     * Unset an operation flag by `key`.\n     *\n     * @param {String} key\n     * @return {Change}\n     */\n\n  }, {\n    key: 'unsetOperationFlag',\n    value: function unsetOperationFlag(key) {\n      delete this.flags[key];\n      return this;\n    }\n  }, {\n    key: 'kind',\n    get: function get() {\n      return 'change';\n    }\n  }]);\n\n  return Change;\n}();\n\n/**\n * Attach a pseudo-symbol for type checking.\n */\n\nChange.prototype[_modelTypes2.default.CHANGE] = true;\n\n/**\n * Add a change method for each of the changes.\n */\n\nObject.keys(_changes2.default).forEach(function (type) {\n  Change.prototype[type] = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    debug(type, { args: args });\n    this.call.apply(this, [_changes2.default[type]].concat(args));\n    return this;\n  };\n});\n\n/**\n * Export.\n *\n * @type {Change}\n */\n\nexports.default = Change;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/models/change.js\n// module id = 497\n// module chunks = 0","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/omit.js\n// module id = 498\n// module chunks = 0","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n\n    return result;\n  }\n\n  if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n\n    return result;\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseClone.js\n// module id = 499\n// module chunks = 0","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_arrayEach.js\n// module id = 500\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseAssign.js\n// module id = 501\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseAssignIn.js\n// module id = 502\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_copySymbols.js\n// module id = 503\n// module chunks = 0","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_copySymbolsIn.js\n// module id = 504\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_initCloneArray.js\n// module id = 505\n// module chunks = 0","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_initCloneByTag.js\n// module id = 506\n// module chunks = 0","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_cloneDataView.js\n// module id = 507\n// module chunks = 0","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_cloneRegExp.js\n// module id = 508\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_cloneSymbol.js\n// module id = 509\n// module chunks = 0","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isMap.js\n// module id = 510\n// module chunks = 0","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseIsMap.js\n// module id = 511\n// module chunks = 0","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isSet.js\n// module id = 512\n// module chunks = 0","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseIsSet.js\n// module id = 513\n// module chunks = 0","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseUnset.js\n// module id = 514\n// module chunks = 0","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/last.js\n// module id = 515\n// module chunks = 0","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_parent.js\n// module id = 516\n// module chunks = 0","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseSlice.js\n// module id = 517\n// module chunks = 0","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_customOmitClone.js\n// module id = 518\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _isEmpty = require('is-empty');\n\nvar _isEmpty2 = _interopRequireDefault(_isEmpty);\n\nvar _pick = require('lodash/pick');\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _range = require('../models/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Set `properties` on the selection.\n *\n * @param {Change} change\n * @param {Object} properties\n */\n\nChanges.select = function (change, properties) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  properties = _range2.default.createProperties(properties);\n\n  var _options$snapshot = options.snapshot,\n      snapshot = _options$snapshot === undefined ? false : _options$snapshot;\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  var props = {};\n  var sel = selection.toJSON();\n  var next = selection.merge(properties).normalize(document);\n  properties = (0, _pick2.default)(next, Object.keys(properties));\n\n  // Remove any properties that are already equal to the current selection. And\n  // create a dictionary of the previous values for all of the properties that\n  // are being changed, for the inverse operation.\n  for (var k in properties) {\n    if (snapshot == false && properties[k] == sel[k]) continue;\n    props[k] = properties[k];\n  }\n\n  // If the selection moves, clear any marks, unless the new selection\n  // properties change the marks in some way.\n  var moved = ['anchorKey', 'anchorOffset', 'focusKey', 'focusOffset'].some(function (p) {\n    return props.hasOwnProperty(p);\n  });\n\n  if (sel.marks && properties.marks == sel.marks && moved) {\n    props.marks = null;\n  }\n\n  // If there are no new properties to set, abort.\n  if ((0, _isEmpty2.default)(props)) {\n    return;\n  }\n\n  // Apply the operation.\n  change.applyOperation({\n    type: 'set_selection',\n    value: value,\n    properties: props,\n    selection: sel\n  }, snapshot ? { skip: false, merge: false } : {});\n};\n\n/**\n * Select the whole document.\n *\n * @param {Change} change\n */\n\nChanges.selectAll = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection;\n\n  var next = selection.moveToRangeOf(document);\n  change.select(next);\n};\n\n/**\n * Snapshot the current selection.\n *\n * @param {Change} change\n */\n\nChanges.snapshotSelection = function (change) {\n  var value = change.value;\n  var selection = value.selection;\n\n  change.select(selection, { snapshot: true });\n};\n\n/**\n * Move the anchor point backward, accounting for being at the start of a block.\n *\n * @param {Change} change\n */\n\nChanges.moveAnchorCharBackward = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection,\n      anchorText = value.anchorText,\n      anchorBlock = value.anchorBlock;\n  var anchorOffset = selection.anchorOffset;\n\n  var previousText = document.getPreviousText(anchorText.key);\n  var isInVoid = document.hasVoidParent(anchorText.key);\n  var isPreviousInVoid = previousText && document.hasVoidParent(previousText.key);\n\n  if (!isInVoid && anchorOffset > 0) {\n    change.moveAnchor(-1);\n    return;\n  }\n\n  if (!previousText) {\n    return;\n  }\n\n  change.moveAnchorToEndOf(previousText);\n\n  if (!isInVoid && !isPreviousInVoid && anchorBlock.hasNode(previousText.key)) {\n    change.moveAnchor(-1);\n  }\n};\n\n/**\n * Move the anchor point forward, accounting for being at the end of a block.\n *\n * @param {Change} change\n */\n\nChanges.moveAnchorCharForward = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection,\n      anchorText = value.anchorText,\n      anchorBlock = value.anchorBlock;\n  var anchorOffset = selection.anchorOffset;\n\n  var nextText = document.getNextText(anchorText.key);\n  var isInVoid = document.hasVoidParent(anchorText.key);\n  var isNextInVoid = nextText && document.hasVoidParent(nextText.key);\n\n  if (!isInVoid && anchorOffset < anchorText.text.length) {\n    change.moveAnchor(1);\n    return;\n  }\n\n  if (!nextText) {\n    return;\n  }\n\n  change.moveAnchorToStartOf(nextText);\n\n  if (!isInVoid && !isNextInVoid && anchorBlock.hasNode(nextText.key)) {\n    change.moveAnchor(1);\n  }\n};\n\n/**\n * Move the focus point backward, accounting for being at the start of a block.\n *\n * @param {Change} change\n */\n\nChanges.moveFocusCharBackward = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection,\n      focusText = value.focusText,\n      focusBlock = value.focusBlock;\n  var focusOffset = selection.focusOffset;\n\n  var previousText = document.getPreviousText(focusText.key);\n  var isInVoid = document.hasVoidParent(focusText.key);\n  var isPreviousInVoid = previousText && document.hasVoidParent(previousText.key);\n\n  if (!isInVoid && focusOffset > 0) {\n    change.moveFocus(-1);\n    return;\n  }\n\n  if (!previousText) {\n    return;\n  }\n\n  change.moveFocusToEndOf(previousText);\n\n  if (!isInVoid && !isPreviousInVoid && focusBlock.hasNode(previousText.key)) {\n    change.moveFocus(-1);\n  }\n};\n\n/**\n * Move the focus point forward, accounting for being at the end of a block.\n *\n * @param {Change} change\n */\n\nChanges.moveFocusCharForward = function (change) {\n  var value = change.value;\n  var document = value.document,\n      selection = value.selection,\n      focusText = value.focusText,\n      focusBlock = value.focusBlock;\n  var focusOffset = selection.focusOffset;\n\n  var nextText = document.getNextText(focusText.key);\n  var isInVoid = document.hasVoidParent(focusText.key);\n  var isNextInVoid = nextText && document.hasVoidParent(nextText.key);\n\n  if (!isInVoid && focusOffset < focusText.text.length) {\n    change.moveFocus(1);\n    return;\n  }\n\n  if (!nextText) {\n    return;\n  }\n\n  change.moveFocusToStartOf(nextText);\n\n  if (!isInVoid && !isNextInVoid && focusBlock.hasNode(nextText.key)) {\n    change.moveFocus(1);\n  }\n};\n\n/**\n * Mix in move methods.\n */\n\nvar MOVE_DIRECTIONS = ['Forward', 'Backward'];\n\nMOVE_DIRECTIONS.forEach(function (direction) {\n  var anchor = 'moveAnchorChar' + direction;\n  var focus = 'moveFocusChar' + direction;\n\n  Changes['moveChar' + direction] = function (change) {\n    change[anchor]()[focus]();\n  };\n\n  Changes['moveStartChar' + direction] = function (change) {\n    if (change.value.isBackward) {\n      change[focus]();\n    } else {\n      change[anchor]();\n    }\n  };\n\n  Changes['moveEndChar' + direction] = function (change) {\n    if (change.value.isBackward) {\n      change[anchor]();\n    } else {\n      change[focus]();\n    }\n  };\n\n  Changes['extendChar' + direction] = function (change) {\n    change['moveFocusChar' + direction]();\n  };\n\n  Changes['collapseChar' + direction] = function (change) {\n    var collapse = direction == 'Forward' ? 'collapseToEnd' : 'collapseToStart';\n    change[collapse]()['moveChar' + direction]();\n  };\n});\n\n/**\n * Mix in alias methods.\n */\n\nvar ALIAS_METHODS = [['collapseLineBackward', 'collapseToStartOfBlock'], ['collapseLineForward', 'collapseToEndOfBlock'], ['extendLineBackward', 'extendToStartOfBlock'], ['extendLineForward', 'extendToEndOfBlock']];\n\nALIAS_METHODS.forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      alias = _ref2[0],\n      method = _ref2[1];\n\n  Changes[alias] = function (change) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    change[method].apply(change, [change].concat(args));\n  };\n});\n\n/**\n * Mix in selection changes that are just a proxy for the selection method.\n */\n\nvar PROXY_TRANSFORMS = ['blur', 'collapseTo', 'collapseToAnchor', 'collapseToEnd', 'collapseToEndOf', 'collapseToFocus', 'collapseToStart', 'collapseToStartOf', 'extend', 'extendTo', 'extendToEndOf', 'extendToStartOf', 'flip', 'focus', 'move', 'moveAnchor', 'moveAnchorOffsetTo', 'moveAnchorTo', 'moveAnchorToEndOf', 'moveAnchorToStartOf', 'moveEnd', 'moveEndOffsetTo', 'moveEndTo', 'moveFocus', 'moveFocusOffsetTo', 'moveFocusTo', 'moveFocusToEndOf', 'moveFocusToStartOf', 'moveOffsetsTo', 'moveStart', 'moveStartOffsetTo', 'moveStartTo', 'moveTo', 'moveToEnd', 'moveToEndOf', 'moveToRangeOf', 'moveToStart', 'moveToStartOf', 'deselect'];\n\nPROXY_TRANSFORMS.forEach(function (method) {\n  Changes[method] = function (change) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var normalize = method != 'deselect';\n    var value = change.value;\n    var document = value.document,\n        selection = value.selection;\n\n    var next = selection[method].apply(selection, args);\n    if (normalize) next = next.normalize(document);\n    change.select(next);\n  };\n});\n\n/**\n * Mix in node-related changes.\n */\n\nvar PREFIXES = ['moveTo', 'moveAnchorTo', 'moveFocusTo', 'moveStartTo', 'moveEndTo', 'collapseTo', 'extendTo'];\n\nvar DIRECTIONS = ['Next', 'Previous'];\n\nvar KINDS = ['Block', 'Inline', 'Text'];\n\nPREFIXES.forEach(function (prefix) {\n  var edges = ['Start', 'End'];\n\n  if (prefix == 'moveTo') {\n    edges.push('Range');\n  }\n\n  edges.forEach(function (edge) {\n    var method = '' + prefix + edge + 'Of';\n\n    KINDS.forEach(function (kind) {\n      var getNode = kind == 'Text' ? 'getNode' : 'getClosest' + kind;\n\n      Changes['' + method + kind] = function (change) {\n        var value = change.value;\n        var document = value.document,\n            selection = value.selection;\n\n        var node = document[getNode](selection.startKey);\n        if (!node) return;\n        change[method](node);\n      };\n\n      DIRECTIONS.forEach(function (direction) {\n        var getDirectionNode = 'get' + direction + kind;\n        var directionKey = direction == 'Next' ? 'startKey' : 'endKey';\n\n        Changes['' + method + direction + kind] = function (change) {\n          var value = change.value;\n          var document = value.document,\n              selection = value.selection;\n\n          var node = document[getNode](selection[directionKey]);\n          if (!node) return;\n          var target = document[getDirectionNode](node.key);\n          if (!target) return;\n          change[method](target);\n        };\n      });\n    });\n  });\n});\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/changes/on-selection.js\n// module id = 519\n// module chunks = 0","\n/**\n * Has own property.\n *\n * @type {Function}\n */\n\nvar has = Object.prototype.hasOwnProperty\n\n/**\n * To string.\n *\n * @type {Function}\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Test whether a value is \"empty\".\n *\n * @param {Mixed} val\n * @return {Boolean}\n */\n\nfunction isEmpty(val) {\n  // Null and Undefined...\n  if (val == null) return true\n\n  // Booleans...\n  if ('boolean' == typeof val) return false\n\n  // Numbers...\n  if ('number' == typeof val) return val === 0\n\n  // Strings...\n  if ('string' == typeof val) return val.length === 0\n\n  // Functions...\n  if ('function' == typeof val) return val.length === 0\n\n  // Arrays...\n  if (Array.isArray(val)) return val.length === 0\n\n  // Errors...\n  if (val instanceof Error) return val.message === ''\n\n  // Objects...\n  if (val.toString == toString) {\n    switch (val.toString()) {\n\n      // Maps, Sets, Files and Errors...\n      case '[object File]':\n      case '[object Map]':\n      case '[object Set]': {\n        return val.size === 0\n      }\n\n      // Plain objects...\n      case '[object Object]': {\n        for (var key in val) {\n          if (has.call(val, key)) return false\n        }\n\n        return true\n      }\n    }\n  }\n\n  // Anything else...\n  return false\n}\n\n/**\n * Export `isEmpty`.\n *\n * @type {Function}\n */\n\nmodule.exports = isEmpty\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-empty/lib/index.js\n// module id = 520\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _value = require('../models/value');\n\nvar _value2 = _interopRequireDefault(_value);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Set `properties` on the value.\n *\n * @param {Change} change\n * @param {Object|Value} properties\n * @param {Object} options\n */\n\nChanges.setValue = function (change, properties) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  properties = _value2.default.createProperties(properties);\n  var value = change.value;\n\n\n  change.applyOperation({\n    type: 'set_value',\n    properties: properties,\n    value: value\n  }, options);\n};\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/changes/on-value.js\n// module id = 521\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _immutable = require('immutable');\n\n/**\n * Changes.\n *\n * @type {Object}\n */\n\nvar Changes = {};\n\n/**\n * Normalize the value with its schema.\n *\n * @param {Change} change\n */\n\nChanges.normalize = function (change) {\n  change.normalizeDocument();\n};\n\n/**\n * Normalize the document with the value's schema.\n *\n * @param {Change} change\n */\n\nChanges.normalizeDocument = function (change) {\n  var value = change.value;\n  var document = value.document;\n\n  change.normalizeNodeByKey(document.key);\n};\n\n/**\n * Normalize a `node` and its children with the value's schema.\n *\n * @param {Change} change\n * @param {Node|String} key\n */\n\nChanges.normalizeNodeByKey = function (change, key) {\n  var value = change.value;\n  var document = value.document,\n      schema = value.schema;\n\n  var node = document.assertNode(key);\n\n  normalizeNodeAndChildren(change, node, schema);\n\n  document = change.value.document;\n  var ancestors = document.getAncestors(key);\n  if (!ancestors) return;\n\n  ancestors.forEach(function (ancestor) {\n    normalizeNode(change, ancestor, schema);\n  });\n};\n\n/**\n * Normalize a `node` and its children with a `schema`.\n *\n * @param {Change} change\n * @param {Node} node\n * @param {Schema} schema\n */\n\nfunction normalizeNodeAndChildren(change, node, schema) {\n  if (node.kind == 'text') {\n    normalizeNode(change, node, schema);\n    return;\n  }\n\n  // We can't just loop the children and normalize them, because in the process\n  // of normalizing one child, we might end up creating another. Instead, we\n  // have to normalize one at a time, and check for new children along the way.\n  // PERF: use a mutable array here instead of an immutable stack.\n  var keys = node.nodes.toArray().map(function (n) {\n    return n.key;\n  });\n\n  // While there is still a child key that hasn't been normalized yet...\n\n  var _loop = function _loop() {\n    var size = change.operations.size;\n\n    var key = void 0;\n\n    // PERF: use a mutable set here since we'll be add to it a lot.\n    var set = new _immutable.Set().asMutable();\n\n    // Unwind the stack, normalizing every child and adding it to the set.\n    while (key = keys[0]) {\n      var child = node.getChild(key);\n      normalizeNodeAndChildren(change, child, schema);\n      set.add(key);\n      keys.shift();\n    }\n\n    // Turn the set immutable to be able to compare against it.\n    set = set.asImmutable();\n\n    // PERF: Only re-find the node and re-normalize any new children if\n    // operations occured that might have changed it.\n    if (change.operations.size > size) {\n      node = refindNode(change, node);\n\n      // Add any new children back onto the stack.\n      node.nodes.forEach(function (n) {\n        if (set.has(n.key)) return;\n        keys.unshift(n.key);\n      });\n    }\n  };\n\n  while (keys.length) {\n    _loop();\n  }\n\n  // Normalize the node itself if it still exists.\n  if (node) {\n    normalizeNode(change, node, schema);\n  }\n}\n\n/**\n * Re-find a reference to a node that may have been modified or removed\n * entirely by a change.\n *\n * @param {Change} change\n * @param {Node} node\n * @return {Node}\n */\n\nfunction refindNode(change, node) {\n  var value = change.value;\n  var document = value.document;\n\n  return node.kind == 'document' ? document : document.getDescendant(node.key);\n}\n\n/**\n * Normalize a `node` with a `schema`, but not its children.\n *\n * @param {Change} change\n * @param {Node} node\n * @param {Schema} schema\n */\n\nfunction normalizeNode(change, node, schema) {\n  var max = schema.stack.plugins.length + 1;\n  var iterations = 0;\n\n  function iterate(c, n) {\n    var normalize = n.validate(schema);\n    if (!normalize) return;\n\n    // Run the `normalize` function to fix the node.\n    normalize(c);\n\n    // Re-find the node reference, in case it was updated. If the node no longer\n    // exists, we're done for this branch.\n    n = refindNode(c, n);\n    if (!n) return;\n\n    // Increment the iterations counter, and check to make sure that we haven't\n    // exceeded the max. Without this check, it's easy for the `validate` or\n    // `normalize` function of a schema rule to be written incorrectly and for\n    // an infinite invalid loop to occur.\n    iterations++;\n\n    if (iterations > max) {\n      throw new Error('A schema rule could not be validated after sufficient iterations. This is usually due to a `rule.validate` or `rule.normalize` function of a schema being incorrectly written, causing an infinite loop.');\n    }\n\n    // Otherwise, iterate again.\n    iterate(c, n);\n  }\n\n  iterate(change, node);\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = Changes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/changes/with-schema.js\n// module id = 522\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apply = require('./apply');\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nvar _invert = require('./invert');\n\nvar _invert2 = _interopRequireDefault(_invert);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexports.default = {\n  apply: _apply2.default,\n  invert: _invert2.default\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/slate/lib/operations/index.js\n// module id = 523\n// module chunks = 0","\n/**\n * Expose `isUrl`.\n */\n\nmodule.exports = isUrl;\n\n/**\n * Matcher.\n */\n\nvar matcher = /^(?:\\w+:)?\\/\\/([^\\s\\.]+\\.\\S{2}|localhost[\\:?\\d]*)\\S*$/;\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string){\n  return matcher.test(string);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-url/index.js\n// module id = 524\n// module chunks = 0","import React from 'react';\n\nconst MainImg = props =>\n  (\n    <div className={props.className} { ...props.attributes }>\n      <div className=\"main-image-wrapper\">\n        <div className=\"overlay\"></div>\n        <div className=\"main-image\">\n          <img src={props.src} alt={props.alt} className={`main ${props.className}`} />\n        </div>\n        <button className=\"secondary\" type=\"button\" disabled>Make a Donation</button>\n      </div>\n      <button className=\"primary mobile\" type=\"button\" disabled>Make a Donation</button>\n    </div>\n  );\n\nconst LeftImg = props =>\n  (<img src={props.src} alt={props.alt} className={`left ${props.className}`} { ...props.attributes }/>);\n\nconst RightImg = props =>\n  (<img src={props.src} alt={props.alt} className={`right ${props.className}`} { ...props.attributes }/>);\n\nconst Images = (props) => {\n  const {\n    src,\n    className,\n    imageType,\n    attributes,\n    alt,\n  } = props;\n\n  if (imageType === 'main') {\n    return <MainImg src={src} alt={alt} className={className} attributes={attributes} />;\n  } else if (imageType === 'left') {\n    return <LeftImg src={src} alt={alt} className={className} attributes={attributes} />;\n  } else if (imageType === 'right') {\n    return <RightImg src={src} alt={alt} className={className} attributes={attributes} />;\n  }\n  return null;\n};\n\nexport default Images;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/editCampaign/components/editor/images.js","/* eslint-env browser */\nimport React from 'react';\n\nconst Toolbar = (props) => {\n  let selectValue;\n  if ('type' in props.selectValue) {\n    selectValue = props.selectValue.type;\n  }\n\n  let inlineType;\n  if (props.inlineType) {\n    if ('type' in props.inlineType) {\n      inlineType = props.inlineType.type;\n    }\n  }\n  return (\n    <div className=\"toolbar\">\n      <div className=\"row align-justify\">\n        <select\n          className=\"small-12 medium-5 columns\"\n          onChange={props.onChangeFormat}\n          value={selectValue}>\n          <option value=\"paragraph\">Normal</option>\n          <option value=\"header\">Header</option>\n        </select>\n        <div className=\"inline shrink columns\">\n          <button data-active={true} className=\"bold\" type=\"button\"onMouseDown={e => props.onClickInline(e, 'bold')}>\n            <span className=\"icon\"></span>\n          </button>\n          <button className=\"italic\" type=\"button\" onMouseDown={e => props.onClickInline(e, 'italic')}>\n            <span className=\"icon\"></span>\n          </button>\n          <button className=\"underlined\" type=\"button\" onMouseDown={e => props.onClickInline(e, 'underlined')}>\n            <span className=\"icon\"></span>\n          </button>\n        </div>\n        <div className=\"list-types shrink columns\">\n          <button className=\"numbered\" type=\"button\" onMouseDown={e => props.onClickList(e, 'numberedList')}>\n            <span className=\"icon\"></span>\n          </button>\n          <button className=\"bullet\" type=\"button\" onMouseDown={e => props.onClickList(e, 'bulletedList')}>\n            <span className=\"icon\"></span>\n          </button>\n        </div>\n        <div className=\"content-types shrink columns\">\n          <button className={`link${inlineType === 'link' ? ' active' : ''}`} onMouseDown={props.onNewLink} type=\"button\">\n            <span className=\"icon\"></span>\n          </button>\n          <button className=\"image\" onMouseDown={props.onAddImage} type=\"button\">\n            <span className=\"icon\"></span>\n          </button>\n          {/* <button className=\"movie\" type=\"button\">\n            <span className=\"icon\"></span>\n          </button> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Toolbar;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/editCampaign/components/editor/toolbar.js","/* eslint-env browser */\nimport React from 'react';\n\nconst CreateLink = props => (\n  <section id=\"createLink\" >\n    {props.editorState.isExpanded\n      ? null\n      : <div className=\"row align-middle\">\n        <div className=\"columns small-12 medium-2 large-3\">\n          <label htmlFor=\"newUrlText\">\n            Link Text:\n          </label>\n        </div>\n        <div className=\"columns expand\">\n          <input\n            type=\"text\"\n            value={props.newUrlText}\n            name=\"newUrlText\"\n            id=\"newUrlText\"\n            onChange={props.onChange} />\n        </div>\n      </div>}\n    <div className=\"row align-middle\">\n      <div className=\"columns small-12 medium-2 large-3\">\n        <label htmlFor=\"newUrl\">\n          Link Url:\n        </label>\n      </div>\n      <div className=\"columns expand\">\n        <input\n          type=\"text\"\n          value={props.newUrl}\n          name=\"newUrl\"\n          id=\"newUrl\"\n          onChange={props.onChange} />\n      </div>\n    </div>\n    <div className=\"row align-middle\">\n      <div className=\"small-12 columns\">\n        <div className=\"row align-center\">\n          <button\n            className=\"small-11 medium-6 large-8 secondary\"\n            onClick={props.onCreateLink}\n            disabled={!props.validate(props.newUrl)}\n            type='button'>\n            {props.editorState.isExpanded ? 'Create Link' : 'Insert Link'}\n          </button>\n          <div className=\"small-12 columns\">\n            <button\n              className=\"cancel\"\n              onClick={props.cancelCreateLink}\n              type='button'>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nexport default CreateLink;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/editCampaign/components/editor/createLink.js","/* eslint-env browser */\nimport React from 'react';\n\nconst CreateImage = props => (\n  <section id=\"createImage\" >\n    <div className=\"row align-middle img-src\">\n      <div className=\"columns small-12 medium-3 large-3\">\n        <label htmlFor=\"newSrc\">\n          Image Src:\n        </label>\n      </div>\n      <div className=\"columns small-12 medium-9 large-9\">\n        <input\n          type=\"file\"\n          name=\"newSrc\"\n          id=\"newSrc\"\n          onChange={props.onChange} />\n      </div>\n    </div>\n    <div className=\"row align-middle img-description\">\n      <div className=\"columns small-12 medium-3 large-3\">\n        <label htmlFor=\"newAlt\">\n          Description:\n        </label>\n      </div>\n      <div className=\"columns small-12 medium-9 large-9\">\n        <input\n          type=\"text\"\n          value={props.newAlt}\n          name=\"newAlt\"\n          id=\"newAlt\"\n          onChange={props.onChange} />\n      </div>\n    </div>\n    <div className=\"row align-middle img-type\">\n      <div className=\"columns small-12 medium-3 large-3\">\n        <legend>Image Type:</legend>\n      </div>\n      <div className=\"columns small-12 medium-9 large-9\">\n        <label htmlFor=\"imageType1\">\n          <input\n            type=\"radio\"\n            id=\"imageType1\"\n            name=\"newImageType\"\n            onChange={props.onChange}\n            checked={props.newImageType === 'main'}\n            value=\"main\" />\n          <span></span>\n          Main Image\n        </label>\n        <label htmlFor=\"imageType2\">\n          <input\n            type=\"radio\"\n            id=\"imageType2\"\n            name=\"newImageType\"\n            onChange={props.onChange}\n            checked={props.newImageType === 'left'}\n            value=\"left\" />\n          <span></span>\n          Left Image\n        </label>\n        <label htmlFor=\"imageType3\">\n          <input\n            type=\"radio\"\n            id=\"imageType3\"\n            name=\"newImageType\"\n            onChange={props.onChange}\n            checked={props.newImageType === 'right'}\n            value=\"right\" />\n          <span></span>\n          Right Image\n        </label>\n      </div>\n    </div>\n    <div className=\"row align-middle\">\n      <div className=\"small-12 columns\">\n        <div className=\"row align-center\">\n          <button\n            className=\"small-11 medium-6 large-8 secondary\"\n            onClick={props.onCreateImage}\n            disabled={!props.validate(props.newSrc !== '' ? props.newSrc.name : '')}\n            type='button'>\n            Add Image\n          </button>\n          <div className=\"small-12 columns\">\n            <button\n              className=\"cancel\"\n              onClick={props.cancelCreateImage}\n              type='button'>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nexport default CreateImage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/editCampaign/components/editor/createImage.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scenes/editCampaign/components/editor/scss/style.scss\n// module id = 529\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".no-touch #campaignEditor .main-image-wrapper:hover div.overlay, .no-touch #campaignEditor .main-image-wrapper:hover button.secondary {\\n  display: initial; }\\n\\n.no-touch #campaignEditor button.primary.mobile {\\n  display: none; }\\n\\n#campaignEditor {\\n  border-radius: 0.1875rem;\\n  overflow: hidden;\\n  border: 0.0625rem solid #808080; }\\n  #campaignEditor .toolbar {\\n    background-image: url(\" + require(\"../../../../../assets/img/orange-brush1.png\") + \");\\n    padding: 0.5rem;\\n    background-size: 120% 140%;\\n    background-position: 50%;\\n    color: #333333;\\n    padding: 0.375rem; }\\n    #campaignEditor .toolbar > div.row {\\n      margin: 0; }\\n    #campaignEditor .toolbar span.icon {\\n      font-family: 'font-awesome-light';\\n      display: inline-block;\\n      color: #333333;\\n      font-size: 1rem;\\n      padding: 0.5rem;\\n      line-height: initial;\\n      border-radius: 0.0675rem;\\n      text-shadow: 0 0 0.125rem #fffbef;\\n      min-width: 2rem; }\\n    #campaignEditor .toolbar button.active span.icon {\\n      color: #3694ff; }\\n    #campaignEditor .toolbar select {\\n      display: inline-block;\\n      width: 40%;\\n      margin: 0;\\n      background-color: transparent;\\n      border: none;\\n      padding: 0.3125rem 0.5rem 0.4375rem 0.5rem;\\n      line-height: initial;\\n      color: #333333;\\n      font-family: 'Lato', sans-serif;\\n      font-weight: 300;\\n      font-size: 1.25rem;\\n      height: auto;\\n      background-image: url(\\\"/assets/img/sort-drk.svg\\\");\\n      background-position: right 58%;\\n      background-size: auto 1rem;\\n      cursor: pointer;\\n      transition: none; }\\n      #campaignEditor .toolbar select:focus {\\n        outline: none;\\n        box-shadow: none; }\\n    #campaignEditor .toolbar div.shrink.columns {\\n      padding: 0; }\\n    #campaignEditor .toolbar button {\\n      display: inline-block;\\n      width: auto;\\n      margin: 0;\\n      padding: 0; }\\n    #campaignEditor .toolbar button:hover, #campaignEditor .toolbar select:hover {\\n      background-color: rgba(255, 255, 255, 0.2);\\n      box-shadow: 0.0625rem 0.0625rem 0.0625rem rgba(0, 0, 0, 0.2);\\n      border-radius: 0.375rem;\\n      transition: none; }\\n    #campaignEditor .toolbar button:hover:active, #campaignEditor .toolbar select:hover:active {\\n      background-color: rgba(255, 255, 255, 0.1);\\n      box-shadow: -0.0625rem -0.0625rem 0.0625rem rgba(0, 0, 0, 0.2); }\\n  #campaignEditor .grey-line {\\n    background-image: url(/assets/img/grey-line.svg);\\n    background-position-x: 50%;\\n    height: 1.125rem;\\n    position: relative;\\n    width: 100%;\\n    top: -0.5625rem;\\n    background-repeat: no-repeat;\\n    background-size: cover; }\\n  #campaignEditor #createLink, #campaignEditor #createImage {\\n    padding: 1rem 0;\\n    margin: 0;\\n    background-image: url(\\\"/assets/img/paper.png\\\");\\n    background-repeat: no-repeat;\\n    background-size: 110% 120%;\\n    background-position-x: 50%;\\n    background-position-y: 80%; }\\n    #campaignEditor #createLink .row, #campaignEditor #createImage .row {\\n      margin: 0; }\\n      #campaignEditor #createLink .row > div, #campaignEditor #createImage .row > div {\\n        margin-bottom: 0.375rem; }\\n        #campaignEditor #createLink .row > div:not(:first-child), #campaignEditor #createImage .row > div:not(:first-child) {\\n          margin-bottom: 0.75rem; }\\n        @media screen and (min-width: 40em) {\\n          #campaignEditor #createLink .row > div, #campaignEditor #createImage .row > div {\\n            margin-bottom: 1rem; } }\\n      #campaignEditor #createLink .row:nth-last-child(2) > div:last-child, #campaignEditor #createImage .row:nth-last-child(2) > div:last-child {\\n        margin-bottom: 0; }\\n      @media screen and (min-width: 40em) {\\n        #campaignEditor #createLink .row:nth-last-child(2) > div, #campaignEditor #createImage .row:nth-last-child(2) > div {\\n          margin-bottom: 0; } }\\n      #campaignEditor #createLink .row:last-child > div, #campaignEditor #createImage .row:last-child > div {\\n        margin-bottom: 0rem;\\n        text-align: center; }\\n    #campaignEditor #createLink legend, #campaignEditor #createImage legend {\\n      width: 100%; }\\n    #campaignEditor #createLink label, #campaignEditor #createLink legend, #campaignEditor #createImage label, #campaignEditor #createImage legend {\\n      text-align: left;\\n      margin: 0;\\n      font-size: 1rem; }\\n      @media screen and (min-width: 40em) {\\n        #campaignEditor #createLink label, #campaignEditor #createLink legend, #campaignEditor #createImage label, #campaignEditor #createImage legend {\\n          text-align: right; } }\\n    #campaignEditor #createLink .img-type label span, #campaignEditor #createImage .img-type label span {\\n      top: 0.25rem; }\\n    @media screen and (max-width: 40em) {\\n      #campaignEditor #createLink .img-type label:not(:last-child), #campaignEditor #createImage .img-type label:not(:last-child) {\\n        margin: 0 0 0.5rem 0; } }\\n    @media screen and (min-width: 40em) {\\n      #campaignEditor #createLink .img-type label, #campaignEditor #createImage .img-type label {\\n        display: inline-block;\\n        margin: 0 1.5rem 0 0; } }\\n    #campaignEditor #createLink input, #campaignEditor #createImage input {\\n      margin: 0;\\n      font-size: 1rem;\\n      height: auto;\\n      padding: 0.375rem; }\\n    #campaignEditor #createLink button, #campaignEditor #createImage button {\\n      margin: 1.5rem 0 0 0;\\n      padding: 0.75rem 0.75rem 1rem 0.75rem; }\\n  #campaignEditor .editor {\\n    margin-top: -1.125rem; }\\n    #campaignEditor .editor h2 {\\n      clear: both; }\\n    #campaignEditor .editor > div {\\n      padding: 0 1rem 0.5rem 1rem;\\n      overflow: auto; }\\n      #campaignEditor .editor > div p, #campaignEditor .editor > div ol, #campaignEditor .editor > div ul {\\n        margin-top: 0.75rem; }\\n        @media screen and (min-width: 40em) {\\n          #campaignEditor .editor > div p, #campaignEditor .editor > div ol, #campaignEditor .editor > div ul {\\n            font-size: 1.125rem;\\n            margin-top: 1rem;\\n            line-height: 1.375rem; } }\\n      #campaignEditor .editor > div li:not(:last-of-type) {\\n        padding-bottom: 0.25rem; }\\n      #campaignEditor .editor > div ol {\\n        margin: 1rem 0;\\n        padding-left: 1.625rem; }\\n        #campaignEditor .editor > div ol li {\\n          padding-left: 0.125rem; }\\n      #campaignEditor .editor > div ul {\\n        margin: 1rem 0;\\n        padding-left: 1.75rem; }\\n      #campaignEditor .editor > div .main-image-wrapper {\\n        position: relative;\\n        display: flex;\\n        margin-top: 0.75rem;\\n        align-items: center;\\n        justify-content: center; }\\n        @media screen and (min-width: 40em) {\\n          #campaignEditor .editor > div .main-image-wrapper {\\n            margin-top: 1rem; } }\\n        #campaignEditor .editor > div .main-image-wrapper div.main-image img {\\n          float: none;\\n          width: 100%;\\n          max-width: none;\\n          margin: 0; }\\n        #campaignEditor .editor > div .main-image-wrapper div.overlay {\\n          pointer-events: none;\\n          position: absolute;\\n          width: 100%;\\n          height: 100%;\\n          background-color: rgba(128, 128, 128, 0.5);\\n          display: none;\\n          border-radius: 0.25rem; }\\n      #campaignEditor .editor > div button.primary.mobile, #campaignEditor .editor > div button[type='submit'].primary.mobile {\\n        margin: 1rem 0; }\\n      #campaignEditor .editor > div button.secondary, #campaignEditor .editor > div button[type='submit'].secondary {\\n        pointer-events: none;\\n        position: absolute;\\n        margin: 0;\\n        width: 80%;\\n        z-index: 100;\\n        display: none; }\\n      #campaignEditor .editor > div img {\\n        width: 50%;\\n        max-width: 300px;\\n        border-radius: 0.25rem;\\n        border: 0.0625rem solid #808080; }\\n        #campaignEditor .editor > div img.active {\\n          box-shadow: 0 0 0.375rem #0061cf; }\\n        #campaignEditor .editor > div img.left {\\n          float: left;\\n          margin: 0.75rem 1rem 0.625rem 0; }\\n          @media screen and (min-width: 40em) {\\n            #campaignEditor .editor > div img.left {\\n              margin: 1rem 1.125rem 0.75rem 0; } }\\n        #campaignEditor .editor > div img.right {\\n          float: right;\\n          margin: 0.75rem 0 0.625rem 1rem; }\\n          @media screen and (min-width: 40em) {\\n            #campaignEditor .editor > div img.right {\\n              margin: 1rem 0 0.75rem 1.125rem; } }\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"lightGraphite\": \"#808080\",\n\t\"mauiOrange\": \"#ffab20\",\n\t\"graphite\": \"#404040\",\n\t\"darkGraphite\": \"#101010\",\n\t\"brightGraphite\": \"#999999\",\n\t\"errorRed\": \"#ff5800\",\n\t\"darkErrorRed\": \"#cc4600\",\n\t\"blueHydrangea\": \"#3694ff\",\n\t\"darkBlueHydrangea\": \"#0063db\",\n\t\"lightHydrangea\": \"#57a8ff\",\n\t\"small\": \"26em\",\n\t\"medium\": \"40em\",\n\t\"large\": \"64em\",\n\t\"xlarge\": \"90em\",\n\t\"xxlarge\": \"120em\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/scenes/editCampaign/components/editor/scss/style.scss\n// module id = 530\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scenes/editCampaign/components/scss/style.scss\n// module id = 531\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"#editCampaigns .header {\\n  margin-bottom: 1.125rem; }\\n  #editCampaigns .header h1 {\\n    margin-bottom: 0.5rem; }\\n  #editCampaigns .header p.message {\\n    margin: 0;\\n    color: #ffab20; }\\n\\n#editCampaigns p.info {\\n  font-size: 1.25rem;\\n  color: #404040;\\n  margin: 0.125rem 0 1rem 0;\\n  line-height: initial; }\\n  @media screen and (min-width: 40em) {\\n    #editCampaigns p.info {\\n      font-size: 1.375rem; } }\\n\\n#editCampaigns p.title {\\n  font-size: 1.125rem;\\n  color: #808080;\\n  margin: 0.125rem 0;\\n  line-height: initial; }\\n  @media screen and (min-width: 40em) {\\n    #editCampaigns p.title {\\n      font-size: 1.25rem; } }\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"lightGraphite\": \"#808080\",\n\t\"mauiOrange\": \"#ffab20\",\n\t\"graphite\": \"#404040\",\n\t\"darkGraphite\": \"#101010\",\n\t\"brightGraphite\": \"#999999\",\n\t\"errorRed\": \"#ff5800\",\n\t\"darkErrorRed\": \"#cc4600\",\n\t\"blueHydrangea\": \"#3694ff\",\n\t\"darkBlueHydrangea\": \"#0063db\",\n\t\"lightHydrangea\": \"#57a8ff\",\n\t\"small\": \"26em\",\n\t\"medium\": \"40em\",\n\t\"large\": \"64em\",\n\t\"xlarge\": \"90em\",\n\t\"xxlarge\": \"120em\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/scenes/editCampaign/components/scss/style.scss\n// module id = 532\n// module chunks = 0"],"sourceRoot":""}